Index: lib/XMLQueryExpressor.hpp
===================================================================
--- lib/XMLQueryExpressor.hpp	(revision 1750)
+++ lib/XMLQueryExpressor.hpp	(working copy)
@@ -232,8 +232,7 @@
 	p_Select->express(this);
 	xml->close();
     }
-    // !!!2 -- use ConstructableOperation for p_ConstructTemplate
-    virtual void construct (const Construct* const, const TableOperation* p_ConstructTemplate, ProductionVector<const DatasetClause*>* p_DatasetClauses, WhereClause* p_WhereClause, SolutionModifier* p_SolutionModifier) {
+    virtual void construct (const Construct* const, const AssertableOperation* p_ConstructTemplate, ProductionVector<const DatasetClause*>* p_DatasetClauses, WhereClause* p_WhereClause, SolutionModifier* p_SolutionModifier) {
 	xml->open("Construct");
 	p_ConstructTemplate->express(this);
 	p_DatasetClauses->express(this);
@@ -264,13 +263,13 @@
 	p_WhereClause->express(this);
 	xml->close();
     }
-    virtual void insert (const Insert* const, const TableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
+    virtual void insert (const Insert* const, const AssertableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
 	xml->open("Insert");
 	p_GraphTemplate->express(this);
 	if (p_WhereClause) p_WhereClause->express(this);
 	xml->close();
     }
-    virtual void del (const Delete* const, const TableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
+    virtual void del (const Delete* const, const AssertableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
 	xml->open("Delete");
 	p_GraphTemplate->express(this);
 	p_WhereClause->express(this);
Index: lib/SWObjects.cpp
===================================================================
--- lib/SWObjects.cpp	(revision 1750)
+++ lib/SWObjects.cpp	(working copy)
@@ -2227,7 +2227,7 @@
 	    }
     }
 
-    TableOperationOnOperation* Bind::makeANewThis (const TableOperation* p_TableOperation) const {
+    TableOperation* Bind::makeANewThis (const TableOperation* p_TableOperation) const {
 	SWObjectDuplicator dup(NULL); // doesn't need to create new atoms.
 	m_expr->express(&dup);
 	return new Bind(p_TableOperation, dup.last.expression, m_label);
@@ -2533,8 +2533,8 @@
 	return ret;
     }
 
-    TableOperation* TableOperationOnOperation::getDNF ( ) const {
-	TableOperation* op = m_TableOperation->getDNF();
+    TableOperation* SelfMakerInterface::getDNF ( ) const {
+	TableOperation* op = getNestedTableOperation()->getDNF();
 	TableDisjunction* disjoints;
 	if ((disjoints = dynamic_cast<TableDisjunction*>(op)) == NULL) {
 	    return makeANewThis(op);
@@ -2785,7 +2785,7 @@
 	return dl.toTableOperation();
     }
 
-    TableOperationOnOperation* Filter::makeANewThis (const TableOperation* p_TableOperation) const {
+    TableOperation* Filter::makeANewThis (const TableOperation* p_TableOperation) const {
 	Filter* ret = new Filter(p_TableOperation);
 	SWObjectDuplicator dup(NULL); // doesn't need to create new atoms.
 	for (std::vector<const Expression*>::const_iterator it = m_Expressions.begin();
Index: lib/SPARQLParser/SPARQLParser.cpp
===================================================================
--- lib/SPARQLParser/SPARQLParser.cpp	(revision 1750)
+++ lib/SPARQLParser/SPARQLParser.cpp	(working copy)
@@ -45,12 +45,12 @@
 /* User implementation prologue.  */
 
 /* Line 299 of lalr1.cc  */
-#line 314 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 315 "lib/SPARQLParser/SPARQLParser.ypp"
 
 #include "../SPARQLScanner.hpp"
 
 /* Line 299 of lalr1.cc  */
-#line 467 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 468 "lib/SPARQLParser/SPARQLParser.ypp"
 
 #include "../SPARQLScanner.hpp"
 
@@ -461,7 +461,7 @@
 	  case 2:
 
 /* Line 690 of lalr1.cc  */
-#line 481 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 482 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.root = (yyval.p_Operation) = (yysemantic_stack_[(1) - (1)].p_Operation);
     }
@@ -470,7 +470,7 @@
   case 3:
 
 /* Line 690 of lalr1.cc  */
-#line 484 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 485 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.root = (yyval.p_Operation) = (yysemantic_stack_[(1) - (1)].p_Operation);
     }
@@ -479,7 +479,7 @@
   case 5:
 
 /* Line 690 of lalr1.cc  */
-#line 495 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 496 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	assert(driver.lastWhereClause != NULL);
 	if ((yysemantic_stack_[(3) - (3)].p_BindingClause) != NULL) // got a bindings clause
@@ -492,7 +492,7 @@
   case 10:
 
 /* Line 690 of lalr1.cc  */
-#line 514 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 515 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_BindingClause) = NULL;
     }
@@ -501,7 +501,7 @@
   case 19:
 
 /* Line 690 of lalr1.cc  */
-#line 543 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 544 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_TableOperation) = driver.curOp;
 	driver.startBindingSet();
@@ -511,7 +511,7 @@
   case 20:
 
 /* Line 690 of lalr1.cc  */
-#line 546 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 547 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  ResultSet* r = driver.endBindingSet();
 	  if ((yysemantic_stack_[(3) - (1)].p_RSName) != NULL) {
@@ -529,7 +529,7 @@
   case 21:
 
 /* Line 690 of lalr1.cc  */
-#line 561 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 562 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_RSName) = (yysemantic_stack_[(2) - (1)].p_RSName);
     }
@@ -538,7 +538,7 @@
   case 22:
 
 /* Line 690 of lalr1.cc  */
-#line 567 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 568 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_RSName) = NULL;
     }
@@ -547,7 +547,7 @@
   case 27:
 
 /* Line 690 of lalr1.cc  */
-#line 577 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 578 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	throw std::runtime_error("need to partition out results set part of SimpleEngine::loadDataOrResults");
     }
@@ -556,7 +556,7 @@
   case 38:
 
 /* Line 690 of lalr1.cc  */
-#line 611 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 612 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.startBindingRow();
       }
@@ -565,7 +565,7 @@
   case 39:
 
 /* Line 690 of lalr1.cc  */
-#line 613 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 614 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  driver.endBindingRow();
       }
@@ -574,7 +574,7 @@
   case 40:
 
 /* Line 690 of lalr1.cc  */
-#line 619 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 620 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.addBindingVarOrValue((yysemantic_stack_[(2) - (1)].p_TTerm));
     }
@@ -583,7 +583,7 @@
   case 52:
 
 /* Line 690 of lalr1.cc  */
-#line 657 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 658 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.startBindingRow();
       }
@@ -592,7 +592,7 @@
   case 53:
 
 /* Line 690 of lalr1.cc  */
-#line 659 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 660 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  driver.endBindingRow();
       }
@@ -601,7 +601,7 @@
   case 54:
 
 /* Line 690 of lalr1.cc  */
-#line 665 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 666 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.addBindingVarOrValue((yysemantic_stack_[(2) - (1)].p_TTerm));
     }
@@ -610,7 +610,7 @@
   case 59:
 
 /* Line 690 of lalr1.cc  */
-#line 684 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 685 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.startBindingRow(false);
       }
@@ -619,7 +619,7 @@
   case 60:
 
 /* Line 690 of lalr1.cc  */
-#line 686 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 687 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  driver.endBindingRow();
       }
@@ -628,7 +628,7 @@
   case 66:
 
 /* Line 690 of lalr1.cc  */
-#line 706 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 707 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.addBinding((yysemantic_stack_[(3) - (1)].p_TTerm), (yysemantic_stack_[(3) - (3)].p_TTerm)); 
     }
@@ -637,7 +637,7 @@
   case 67:
 
 /* Line 690 of lalr1.cc  */
-#line 709 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 710 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.addBinding((yysemantic_stack_[(3) - (1)].p_TTerm), (yysemantic_stack_[(3) - (3)].p_TTerm)); 
     }
@@ -646,7 +646,7 @@
   case 68:
 
 /* Line 690 of lalr1.cc  */
-#line 712 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 713 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.addBinding((yysemantic_stack_[(3) - (1)].p_TTerm), (yysemantic_stack_[(3) - (3)].p_TTerm)); 
     }
@@ -655,7 +655,7 @@
   case 69:
 
 /* Line 690 of lalr1.cc  */
-#line 718 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 719 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.setBase((yysemantic_stack_[(2) - (2)].p_URI)->getLexicalValue());
     }
@@ -664,7 +664,7 @@
   case 70:
 
 /* Line 690 of lalr1.cc  */
-#line 724 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 725 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.ignorePrefix(true);
       }
@@ -673,7 +673,7 @@
   case 71:
 
 /* Line 690 of lalr1.cc  */
-#line 726 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 727 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  driver.ignorePrefix(false);
       }
@@ -682,7 +682,7 @@
   case 72:
 
 /* Line 690 of lalr1.cc  */
-#line 728 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 729 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  std::string prefix((yysemantic_stack_[(5) - (3)].p_URI)->getLexicalValue());
 	  driver.addPrefix(prefix.substr(0, prefix.length()-1), (yysemantic_stack_[(5) - (5)].p_URI));
@@ -692,7 +692,7 @@
   case 73:
 
 /* Line 690 of lalr1.cc  */
-#line 736 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 737 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_parentCountStar) = driver.countStar;
 	driver.countStar = false;
@@ -702,7 +702,7 @@
   case 74:
 
 /* Line 690 of lalr1.cc  */
-#line 739 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 740 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.lastWhereClause = (yysemantic_stack_[(5) - (4)].p_WhereClause);
 	(yyval.p_Operation) = new Select((yysemantic_stack_[(5) - (2)].p_Project).distinctness, (yysemantic_stack_[(5) - (2)].p_Project).varSet, (yysemantic_stack_[(5) - (3)].p_DatasetClauses), (yysemantic_stack_[(5) - (4)].p_WhereClause), (yysemantic_stack_[(5) - (5)].p_SolutionModifier));
@@ -713,7 +713,7 @@
   case 75:
 
 /* Line 690 of lalr1.cc  */
-#line 748 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 749 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_DatasetClauses) = new ProductionVector<const DatasetClause*>();
     }
@@ -722,7 +722,7 @@
   case 76:
 
 /* Line 690 of lalr1.cc  */
-#line 751 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 752 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yysemantic_stack_[(2) - (1)].p_DatasetClauses)->push_back((yysemantic_stack_[(2) - (2)].p_DatasetClause));
 	(yyval.p_DatasetClauses) = (yysemantic_stack_[(2) - (1)].p_DatasetClauses);
@@ -732,7 +732,7 @@
   case 77:
 
 /* Line 690 of lalr1.cc  */
-#line 759 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 760 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_parentCountStar) = driver.countStar;
 	driver.countStar = false;
@@ -742,7 +742,7 @@
   case 78:
 
 /* Line 690 of lalr1.cc  */
-#line 762 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 763 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  (yyval.p_TTerm) = driver.curGraphName;
 	  driver.curGraphName = NULL;
@@ -752,7 +752,7 @@
   case 79:
 
 /* Line 690 of lalr1.cc  */
-#line 765 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 766 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.restoreFilter(NULL);
 	(yyval.p_TableOperation) = driver.curOp;
@@ -763,7 +763,7 @@
   case 80:
 
 /* Line 690 of lalr1.cc  */
-#line 769 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 770 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  if ((yysemantic_stack_[(7) - (7)].p_BindingClause) != NULL)
 	      (yysemantic_stack_[(7) - (5)].p_WhereClause)->m_GroupGraphPattern = driver.makeConjunction((yysemantic_stack_[(7) - (7)].p_BindingClause), (yysemantic_stack_[(7) - (5)].p_WhereClause)->m_GroupGraphPattern);
@@ -776,7 +776,7 @@
   case 81:
 
 /* Line 690 of lalr1.cc  */
-#line 780 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 781 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Project).distinctness = (yysemantic_stack_[(3) - (2)].p_distinctness);
 	(yyval.p_Project).varSet = (yysemantic_stack_[(3) - (3)].p_VarSet);
@@ -786,7 +786,7 @@
   case 82:
 
 /* Line 690 of lalr1.cc  */
-#line 788 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 789 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_distinctness) = DIST_distinct;
     }
@@ -795,7 +795,7 @@
   case 83:
 
 /* Line 690 of lalr1.cc  */
-#line 791 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 792 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_distinctness) = DIST_reduced;
     }
@@ -804,7 +804,7 @@
   case 84:
 
 /* Line 690 of lalr1.cc  */
-#line 798 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 799 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_distinctness) = DIST_all;
     }
@@ -813,7 +813,7 @@
   case 86:
 
 /* Line 690 of lalr1.cc  */
-#line 806 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 807 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Variable) = (yysemantic_stack_[(2) - (2)].p_Variable);
     }
@@ -822,7 +822,7 @@
   case 87:
 
 /* Line 690 of lalr1.cc  */
-#line 813 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 814 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Variable) = NULL;
     }
@@ -831,7 +831,7 @@
   case 89:
 
 /* Line 690 of lalr1.cc  */
-#line 821 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 822 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_ExpressionAlias) = (yysemantic_stack_[(4) - (3)].p_Variable) ? new ExpressionAlias((yysemantic_stack_[(4) - (2)].p_Expression), (yysemantic_stack_[(4) - (3)].p_Variable)) : new ExpressionAlias((yysemantic_stack_[(4) - (2)].p_Expression));
     }
@@ -840,7 +840,7 @@
   case 90:
 
 /* Line 690 of lalr1.cc  */
-#line 828 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 829 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_ExpressionAlias) = new ExpressionAlias(new TTermExpression((yysemantic_stack_[(1) - (1)].p_Variable)));
     }
@@ -849,7 +849,7 @@
   case 91:
 
 /* Line 690 of lalr1.cc  */
-#line 831 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 832 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_ExpressionAlias) = new ExpressionAlias((yysemantic_stack_[(1) - (1)].p_Expression));
     }
@@ -858,7 +858,7 @@
   case 92:
 
 /* Line 690 of lalr1.cc  */
-#line 834 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 835 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_ExpressionAlias) = new ExpressionAlias((yysemantic_stack_[(1) - (1)].p_Expression));
     }
@@ -867,7 +867,7 @@
   case 93:
 
 /* Line 690 of lalr1.cc  */
-#line 837 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 838 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_ExpressionAlias) = new ExpressionAlias((yysemantic_stack_[(1) - (1)].p_Expression));
     }
@@ -876,7 +876,7 @@
   case 94:
 
 /* Line 690 of lalr1.cc  */
-#line 840 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 841 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_ExpressionAlias) = new ExpressionAlias(new TTermExpression((yysemantic_stack_[(1) - (1)].p_RDFLiteral)));
     }
@@ -885,7 +885,7 @@
   case 95:
 
 /* Line 690 of lalr1.cc  */
-#line 843 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 844 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_ExpressionAlias) = new ExpressionAlias(new TTermExpression((yysemantic_stack_[(1) - (1)].p_NumericRDFLiteral)));
     }
@@ -894,7 +894,7 @@
   case 96:
 
 /* Line 690 of lalr1.cc  */
-#line 846 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 847 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_ExpressionAlias) = new ExpressionAlias(new TTermExpression((yysemantic_stack_[(1) - (1)].p_BooleanRDFLiteral)));
     }
@@ -903,7 +903,7 @@
   case 98:
 
 /* Line 690 of lalr1.cc  */
-#line 855 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 856 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_ExpressionAliaseList) = new ExpressionAliasList((yysemantic_stack_[(1) - (1)].p_ExpressionAlias));
     }
@@ -912,7 +912,7 @@
   case 99:
 
 /* Line 690 of lalr1.cc  */
-#line 858 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 859 "lib/SPARQLParser/SPARQLParser.ypp"
     {
     (yysemantic_stack_[(2) - (1)].p_ExpressionAliaseList)->push_back((yysemantic_stack_[(2) - (2)].p_ExpressionAlias));
     (yyval.p_ExpressionAliaseList) = (yysemantic_stack_[(2) - (1)].p_ExpressionAliaseList);
@@ -922,7 +922,7 @@
   case 100:
 
 /* Line 690 of lalr1.cc  */
-#line 866 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 867 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_VarSet) = (yysemantic_stack_[(1) - (1)].p_ExpressionAliaseList); // Grammar action needed for implicit upcast.
     }
@@ -931,7 +931,7 @@
   case 101:
 
 /* Line 690 of lalr1.cc  */
-#line 869 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 870 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_VarSet) = new StarVarSet();
     }
@@ -940,7 +940,7 @@
   case 102:
 
 /* Line 690 of lalr1.cc  */
-#line 876 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 877 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.curOp = NULL;
       }
@@ -949,18 +949,18 @@
   case 103:
 
 /* Line 690 of lalr1.cc  */
-#line 878 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 879 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  driver.lastWhereClause = (yysemantic_stack_[(6) - (5)].p_WhereClause);
 	  /* $2 is NO LONGER known to be a DefaultGraphPattern because of grammar restrictions. */
-	  (yyval.p_Operation) = new Construct((yysemantic_stack_[(6) - (2)].p_TableOperation), (yysemantic_stack_[(6) - (4)].p_DatasetClauses), (yysemantic_stack_[(6) - (5)].p_WhereClause), (yysemantic_stack_[(6) - (6)].p_SolutionModifier));
+	  (yyval.p_Operation) = new Construct((yysemantic_stack_[(6) - (2)].p_AssertableOperation), (yysemantic_stack_[(6) - (4)].p_DatasetClauses), (yysemantic_stack_[(6) - (5)].p_WhereClause), (yysemantic_stack_[(6) - (6)].p_SolutionModifier));
       }
     break;
 
   case 104:
 
 /* Line 690 of lalr1.cc  */
-#line 887 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 888 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.lastWhereClause = (yysemantic_stack_[(5) - (4)].p_WhereClause) ? (yysemantic_stack_[(5) - (4)].p_WhereClause) : new WhereClause(new DefaultGraphPattern());
 	(yyval.p_Operation) = new Describe((yysemantic_stack_[(5) - (2)].p_VarSet), (yysemantic_stack_[(5) - (3)].p_DatasetClauses), (yysemantic_stack_[(5) - (4)].p_WhereClause), (yysemantic_stack_[(5) - (5)].p_SolutionModifier));
@@ -970,7 +970,7 @@
   case 105:
 
 /* Line 690 of lalr1.cc  */
-#line 895 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 896 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_ExpressionAliaseList) = new ExpressionAliasList(new ExpressionAlias(new TTermExpression((yysemantic_stack_[(1) - (1)].p_TTerm))));
     }
@@ -979,7 +979,7 @@
   case 106:
 
 /* Line 690 of lalr1.cc  */
-#line 898 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 899 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yysemantic_stack_[(2) - (1)].p_ExpressionAliaseList)->push_back(new ExpressionAlias(new TTermExpression((yysemantic_stack_[(2) - (2)].p_TTerm))));
 	(yyval.p_ExpressionAliaseList) = (yysemantic_stack_[(2) - (1)].p_ExpressionAliaseList);
@@ -989,7 +989,7 @@
   case 107:
 
 /* Line 690 of lalr1.cc  */
-#line 906 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 907 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_VarSet) = (yysemantic_stack_[(1) - (1)].p_ExpressionAliaseList);
     }
@@ -998,7 +998,7 @@
   case 108:
 
 /* Line 690 of lalr1.cc  */
-#line 909 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 910 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_VarSet) = new StarVarSet();
     }
@@ -1007,7 +1007,7 @@
   case 109:
 
 /* Line 690 of lalr1.cc  */
-#line 916 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 917 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_WhereClause) = NULL;
     }
@@ -1016,7 +1016,7 @@
   case 111:
 
 /* Line 690 of lalr1.cc  */
-#line 924 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 925 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.lastWhereClause = (yysemantic_stack_[(3) - (3)].p_WhereClause);
 	(yyval.p_Operation) = new Ask((yysemantic_stack_[(3) - (2)].p_DatasetClauses), (yysemantic_stack_[(3) - (3)].p_WhereClause));
@@ -1026,7 +1026,7 @@
   case 112:
 
 /* Line 690 of lalr1.cc  */
-#line 932 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 933 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_DatasetClause) = (yysemantic_stack_[(2) - (2)].p_DatasetClause);
     }
@@ -1035,7 +1035,7 @@
   case 115:
 
 /* Line 690 of lalr1.cc  */
-#line 944 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 945 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_DatasetClause) = new DefaultGraphClause((yysemantic_stack_[(1) - (1)].p_TTerm), driver.atomFactory);
     }
@@ -1044,7 +1044,7 @@
   case 116:
 
 /* Line 690 of lalr1.cc  */
-#line 950 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 951 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_DatasetClause) = new NamedGraphClause((yysemantic_stack_[(2) - (2)].p_TTerm), driver.atomFactory);
     }
@@ -1053,7 +1053,7 @@
   case 117:
 
 /* Line 690 of lalr1.cc  */
-#line 956 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 957 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_TTerm) = (yysemantic_stack_[(1) - (1)].p_URI);
     }
@@ -1062,7 +1062,7 @@
   case 118:
 
 /* Line 690 of lalr1.cc  */
-#line 963 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 964 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.restoreFilter(NULL);
 	(yyval.p_WhereClause) = new WhereClause(driver.ensureGraphPattern());
@@ -1073,7 +1073,7 @@
   case 121:
 
 /* Line 690 of lalr1.cc  */
-#line 977 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 978 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_SolutionModifier) = new SolutionModifier((yysemantic_stack_[(4) - (1)].p_ExpressionAliaseList), (yysemantic_stack_[(4) - (2)].p_Expressions), (yysemantic_stack_[(4) - (3)].p_OrderConditions), (yysemantic_stack_[(4) - (4)].p_LimitOffsetPair).limit, (yysemantic_stack_[(4) - (4)].p_LimitOffsetPair).offset); // !!!
     }
@@ -1082,7 +1082,7 @@
   case 122:
 
 /* Line 690 of lalr1.cc  */
-#line 984 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 985 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_ExpressionAliaseList) = driver.countStar ? new ExpressionAliasList() : NULL;
     }
@@ -1091,7 +1091,7 @@
   case 124:
 
 /* Line 690 of lalr1.cc  */
-#line 992 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 993 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expressions) = NULL;
     }
@@ -1100,7 +1100,7 @@
   case 126:
 
 /* Line 690 of lalr1.cc  */
-#line 1000 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1001 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_OrderConditions) = NULL;
     }
@@ -1109,7 +1109,7 @@
   case 128:
 
 /* Line 690 of lalr1.cc  */
-#line 1008 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1009 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_LimitOffsetPair).limit = LIMIT_None;
 	(yyval.p_LimitOffsetPair).offset = OFFSET_None;
@@ -1119,7 +1119,7 @@
   case 130:
 
 /* Line 690 of lalr1.cc  */
-#line 1016 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1017 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_ExpressionAliaseList) = (yysemantic_stack_[(3) - (3)].p_ExpressionAliaseList);
     }
@@ -1128,7 +1128,7 @@
   case 131:
 
 /* Line 690 of lalr1.cc  */
-#line 1023 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1024 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_ExpressionAliaseList) = new ExpressionAliasList((yysemantic_stack_[(1) - (1)].p_ExpressionAlias));
     }
@@ -1137,7 +1137,7 @@
   case 132:
 
 /* Line 690 of lalr1.cc  */
-#line 1026 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1027 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yysemantic_stack_[(2) - (1)].p_ExpressionAliaseList)->push_back((yysemantic_stack_[(2) - (2)].p_ExpressionAlias));
 	(yyval.p_ExpressionAliaseList) = (yysemantic_stack_[(2) - (1)].p_ExpressionAliaseList);
@@ -1147,7 +1147,7 @@
   case 133:
 
 /* Line 690 of lalr1.cc  */
-#line 1033 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1034 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_ExpressionAlias) = new ExpressionAlias((yysemantic_stack_[(1) - (1)].p_Expression));
     }
@@ -1156,7 +1156,7 @@
   case 134:
 
 /* Line 690 of lalr1.cc  */
-#line 1036 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1037 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_ExpressionAlias) = new ExpressionAlias((yysemantic_stack_[(1) - (1)].p_Expression));
     }
@@ -1165,7 +1165,7 @@
   case 135:
 
 /* Line 690 of lalr1.cc  */
-#line 1039 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1040 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_ExpressionAlias) = (yysemantic_stack_[(4) - (3)].p_Variable) ? new ExpressionAlias((yysemantic_stack_[(4) - (2)].p_Expression), (yysemantic_stack_[(4) - (3)].p_Variable)) : new ExpressionAlias((yysemantic_stack_[(4) - (2)].p_Expression));
     }
@@ -1174,7 +1174,7 @@
   case 136:
 
 /* Line 690 of lalr1.cc  */
-#line 1042 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1043 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_ExpressionAlias) = new ExpressionAlias(new TTermExpression((yysemantic_stack_[(1) - (1)].p_Variable)));
     }
@@ -1183,7 +1183,7 @@
   case 137:
 
 /* Line 690 of lalr1.cc  */
-#line 1048 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1049 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expressions) = (yysemantic_stack_[(2) - (2)].p_Expressions);
 }
@@ -1192,7 +1192,7 @@
   case 138:
 
 /* Line 690 of lalr1.cc  */
-#line 1054 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1055 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expressions) = new ProductionVector<const Expression*>((yysemantic_stack_[(1) - (1)].p_Expression));
     }
@@ -1201,7 +1201,7 @@
   case 139:
 
 /* Line 690 of lalr1.cc  */
-#line 1057 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1058 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yysemantic_stack_[(2) - (1)].p_Expressions)->push_back((yysemantic_stack_[(2) - (2)].p_Expression));
 	(yyval.p_Expressions) = (yysemantic_stack_[(2) - (1)].p_Expressions);
@@ -1211,7 +1211,7 @@
   case 141:
 
 /* Line 690 of lalr1.cc  */
-#line 1069 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1070 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_OrderConditions) = (yysemantic_stack_[(3) - (3)].p_OrderConditions);
     }
@@ -1220,7 +1220,7 @@
   case 142:
 
 /* Line 690 of lalr1.cc  */
-#line 1076 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1077 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_OrderConditions) = new std::vector<s_OrderConditionPair>();
 	(yyval.p_OrderConditions)->push_back((yysemantic_stack_[(1) - (1)].p_OrderConditionPair));
@@ -1230,7 +1230,7 @@
   case 143:
 
 /* Line 690 of lalr1.cc  */
-#line 1080 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1081 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yysemantic_stack_[(2) - (1)].p_OrderConditions)->push_back((yysemantic_stack_[(2) - (2)].p_OrderConditionPair));
 	(yyval.p_OrderConditions) = (yysemantic_stack_[(2) - (1)].p_OrderConditions);
@@ -1240,7 +1240,7 @@
   case 145:
 
 /* Line 690 of lalr1.cc  */
-#line 1090 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1091 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_OrderConditionPair).ascOrDesc = ORDER_Asc;
 	(yyval.p_OrderConditionPair).expression = (yysemantic_stack_[(1) - (1)].p_Expression);
@@ -1250,7 +1250,7 @@
   case 146:
 
 /* Line 690 of lalr1.cc  */
-#line 1098 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1099 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_e_ASCorDESC) = ORDER_Asc;
     }
@@ -1259,7 +1259,7 @@
   case 147:
 
 /* Line 690 of lalr1.cc  */
-#line 1101 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1102 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_e_ASCorDESC) = ORDER_Desc;
     }
@@ -1268,7 +1268,7 @@
   case 148:
 
 /* Line 690 of lalr1.cc  */
-#line 1109 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1110 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_OrderConditionPair).ascOrDesc = (yysemantic_stack_[(2) - (1)].p_e_ASCorDESC);
 	(yyval.p_OrderConditionPair).expression = (yysemantic_stack_[(2) - (2)].p_Expression);
@@ -1278,7 +1278,7 @@
   case 150:
 
 /* Line 690 of lalr1.cc  */
-#line 1118 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1119 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new TTermExpression((yysemantic_stack_[(1) - (1)].p_Variable));
     }
@@ -1287,7 +1287,7 @@
   case 151:
 
 /* Line 690 of lalr1.cc  */
-#line 1125 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1126 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_LimitOffsetPair).limit = (yysemantic_stack_[(2) - (1)].p_LimitOffsetPair).limit;
 	(yyval.p_LimitOffsetPair).offset = (yysemantic_stack_[(2) - (2)].p_LimitOffsetPair).offset;
@@ -1297,7 +1297,7 @@
   case 152:
 
 /* Line 690 of lalr1.cc  */
-#line 1129 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1130 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_LimitOffsetPair).limit = (yysemantic_stack_[(2) - (2)].p_LimitOffsetPair).limit;
 	(yyval.p_LimitOffsetPair).offset = (yysemantic_stack_[(2) - (1)].p_LimitOffsetPair).offset;
@@ -1307,7 +1307,7 @@
   case 153:
 
 /* Line 690 of lalr1.cc  */
-#line 1137 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1138 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_LimitOffsetPair).offset = OFFSET_None;
     }
@@ -1316,7 +1316,7 @@
   case 155:
 
 /* Line 690 of lalr1.cc  */
-#line 1145 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1146 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_LimitOffsetPair).limit = LIMIT_None;
     }
@@ -1325,7 +1325,7 @@
   case 157:
 
 /* Line 690 of lalr1.cc  */
-#line 1152 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1153 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_LimitOffsetPair).limit = ((IntegerRDFLiteral*)(yysemantic_stack_[(2) - (2)].p_NumericRDFLiteral))->getValue();
     }
@@ -1334,7 +1334,7 @@
   case 158:
 
 /* Line 690 of lalr1.cc  */
-#line 1158 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1159 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_LimitOffsetPair).offset = ((IntegerRDFLiteral*)(yysemantic_stack_[(2) - (2)].p_NumericRDFLiteral))->getValue();
     }
@@ -1343,7 +1343,7 @@
   case 159:
 
 /* Line 690 of lalr1.cc  */
-#line 1165 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1166 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.startBindingSet();
       }
@@ -1352,7 +1352,7 @@
   case 160:
 
 /* Line 690 of lalr1.cc  */
-#line 1167 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1168 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  (yyval.p_BindingClause) = new BindingClause(driver.endBindingSet());
       }
@@ -1361,7 +1361,7 @@
   case 162:
 
 /* Line 690 of lalr1.cc  */
-#line 1175 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1176 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.addBindingVar((yysemantic_stack_[(2) - (2)].p_Variable));
     }
@@ -1370,7 +1370,7 @@
   case 163:
 
 /* Line 690 of lalr1.cc  */
-#line 1181 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1182 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.addBindingValue((yysemantic_stack_[(1) - (1)].p_TTerm));
     }
@@ -1379,7 +1379,7 @@
   case 164:
 
 /* Line 690 of lalr1.cc  */
-#line 1184 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1185 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.addBindingValue((yysemantic_stack_[(2) - (2)].p_TTerm));
     }
@@ -1388,7 +1388,7 @@
   case 165:
 
 /* Line 690 of lalr1.cc  */
-#line 1190 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1191 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.startBindingRow(); // @@ push down to _Q_O_QGT_LPAREN_E_S_QBindingValue_E_Plus_S_QGT_RPAREN_E_Or_QNIL_E_C_E_Star?
       }
@@ -1397,7 +1397,7 @@
   case 166:
 
 /* Line 690 of lalr1.cc  */
-#line 1192 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1193 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  driver.endBindingRow();
       }
@@ -1406,7 +1406,7 @@
   case 167:
 
 /* Line 690 of lalr1.cc  */
-#line 1195 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1196 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.startBindingRow();
 	driver.endBindingRow();
@@ -1416,7 +1416,7 @@
   case 170:
 
 /* Line 690 of lalr1.cc  */
-#line 1207 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1208 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_TTerm) = (yysemantic_stack_[(1) - (1)].p_URI);
     }
@@ -1425,7 +1425,7 @@
   case 171:
 
 /* Line 690 of lalr1.cc  */
-#line 1210 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1211 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_TTerm) = (yysemantic_stack_[(1) - (1)].p_RDFLiteral);
     }
@@ -1434,7 +1434,7 @@
   case 172:
 
 /* Line 690 of lalr1.cc  */
-#line 1213 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1214 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_TTerm) = (yysemantic_stack_[(1) - (1)].p_NumericRDFLiteral);
     }
@@ -1443,7 +1443,7 @@
   case 173:
 
 /* Line 690 of lalr1.cc  */
-#line 1216 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1217 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_TTerm) = (yysemantic_stack_[(1) - (1)].p_BooleanRDFLiteral);
     }
@@ -1452,7 +1452,7 @@
   case 174:
 
 /* Line 690 of lalr1.cc  */
-#line 1219 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1220 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_TTerm) = TTerm::Unbound;
     }
@@ -1461,7 +1461,7 @@
   case 175:
 
 /* Line 690 of lalr1.cc  */
-#line 1222 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1223 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_TTerm) = TTerm::Unbound;
     }
@@ -1470,7 +1470,7 @@
   case 176:
 
 /* Line 690 of lalr1.cc  */
-#line 1225 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1226 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_TTerm) = (yysemantic_stack_[(1) - (1)].p_Variable);
     }
@@ -1479,7 +1479,7 @@
   case 178:
 
 /* Line 690 of lalr1.cc  */
-#line 1235 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1236 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	OperationSet* ret = driver.root ? dynamic_cast<OperationSet*>(driver.root) : new OperationSet();
 	ret->push_back((yysemantic_stack_[(2) - (2)].p_Operation));
@@ -1490,7 +1490,7 @@
   case 179:
 
 /* Line 690 of lalr1.cc  */
-#line 1239 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1240 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  (yyval.p_Operation) = driver.root;
 	}
@@ -1499,7 +1499,7 @@
   case 196:
 
 /* Line 690 of lalr1.cc  */
-#line 1273 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1274 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Operation) = new Load((yysemantic_stack_[(3) - (2)].p_URI), (yysemantic_stack_[(3) - (3)].p_URI));
     }
@@ -1508,7 +1508,7 @@
   case 197:
 
 /* Line 690 of lalr1.cc  */
-#line 1280 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1281 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_URI) = (yysemantic_stack_[(2) - (2)].p_URI);
     }
@@ -1517,7 +1517,7 @@
   case 198:
 
 /* Line 690 of lalr1.cc  */
-#line 1287 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1288 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_URI) = NULL;
     }
@@ -1526,7 +1526,7 @@
   case 200:
 
 /* Line 690 of lalr1.cc  */
-#line 1294 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1295 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Operation) = new Clear((yysemantic_stack_[(3) - (2)].p_Silence), (yysemantic_stack_[(3) - (3)].p_URI));
     }
@@ -1535,7 +1535,7 @@
   case 201:
 
 /* Line 690 of lalr1.cc  */
-#line 1300 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1301 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Silence) = SILENT_No;
     }
@@ -1544,7 +1544,7 @@
   case 202:
 
 /* Line 690 of lalr1.cc  */
-#line 1303 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1304 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Silence) = SILENT_Yes;
 }
@@ -1553,7 +1553,7 @@
   case 203:
 
 /* Line 690 of lalr1.cc  */
-#line 1309 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1310 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Operation) = new Drop((yysemantic_stack_[(3) - (2)].p_Silence), (yysemantic_stack_[(3) - (3)].p_URI));
 }
@@ -1562,7 +1562,7 @@
   case 204:
 
 /* Line 690 of lalr1.cc  */
-#line 1315 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1316 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Operation) = new Create((yysemantic_stack_[(3) - (2)].p_Silence), (yysemantic_stack_[(3) - (3)].p_URI));
     }
@@ -1571,7 +1571,7 @@
   case 205:
 
 /* Line 690 of lalr1.cc  */
-#line 1321 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1322 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Operation) = new Add((yysemantic_stack_[(5) - (2)].p_Silence), (yysemantic_stack_[(5) - (3)].p_URI), (yysemantic_stack_[(5) - (5)].p_URI));
 }
@@ -1580,7 +1580,7 @@
   case 206:
 
 /* Line 690 of lalr1.cc  */
-#line 1327 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1328 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Operation) = new Move((yysemantic_stack_[(5) - (2)].p_Silence), (yysemantic_stack_[(5) - (3)].p_URI), (yysemantic_stack_[(5) - (5)].p_URI));
 }
@@ -1589,7 +1589,7 @@
   case 207:
 
 /* Line 690 of lalr1.cc  */
-#line 1333 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1334 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Operation) = new Copy((yysemantic_stack_[(5) - (2)].p_Silence), (yysemantic_stack_[(5) - (3)].p_URI), (yysemantic_stack_[(5) - (5)].p_URI));
 }
@@ -1598,9 +1598,9 @@
   case 208:
 
 /* Line 690 of lalr1.cc  */
-#line 1339 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1340 "lib/SPARQLParser/SPARQLParser.ypp"
     {
-	(yyval.p_Operation) = new Insert((yysemantic_stack_[(2) - (2)].p_TableOperation), NULL);
+	(yyval.p_Operation) = new Insert((yysemantic_stack_[(2) - (2)].p_AssertableOperation), NULL);
 	driver.curOp = NULL;
 	driver.curBGP = NULL;
     }
@@ -1609,9 +1609,9 @@
   case 209:
 
 /* Line 690 of lalr1.cc  */
-#line 1347 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1348 "lib/SPARQLParser/SPARQLParser.ypp"
     {
-	(yyval.p_Operation) = new Delete((yysemantic_stack_[(2) - (2)].p_TableOperation), NULL);
+	(yyval.p_Operation) = new Delete((yysemantic_stack_[(2) - (2)].p_AssertableOperation), NULL);
 	driver.curOp = NULL;
 	driver.curBGP = NULL;
     }
@@ -1620,16 +1620,16 @@
   case 210:
 
 /* Line 690 of lalr1.cc  */
-#line 1355 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1356 "lib/SPARQLParser/SPARQLParser.ypp"
     {
-	(yyval.p_Operation) = new Delete((yysemantic_stack_[(2) - (2)].p_TableOperation), NULL);
+	(yyval.p_Operation) = new Delete((yysemantic_stack_[(2) - (2)].p_AssertableOperation), NULL);
     }
     break;
 
   case 211:
 
 /* Line 690 of lalr1.cc  */
-#line 1362 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1363 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	if ((yysemantic_stack_[(5) - (1)].p_URI))
 	    w3c_sw_NEED_IMPL("WITH <URI> (DELETE INSERT?|INSERT) ...");
@@ -1641,7 +1641,7 @@
   case 212:
 
 /* Line 690 of lalr1.cc  */
-#line 1371 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1372 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_URI) = (yysemantic_stack_[(2) - (2)].p_URI);
     }
@@ -1650,7 +1650,7 @@
   case 213:
 
 /* Line 690 of lalr1.cc  */
-#line 1377 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1378 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_URI) = NULL;
     }
@@ -1659,7 +1659,7 @@
   case 215:
 
 /* Line 690 of lalr1.cc  */
-#line 1384 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1385 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Insert) = NULL;
     }
@@ -1668,7 +1668,7 @@
   case 217:
 
 /* Line 690 of lalr1.cc  */
-#line 1391 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1392 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_DeleteInsert).del = (yysemantic_stack_[(2) - (1)].p_Delete);
 	(yyval.p_DeleteInsert).ins = (yysemantic_stack_[(2) - (2)].p_Insert);
@@ -1678,7 +1678,7 @@
   case 218:
 
 /* Line 690 of lalr1.cc  */
-#line 1395 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1396 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_DeleteInsert).del = NULL;
 	(yyval.p_DeleteInsert).ins = (yysemantic_stack_[(1) - (1)].p_Insert);
@@ -1688,7 +1688,7 @@
   case 220:
 
 /* Line 690 of lalr1.cc  */
-#line 1403 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1404 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	w3c_sw_NEED_IMPL("_QUsingClause_E_Star");
     }
@@ -1697,25 +1697,25 @@
   case 221:
 
 /* Line 690 of lalr1.cc  */
-#line 1409 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1410 "lib/SPARQLParser/SPARQLParser.ypp"
     {
-	(yyval.p_Delete) = new Delete((yysemantic_stack_[(2) - (2)].p_TableOperation), NULL);
+	(yyval.p_Delete) = new Delete((yysemantic_stack_[(2) - (2)].p_AssertableOperation), NULL);
     }
     break;
 
   case 222:
 
 /* Line 690 of lalr1.cc  */
-#line 1415 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1416 "lib/SPARQLParser/SPARQLParser.ypp"
     {
-	(yyval.p_Insert) = new Insert((yysemantic_stack_[(2) - (2)].p_TableOperation), NULL);
+	(yyval.p_Insert) = new Insert((yysemantic_stack_[(2) - (2)].p_AssertableOperation), NULL);
     }
     break;
 
   case 223:
 
 /* Line 690 of lalr1.cc  */
-#line 1421 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1422 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	w3c_sw_NEED_IMPL("@@");
     }
@@ -1724,7 +1724,7 @@
   case 224:
 
 /* Line 690 of lalr1.cc  */
-#line 1427 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1428 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	w3c_sw_NEED_IMPL("@@");
     }
@@ -1733,7 +1733,7 @@
   case 225:
 
 /* Line 690 of lalr1.cc  */
-#line 1430 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1431 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	w3c_sw_NEED_IMPL("@@");
     }
@@ -1742,7 +1742,7 @@
   case 226:
 
 /* Line 690 of lalr1.cc  */
-#line 1436 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1437 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_URI) = NULL;
     }
@@ -1751,7 +1751,7 @@
   case 227:
 
 /* Line 690 of lalr1.cc  */
-#line 1439 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1440 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_URI) = (yysemantic_stack_[(2) - (2)].p_URI);
     }
@@ -1760,7 +1760,7 @@
   case 230:
 
 /* Line 690 of lalr1.cc  */
-#line 1450 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1451 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_URI) = (yysemantic_stack_[(2) - (2)].p_URI);
     }
@@ -1769,7 +1769,7 @@
   case 231:
 
 /* Line 690 of lalr1.cc  */
-#line 1456 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1457 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_URI) = (yysemantic_stack_[(1) - (1)].p_URI);
     }
@@ -1778,7 +1778,7 @@
   case 232:
 
 /* Line 690 of lalr1.cc  */
-#line 1459 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1460 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	w3c_sw_NEED_IMPL("DEFAULT");
       }
@@ -1787,7 +1787,7 @@
   case 233:
 
 /* Line 690 of lalr1.cc  */
-#line 1462 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1463 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	w3c_sw_NEED_IMPL("NAMED");
       }
@@ -1796,7 +1796,7 @@
   case 234:
 
 /* Line 690 of lalr1.cc  */
-#line 1465 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1466 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	w3c_sw_NEED_IMPL("ALL");
       }
@@ -1805,25 +1805,25 @@
   case 235:
 
 /* Line 690 of lalr1.cc  */
-#line 1472 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1473 "lib/SPARQLParser/SPARQLParser.ypp"
     {
-	(yyval.p_TableOperation) = (yysemantic_stack_[(3) - (2)].p_TableOperation);
+	(yyval.p_AssertableOperation) = (yysemantic_stack_[(3) - (2)].p_AssertableOperation);
     }
     break;
 
   case 236:
 
 /* Line 690 of lalr1.cc  */
-#line 1478 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1479 "lib/SPARQLParser/SPARQLParser.ypp"
     {
-	(yyval.p_TableOperation) = (yysemantic_stack_[(3) - (2)].p_TableOperation);
+	(yyval.p_AssertableOperation) = (yysemantic_stack_[(3) - (2)].p_AssertableOperation);
     }
     break;
 
   case 237:
 
 /* Line 690 of lalr1.cc  */
-#line 1484 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1485 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.curBGP = NULL;
       }
@@ -1832,9 +1832,9 @@
   case 238:
 
 /* Line 690 of lalr1.cc  */
-#line 1486 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1487 "lib/SPARQLParser/SPARQLParser.ypp"
     {
-	  (yyval.p_TableOperation) = driver.ensureGraphPattern();
+	  (yyval.p_AssertableOperation) = (const AssertableOperation*)driver.ensureGraphPattern();
 	  driver.curOp = NULL;
       }
     break;
@@ -1842,7 +1842,7 @@
   case 246:
 
 /* Line 690 of lalr1.cc  */
-#line 1514 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1515 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.restoreFilter(NULL);
 	(yyval.p_TableOperation) = driver.curOp;
@@ -1854,7 +1854,7 @@
   case 247:
 
 /* Line 690 of lalr1.cc  */
-#line 1519 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1520 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  (yyval.p_TTerm) = driver.curGraphName;
 	  driver.curGraphName = (yysemantic_stack_[(3) - (3)].p_TTerm);
@@ -1864,7 +1864,7 @@
   case 248:
 
 /* Line 690 of lalr1.cc  */
-#line 1522 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1523 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.curBGP = NULL;
 	driver.curOp = NULL;
@@ -1874,7 +1874,7 @@
   case 249:
 
 /* Line 690 of lalr1.cc  */
-#line 1525 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1526 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  driver.curBGP = NULL;
 	  driver.curOp = driver.makeConjunction((yysemantic_stack_[(8) - (1)].p_TableOperation), new GraphGraphPattern((yysemantic_stack_[(8) - (3)].p_TTerm), driver.curOp));
@@ -1885,7 +1885,7 @@
   case 255:
 
 /* Line 690 of lalr1.cc  */
-#line 1547 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1548 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	BindingsMap::const_iterator rs = driver.bindingsMap.find((yysemantic_stack_[(1) - (1)].p_RSName)->name);
 	if (rs == driver.bindingsMap.end())
@@ -1900,7 +1900,7 @@
   case 258:
 
 /* Line 690 of lalr1.cc  */
-#line 1566 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1567 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.curBGP = NULL;
       }
@@ -1909,7 +1909,7 @@
   case 259:
 
 /* Line 690 of lalr1.cc  */
-#line 1568 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1569 "lib/SPARQLParser/SPARQLParser.ypp"
     {
  	  // if ($2) LINE << $2 << ": " << *$2 << "--\n";
 	  // if ($4) LINE << $4 << ": " << *$4 << "--\n";
@@ -1920,7 +1920,7 @@
   case 277:
 
 /* Line 690 of lalr1.cc  */
-#line 1639 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1640 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.curOp = driver.curOp ? driver.makeConjunction(driver.curOp, (yysemantic_stack_[(1) - (1)].p_BindingClause)) : (yysemantic_stack_[(1) - (1)].p_BindingClause);
     }
@@ -1929,7 +1929,7 @@
   case 279:
 
 /* Line 690 of lalr1.cc  */
-#line 1646 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1647 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.curOp = new Print(driver.curOp);
     }
@@ -1938,7 +1938,7 @@
   case 280:
 
 /* Line 690 of lalr1.cc  */
-#line 1652 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1653 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.restoreFilter(NULL);
 	(yyval.p_TableOperation) = driver.curOp;
@@ -1949,7 +1949,7 @@
   case 281:
 
 /* Line 690 of lalr1.cc  */
-#line 1656 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1657 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  OptionalGraphPattern* ret = new OptionalGraphPattern(driver.ensureGraphPattern());
 	  if (driver.curFilter) {
@@ -1964,7 +1964,7 @@
   case 282:
 
 /* Line 690 of lalr1.cc  */
-#line 1668 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1669 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.restoreFilter(NULL);
 	(yyval.p_TableOperation) = driver.curOp;
@@ -1975,7 +1975,7 @@
   case 283:
 
 /* Line 690 of lalr1.cc  */
-#line 1672 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1673 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  (yyval.p_ParserFilter) = driver.saveFilter();
       }
@@ -1984,7 +1984,7 @@
   case 284:
 
 /* Line 690 of lalr1.cc  */
-#line 1674 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1675 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  (yyval.p_TTerm) = driver.curGraphName;
 	  driver.curGraphName = (yysemantic_stack_[(4) - (4)].p_TTerm);
@@ -1994,7 +1994,7 @@
   case 285:
 
 /* Line 690 of lalr1.cc  */
-#line 1677 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1678 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  driver.restoreFilter((yysemantic_stack_[(6) - (3)].p_ParserFilter));
 	  driver.curOp = driver.makeConjunction((yysemantic_stack_[(6) - (2)].p_TableOperation), new GraphGraphPattern((yysemantic_stack_[(6) - (4)].p_TTerm), driver.curOp));
@@ -2005,7 +2005,7 @@
   case 286:
 
 /* Line 690 of lalr1.cc  */
-#line 1685 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1686 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.restoreFilter(NULL);
 	(yyval.p_TableOperation) = driver.curOp;
@@ -2016,7 +2016,7 @@
   case 287:
 
 /* Line 690 of lalr1.cc  */
-#line 1689 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1690 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  (yyval.p_ParserFilter) = driver.saveFilter();
       }
@@ -2025,7 +2025,7 @@
   case 288:
 
 /* Line 690 of lalr1.cc  */
-#line 1691 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1692 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  (yyval.p_TTerm) = driver.curGraphName;
 	  driver.curGraphName = NULL;
@@ -2035,7 +2035,7 @@
   case 289:
 
 /* Line 690 of lalr1.cc  */
-#line 1694 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1695 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  driver.restoreFilter((yysemantic_stack_[(7) - (3)].p_ParserFilter));
 	  driver.curOp = driver.makeConjunction((yysemantic_stack_[(7) - (2)].p_TableOperation), new ServiceGraphPattern((yysemantic_stack_[(7) - (6)].p_TTerm), driver.curOp, (yysemantic_stack_[(7) - (5)].p_Silence), driver.atomFactory, false));
@@ -2046,7 +2046,7 @@
   case 290:
 
 /* Line 690 of lalr1.cc  */
-#line 1702 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1703 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.curOp = new Bind(driver.ensureGraphPattern(), (yysemantic_stack_[(6) - (3)].p_Expression), (yysemantic_stack_[(6) - (5)].p_Variable));
 	// no more triples go into the current BGP, per
@@ -2060,7 +2060,7 @@
   case 291:
 
 /* Line 690 of lalr1.cc  */
-#line 1713 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1714 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.restoreFilter(NULL);
 	(yyval.p_TableOperation) = driver.curOp;
@@ -2071,7 +2071,7 @@
   case 292:
 
 /* Line 690 of lalr1.cc  */
-#line 1717 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1718 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  (yyval.p_ParserFilter) = driver.saveFilter();
       }
@@ -2080,7 +2080,7 @@
   case 293:
 
 /* Line 690 of lalr1.cc  */
-#line 1719 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1720 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  driver.restoreFilter((yysemantic_stack_[(4) - (3)].p_ParserFilter));
 	  driver.curOp = driver.makeConjunction((yysemantic_stack_[(4) - (2)].p_TableOperation), new MinusGraphPattern(driver.ensureGraphPattern()));
@@ -2090,7 +2090,7 @@
   case 294:
 
 /* Line 690 of lalr1.cc  */
-#line 1727 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1728 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.restoreFilter(NULL);
 	(yyval.p_TableOperation) = driver.curOp;
@@ -2101,7 +2101,7 @@
   case 295:
 
 /* Line 690 of lalr1.cc  */
-#line 1731 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1732 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  (yyval.p_ParserFilter) = driver.saveFilter();
       }
@@ -2110,7 +2110,7 @@
   case 296:
 
 /* Line 690 of lalr1.cc  */
-#line 1733 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1734 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  driver.restoreFilter((yysemantic_stack_[(4) - (2)].p_ParserFilter));
 	  driver.curOp = driver.makeConjunction((yysemantic_stack_[(4) - (1)].p_TableOperation), driver.curOp);
@@ -2120,7 +2120,7 @@
   case 297:
 
 /* Line 690 of lalr1.cc  */
-#line 1741 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1742 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.ensureGraphPattern();
 	driver.restoreFilter(NULL);
@@ -2132,7 +2132,7 @@
   case 298:
 
 /* Line 690 of lalr1.cc  */
-#line 1746 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1747 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  driver.restoreFilter(NULL);
 	  driver.curOp = driver.makeDisjunction((yysemantic_stack_[(3) - (2)].p_TableOperation), driver.ensureGraphPattern());
@@ -2142,7 +2142,7 @@
   case 301:
 
 /* Line 690 of lalr1.cc  */
-#line 1759 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1760 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	if (driver.curFilter == NULL) {
 	    driver.ensureGraphPattern();
@@ -2155,7 +2155,7 @@
   case 305:
 
 /* Line 690 of lalr1.cc  */
-#line 1775 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1776 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall((yysemantic_stack_[(2) - (1)].p_URI), (yysemantic_stack_[(2) - (2)].p_ArgList)));
     }
@@ -2164,7 +2164,7 @@
   case 306:
 
 /* Line 690 of lalr1.cc  */
-#line 1783 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1784 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_ArgList) = NULL;
     }
@@ -2173,7 +2173,7 @@
   case 307:
 
 /* Line 690 of lalr1.cc  */
-#line 1787 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1788 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expressions) = driver.curExprList;
 	driver.curExprList = new ProductionVector<const Expression*>((yysemantic_stack_[(3) - (3)].p_Expression));
@@ -2183,7 +2183,7 @@
   case 308:
 
 /* Line 690 of lalr1.cc  */
-#line 1790 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1791 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  (yyval.p_ArgList) = new ArgList(driver.curExprList); // !!! $2, 
 	  driver.curExprList = (yysemantic_stack_[(6) - (4)].p_Expressions);
@@ -2193,7 +2193,7 @@
   case 309:
 
 /* Line 690 of lalr1.cc  */
-#line 1797 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1798 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_distinctness) = DIST_all;
     }
@@ -2202,7 +2202,7 @@
   case 310:
 
 /* Line 690 of lalr1.cc  */
-#line 1800 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1801 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_distinctness) = DIST_distinct;
     }
@@ -2211,7 +2211,7 @@
   case 311:
 
 /* Line 690 of lalr1.cc  */
-#line 1807 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1808 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = (yysemantic_stack_[(2) - (2)].p_Expression);
     }
@@ -2220,7 +2220,7 @@
   case 313:
 
 /* Line 690 of lalr1.cc  */
-#line 1815 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1816 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.curExprList->push_back((yysemantic_stack_[(2) - (2)].p_Expression));
     }
@@ -2229,7 +2229,7 @@
   case 314:
 
 /* Line 690 of lalr1.cc  */
-#line 1829 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1830 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expressions) = NULL;
     }
@@ -2238,7 +2238,7 @@
   case 315:
 
 /* Line 690 of lalr1.cc  */
-#line 1832 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1833 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expressions) = driver.curExprList;
 	driver.curExprList = new ProductionVector<const Expression*>((yysemantic_stack_[(2) - (2)].p_Expression));
@@ -2248,7 +2248,7 @@
   case 316:
 
 /* Line 690 of lalr1.cc  */
-#line 1835 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1836 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  (yyval.p_Expressions) = driver.curExprList;
 	  driver.curExprList = (yysemantic_stack_[(5) - (3)].p_Expressions);
@@ -2258,7 +2258,7 @@
   case 317:
 
 /* Line 690 of lalr1.cc  */
-#line 1842 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1843 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.curSubject = (yysemantic_stack_[(1) - (1)].p_TTerm);
     }
@@ -2267,7 +2267,7 @@
   case 319:
 
 /* Line 690 of lalr1.cc  */
-#line 1845 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1846 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.curSubject = (yysemantic_stack_[(1) - (1)].p_TTerm);
     }
@@ -2276,7 +2276,7 @@
   case 335:
 
 /* Line 690 of lalr1.cc  */
-#line 1905 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1906 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.ensureBasicGraphPattern();
 	driver.curBGP->addTriplePattern(driver.atomFactory->getTriple(driver.curSubject, driver.curPredicate, (yysemantic_stack_[(1) - (1)].p_TTerm)));
@@ -2286,7 +2286,7 @@
   case 336:
 
 /* Line 690 of lalr1.cc  */
-#line 1912 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1913 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_TTerm) = (yysemantic_stack_[(1) - (1)].p_TTerm);
 	driver.curPredicate = (yyval.p_TTerm);
@@ -2296,7 +2296,7 @@
   case 337:
 
 /* Line 690 of lalr1.cc  */
-#line 1916 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1917 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_TTerm) = driver.getURI("http://www.w3.org/1999/02/22-rdf-syntax-ns#type");
 	driver.curPredicate = (yyval.p_TTerm);
@@ -2306,7 +2306,7 @@
   case 338:
 
 /* Line 690 of lalr1.cc  */
-#line 1924 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1925 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.curSubject = (yysemantic_stack_[(1) - (1)].p_TTerm);
       }
@@ -2315,7 +2315,7 @@
   case 340:
 
 /* Line 690 of lalr1.cc  */
-#line 1927 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1928 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.curSubject = (yysemantic_stack_[(1) - (1)].p_TTerm);
       }
@@ -2324,7 +2324,7 @@
   case 342:
 
 /* Line 690 of lalr1.cc  */
-#line 1933 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1934 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.curPredicate = (yysemantic_stack_[(1) - (1)].p_TTerm);
       }
@@ -2333,7 +2333,7 @@
   case 346:
 
 /* Line 690 of lalr1.cc  */
-#line 1944 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1945 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.curPredicate = (yysemantic_stack_[(1) - (1)].p_TTerm);
       }
@@ -2342,7 +2342,7 @@
   case 355:
 
 /* Line 690 of lalr1.cc  */
-#line 1972 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 1973 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_TTerm) = (yysemantic_stack_[(1) - (1)].p_Variable);
     }
@@ -2351,7 +2351,7 @@
   case 362:
 
 /* Line 690 of lalr1.cc  */
-#line 1999 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2000 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	w3c_sw_NEED_IMPL("@@@");
     }
@@ -2360,7 +2360,7 @@
   case 364:
 
 /* Line 690 of lalr1.cc  */
-#line 2006 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2007 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	w3c_sw_NEED_IMPL("@@@");
     }
@@ -2369,7 +2369,7 @@
   case 367:
 
 /* Line 690 of lalr1.cc  */
-#line 2017 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2018 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	w3c_sw_NEED_IMPL("@@@");
     }
@@ -2378,7 +2378,7 @@
   case 369:
 
 /* Line 690 of lalr1.cc  */
-#line 2024 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2025 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	w3c_sw_NEED_IMPL("@@@");
     }
@@ -2387,7 +2387,7 @@
   case 382:
 
 /* Line 690 of lalr1.cc  */
-#line 2060 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2061 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_TTerm) = (yysemantic_stack_[(1) - (1)].p_URI);
     }
@@ -2396,7 +2396,7 @@
   case 383:
 
 /* Line 690 of lalr1.cc  */
-#line 2063 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2064 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_TTerm) = driver.getURI("http://www.w3.org/1999/02/22-rdf-syntax-ns#type");
     }
@@ -2405,7 +2405,7 @@
   case 384:
 
 /* Line 690 of lalr1.cc  */
-#line 2066 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2067 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	w3c_sw_NEED_IMPL("@@@");
     }
@@ -2414,7 +2414,7 @@
   case 385:
 
 /* Line 690 of lalr1.cc  */
-#line 2069 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2070 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	w3c_sw_NEED_IMPL("@@@");
     }
@@ -2423,7 +2423,7 @@
   case 404:
 
 /* Line 690 of lalr1.cc  */
-#line 2127 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2128 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_SubjectPredicatePair).subject = driver.curSubject;
 	(yyval.p_SubjectPredicatePair).predicate = driver.curPredicate;
@@ -2434,7 +2434,7 @@
   case 405:
 
 /* Line 690 of lalr1.cc  */
-#line 2131 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2132 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  (yyval.p_TTerm) = driver.curSubject; // could store w/ type in ctx..
 	  driver.curSubject = (yysemantic_stack_[(4) - (2)].p_SubjectPredicatePair).subject;
@@ -2445,7 +2445,7 @@
   case 406:
 
 /* Line 690 of lalr1.cc  */
-#line 2140 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2141 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	if ((yysemantic_stack_[(4) - (1)].p_listModifier) == LIST_exact) {
 	    (yyval.p_TTerm) = driver.createBNode();
@@ -2472,7 +2472,7 @@
   case 407:
 
 /* Line 690 of lalr1.cc  */
-#line 2165 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2166 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_listModifier) = LIST_members;
     }
@@ -2481,7 +2481,7 @@
   case 408:
 
 /* Line 690 of lalr1.cc  */
-#line 2168 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2169 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_listModifier) = LIST_starts;
     }
@@ -2490,7 +2490,7 @@
   case 409:
 
 /* Line 690 of lalr1.cc  */
-#line 2171 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2172 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_listModifier) = LIST_ends;
     }
@@ -2499,7 +2499,7 @@
   case 410:
 
 /* Line 690 of lalr1.cc  */
-#line 2174 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2175 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_listModifier) = LIST_any;
     }
@@ -2508,7 +2508,7 @@
   case 411:
 
 /* Line 690 of lalr1.cc  */
-#line 2177 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2178 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_listModifier) = LIST_unordered;
     }
@@ -2517,7 +2517,7 @@
   case 412:
 
 /* Line 690 of lalr1.cc  */
-#line 2184 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2185 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_listModifier) = LIST_exact;
     }
@@ -2526,7 +2526,7 @@
   case 414:
 
 /* Line 690 of lalr1.cc  */
-#line 2192 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2193 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_TTerms) = new ProductionVector<const TTerm*>();
 	(yyval.p_TTerms)->push_back((yysemantic_stack_[(1) - (1)].p_TTerm));
@@ -2536,7 +2536,7 @@
   case 415:
 
 /* Line 690 of lalr1.cc  */
-#line 2196 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2197 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yysemantic_stack_[(2) - (1)].p_TTerms)->push_back((yysemantic_stack_[(2) - (2)].p_TTerm));
 	(yyval.p_TTerms) = (yysemantic_stack_[(2) - (1)].p_TTerms);
@@ -2546,7 +2546,7 @@
   case 418:
 
 /* Line 690 of lalr1.cc  */
-#line 2208 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2209 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_TTerm) = (yysemantic_stack_[(1) - (1)].p_Variable);
     }
@@ -2555,7 +2555,7 @@
   case 420:
 
 /* Line 690 of lalr1.cc  */
-#line 2215 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2216 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_TTerm) = (yysemantic_stack_[(1) - (1)].p_Variable);
     }
@@ -2564,7 +2564,7 @@
   case 421:
 
 /* Line 690 of lalr1.cc  */
-#line 2218 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2219 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_TTerm) = (yysemantic_stack_[(1) - (1)].p_URI);
     }
@@ -2573,7 +2573,7 @@
   case 424:
 
 /* Line 690 of lalr1.cc  */
-#line 2229 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2230 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_TTerm) = (yysemantic_stack_[(1) - (1)].p_URI);
     }
@@ -2582,7 +2582,7 @@
   case 425:
 
 /* Line 690 of lalr1.cc  */
-#line 2232 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2233 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_TTerm) = (yysemantic_stack_[(1) - (1)].p_RDFLiteral);
     }
@@ -2591,7 +2591,7 @@
   case 426:
 
 /* Line 690 of lalr1.cc  */
-#line 2235 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2236 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_TTerm) = (yysemantic_stack_[(1) - (1)].p_NumericRDFLiteral);
     }
@@ -2600,7 +2600,7 @@
   case 427:
 
 /* Line 690 of lalr1.cc  */
-#line 2238 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2239 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_TTerm) = (yysemantic_stack_[(1) - (1)].p_BooleanRDFLiteral);
     }
@@ -2609,7 +2609,7 @@
   case 429:
 
 /* Line 690 of lalr1.cc  */
-#line 2242 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2243 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_TTerm) = driver.getURI("http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"); // !!! new GraphTerm_rule5($1);
     }
@@ -2618,7 +2618,7 @@
   case 431:
 
 /* Line 690 of lalr1.cc  */
-#line 2253 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2254 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = (yysemantic_stack_[(2) - (2)].p_Expressions)->size() > 0 ? new BooleanDisjunction((yysemantic_stack_[(2) - (1)].p_Expression), (yysemantic_stack_[(2) - (2)].p_Expressions)) : (yysemantic_stack_[(2) - (1)].p_Expression);
 	(yysemantic_stack_[(2) - (2)].p_Expressions)->clear();
@@ -2629,7 +2629,7 @@
   case 432:
 
 /* Line 690 of lalr1.cc  */
-#line 2262 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2263 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = (yysemantic_stack_[(2) - (2)].p_Expression);
     }
@@ -2638,7 +2638,7 @@
   case 433:
 
 /* Line 690 of lalr1.cc  */
-#line 2269 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2270 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expressions) = new ProductionVector<const Expression*>();
     }
@@ -2647,7 +2647,7 @@
   case 434:
 
 /* Line 690 of lalr1.cc  */
-#line 2272 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2273 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yysemantic_stack_[(2) - (1)].p_Expressions)->push_back((yysemantic_stack_[(2) - (2)].p_Expression));
 	(yyval.p_Expressions) = (yysemantic_stack_[(2) - (1)].p_Expressions);
@@ -2657,7 +2657,7 @@
   case 435:
 
 /* Line 690 of lalr1.cc  */
-#line 2280 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2281 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = (yysemantic_stack_[(2) - (2)].p_Expressions)->size() > 0 ? new BooleanConjunction((yysemantic_stack_[(2) - (1)].p_Expression), (yysemantic_stack_[(2) - (2)].p_Expressions)) : (yysemantic_stack_[(2) - (1)].p_Expression);
 	(yysemantic_stack_[(2) - (2)].p_Expressions)->clear();
@@ -2668,7 +2668,7 @@
   case 436:
 
 /* Line 690 of lalr1.cc  */
-#line 2289 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2290 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = (yysemantic_stack_[(2) - (2)].p_Expression);
     }
@@ -2677,7 +2677,7 @@
   case 437:
 
 /* Line 690 of lalr1.cc  */
-#line 2296 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2297 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expressions) = new ProductionVector<const Expression*>();
     }
@@ -2686,7 +2686,7 @@
   case 438:
 
 /* Line 690 of lalr1.cc  */
-#line 2299 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2300 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yysemantic_stack_[(2) - (1)].p_Expressions)->push_back((yysemantic_stack_[(2) - (2)].p_Expression));
 	(yyval.p_Expressions) = (yysemantic_stack_[(2) - (1)].p_Expressions);
@@ -2696,7 +2696,7 @@
   case 440:
 
 /* Line 690 of lalr1.cc  */
-#line 2311 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2312 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	if ((yysemantic_stack_[(2) - (2)].p_GeneralComparator)) {
 	    (yysemantic_stack_[(2) - (2)].p_GeneralComparator)->setLeftParm((yysemantic_stack_[(2) - (1)].p_Expression));
@@ -2709,7 +2709,7 @@
   case 441:
 
 /* Line 690 of lalr1.cc  */
-#line 2322 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2323 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_GeneralComparator) = NULL;
     }
@@ -2718,7 +2718,7 @@
   case 443:
 
 /* Line 690 of lalr1.cc  */
-#line 2329 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2330 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_GeneralComparator) = new BooleanEQ((yysemantic_stack_[(2) - (2)].p_Expression));
     }
@@ -2727,7 +2727,7 @@
   case 444:
 
 /* Line 690 of lalr1.cc  */
-#line 2332 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2333 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_GeneralComparator) = new BooleanNE((yysemantic_stack_[(2) - (2)].p_Expression));
     }
@@ -2736,7 +2736,7 @@
   case 445:
 
 /* Line 690 of lalr1.cc  */
-#line 2335 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2336 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_GeneralComparator) = new BooleanLT((yysemantic_stack_[(2) - (2)].p_Expression));
     }
@@ -2745,7 +2745,7 @@
   case 446:
 
 /* Line 690 of lalr1.cc  */
-#line 2338 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2339 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_GeneralComparator) = new BooleanGT((yysemantic_stack_[(2) - (2)].p_Expression));
     }
@@ -2754,7 +2754,7 @@
   case 447:
 
 /* Line 690 of lalr1.cc  */
-#line 2341 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2342 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_GeneralComparator) = new BooleanLE((yysemantic_stack_[(2) - (2)].p_Expression));
     }
@@ -2763,7 +2763,7 @@
   case 448:
 
 /* Line 690 of lalr1.cc  */
-#line 2344 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2345 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_GeneralComparator) = new BooleanGE((yysemantic_stack_[(2) - (2)].p_Expression));
     }
@@ -2772,7 +2772,7 @@
   case 449:
 
 /* Line 690 of lalr1.cc  */
-#line 2347 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2348 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_GeneralComparator) = new NaryIn((yysemantic_stack_[(2) - (2)].p_Expressions));
     }
@@ -2781,7 +2781,7 @@
   case 450:
 
 /* Line 690 of lalr1.cc  */
-#line 2350 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2351 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_GeneralComparator) = new NaryNotIn((yysemantic_stack_[(3) - (3)].p_Expressions));
     }
@@ -2790,7 +2790,7 @@
   case 452:
 
 /* Line 690 of lalr1.cc  */
-#line 2361 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2362 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = (yysemantic_stack_[(2) - (2)].p_Expressions)->size() > 0 ? new ArithmeticSum((yysemantic_stack_[(2) - (1)].p_Expression), (yysemantic_stack_[(2) - (2)].p_Expressions)) : (yysemantic_stack_[(2) - (1)].p_Expression);
 	(yysemantic_stack_[(2) - (2)].p_Expressions)->clear();
@@ -2801,7 +2801,7 @@
   case 453:
 
 /* Line 690 of lalr1.cc  */
-#line 2370 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2371 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new NumberExpression((yysemantic_stack_[(1) - (1)].p_NumericRDFLiteral));
     }
@@ -2810,7 +2810,7 @@
   case 454:
 
 /* Line 690 of lalr1.cc  */
-#line 2373 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2374 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new NumberExpression((yysemantic_stack_[(1) - (1)].p_NumericRDFLiteral));
     }
@@ -2819,7 +2819,7 @@
   case 455:
 
 /* Line 690 of lalr1.cc  */
-#line 2380 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2381 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = (yysemantic_stack_[(2) - (2)].p_Expression);
     }
@@ -2828,7 +2828,7 @@
   case 456:
 
 /* Line 690 of lalr1.cc  */
-#line 2383 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2384 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new ArithmeticInverse((yysemantic_stack_[(2) - (2)].p_Expression));
     }
@@ -2837,7 +2837,7 @@
   case 457:
 
 /* Line 690 of lalr1.cc  */
-#line 2390 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2391 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = NULL;
     }
@@ -2846,7 +2846,7 @@
   case 459:
 
 /* Line 690 of lalr1.cc  */
-#line 2398 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2399 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = (yysemantic_stack_[(2) - (2)].p_Expression);
     }
@@ -2855,7 +2855,7 @@
   case 460:
 
 /* Line 690 of lalr1.cc  */
-#line 2401 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2402 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new ArithmeticNegation((yysemantic_stack_[(2) - (2)].p_Expression));
     }
@@ -2864,7 +2864,7 @@
   case 461:
 
 /* Line 690 of lalr1.cc  */
-#line 2405 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2406 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	if ((yysemantic_stack_[(2) - (2)].p_Expression) == NULL)
 	    (yyval.p_Expression) = (yysemantic_stack_[(2) - (1)].p_Expression);
@@ -2880,7 +2880,7 @@
   case 462:
 
 /* Line 690 of lalr1.cc  */
-#line 2419 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2420 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expressions) = new ProductionVector<const Expression*>();
     }
@@ -2889,7 +2889,7 @@
   case 463:
 
 /* Line 690 of lalr1.cc  */
-#line 2422 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2423 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yysemantic_stack_[(2) - (1)].p_Expressions)->push_back((yysemantic_stack_[(2) - (2)].p_Expression));
 	(yyval.p_Expressions) = (yysemantic_stack_[(2) - (1)].p_Expressions);
@@ -2899,7 +2899,7 @@
   case 464:
 
 /* Line 690 of lalr1.cc  */
-#line 2430 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2431 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = (yysemantic_stack_[(2) - (2)].p_Expressions)->size() > 0 ? new ArithmeticProduct((yysemantic_stack_[(2) - (1)].p_Expression), (yysemantic_stack_[(2) - (2)].p_Expressions)) : (yysemantic_stack_[(2) - (1)].p_Expression);
 	(yysemantic_stack_[(2) - (2)].p_Expressions)->clear();
@@ -2910,7 +2910,7 @@
   case 465:
 
 /* Line 690 of lalr1.cc  */
-#line 2439 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2440 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expressions) = new ProductionVector<const Expression*>();
     }
@@ -2919,7 +2919,7 @@
   case 466:
 
 /* Line 690 of lalr1.cc  */
-#line 2442 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2443 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yysemantic_stack_[(2) - (1)].p_Expressions)->push_back((yysemantic_stack_[(2) - (2)].p_Expression));
 	(yyval.p_Expressions) = (yysemantic_stack_[(2) - (1)].p_Expressions);
@@ -2929,7 +2929,7 @@
   case 467:
 
 /* Line 690 of lalr1.cc  */
-#line 2449 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2450 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new BooleanNegation((yysemantic_stack_[(2) - (2)].p_Expression));
     }
@@ -2938,7 +2938,7 @@
   case 468:
 
 /* Line 690 of lalr1.cc  */
-#line 2452 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2453 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = (yysemantic_stack_[(2) - (2)].p_Expression);
     }
@@ -2947,7 +2947,7 @@
   case 469:
 
 /* Line 690 of lalr1.cc  */
-#line 2455 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2456 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new ArithmeticNegation((yysemantic_stack_[(2) - (2)].p_Expression));
     }
@@ -2956,7 +2956,7 @@
   case 474:
 
 /* Line 690 of lalr1.cc  */
-#line 2465 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2466 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new TTermExpression((yysemantic_stack_[(1) - (1)].p_RDFLiteral));
     }
@@ -2965,7 +2965,7 @@
   case 475:
 
 /* Line 690 of lalr1.cc  */
-#line 2468 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2469 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new TTermExpression((yysemantic_stack_[(1) - (1)].p_NumericRDFLiteral));
     }
@@ -2974,7 +2974,7 @@
   case 476:
 
 /* Line 690 of lalr1.cc  */
-#line 2471 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2472 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new TTermExpression((yysemantic_stack_[(1) - (1)].p_BooleanRDFLiteral));
     }
@@ -2983,7 +2983,7 @@
   case 477:
 
 /* Line 690 of lalr1.cc  */
-#line 2474 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2475 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new TTermExpression((yysemantic_stack_[(1) - (1)].p_Variable));
     }
@@ -2992,7 +2992,7 @@
   case 479:
 
 /* Line 690 of lalr1.cc  */
-#line 2481 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2482 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = (yysemantic_stack_[(3) - (2)].p_Expression);
     }
@@ -3001,7 +3001,7 @@
   case 480:
 
 /* Line 690 of lalr1.cc  */
-#line 2487 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2488 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_str, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3010,7 +3010,7 @@
   case 481:
 
 /* Line 690 of lalr1.cc  */
-#line 2490 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2491 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_lang, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3019,7 +3019,7 @@
   case 482:
 
 /* Line 690 of lalr1.cc  */
-#line 2493 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2494 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_langMatches, (yysemantic_stack_[(6) - (3)].p_Expression), (yysemantic_stack_[(6) - (5)].p_Expression), NULL));
     }
@@ -3028,7 +3028,7 @@
   case 483:
 
 /* Line 690 of lalr1.cc  */
-#line 2496 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2497 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_datatype, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3037,7 +3037,7 @@
   case 484:
 
 /* Line 690 of lalr1.cc  */
-#line 2499 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2500 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_bound, new TTermExpression((yysemantic_stack_[(4) - (3)].p_Variable)), NULL, NULL));
     }
@@ -3046,7 +3046,7 @@
   case 485:
 
 /* Line 690 of lalr1.cc  */
-#line 2502 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2503 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_iri, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3055,7 +3055,7 @@
   case 486:
 
 /* Line 690 of lalr1.cc  */
-#line 2505 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2506 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_iri, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3064,7 +3064,7 @@
   case 487:
 
 /* Line 690 of lalr1.cc  */
-#line 2509 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2510 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_bnode, (yysemantic_stack_[(2) - (2)].p_Expression), NULL, NULL));
     }
@@ -3073,7 +3073,7 @@
   case 488:
 
 /* Line 690 of lalr1.cc  */
-#line 2512 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2513 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_rand, NULL, NULL, NULL));
     }
@@ -3082,7 +3082,7 @@
   case 489:
 
 /* Line 690 of lalr1.cc  */
-#line 2515 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2516 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_numeric_abs, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3091,7 +3091,7 @@
   case 490:
 
 /* Line 690 of lalr1.cc  */
-#line 2518 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2519 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_numeric_ciel, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3100,7 +3100,7 @@
   case 491:
 
 /* Line 690 of lalr1.cc  */
-#line 2521 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2522 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_numeric_floor, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3109,7 +3109,7 @@
   case 492:
 
 /* Line 690 of lalr1.cc  */
-#line 2524 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2525 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_numeric_round, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3118,7 +3118,7 @@
   case 493:
 
 /* Line 690 of lalr1.cc  */
-#line 2527 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2528 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_concat, new ArgList((yysemantic_stack_[(2) - (2)].p_Expressions))));
     }
@@ -3127,7 +3127,7 @@
   case 495:
 
 /* Line 690 of lalr1.cc  */
-#line 2531 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2532 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_string_length, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3136,7 +3136,7 @@
   case 496:
 
 /* Line 690 of lalr1.cc  */
-#line 2534 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2535 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_upper_case, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3145,7 +3145,7 @@
   case 497:
 
 /* Line 690 of lalr1.cc  */
-#line 2537 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2538 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_lower_case, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3154,7 +3154,7 @@
   case 498:
 
 /* Line 690 of lalr1.cc  */
-#line 2540 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2541 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_encode_for_uri, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3163,7 +3163,7 @@
   case 499:
 
 /* Line 690 of lalr1.cc  */
-#line 2543 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2544 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_contains, (yysemantic_stack_[(6) - (3)].p_Expression), (yysemantic_stack_[(6) - (5)].p_Expression), NULL));
     }
@@ -3172,7 +3172,7 @@
   case 500:
 
 /* Line 690 of lalr1.cc  */
-#line 2546 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2547 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_starts_with, (yysemantic_stack_[(6) - (3)].p_Expression), (yysemantic_stack_[(6) - (5)].p_Expression), NULL));
     }
@@ -3181,7 +3181,7 @@
   case 501:
 
 /* Line 690 of lalr1.cc  */
-#line 2549 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2550 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_ends_with, (yysemantic_stack_[(6) - (3)].p_Expression), (yysemantic_stack_[(6) - (5)].p_Expression), NULL));
     }
@@ -3190,7 +3190,7 @@
   case 502:
 
 /* Line 690 of lalr1.cc  */
-#line 2552 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2553 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_substring_before, (yysemantic_stack_[(6) - (3)].p_Expression), (yysemantic_stack_[(6) - (5)].p_Expression), NULL));
     }
@@ -3199,7 +3199,7 @@
   case 503:
 
 /* Line 690 of lalr1.cc  */
-#line 2555 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2556 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_substring_after, (yysemantic_stack_[(6) - (3)].p_Expression), (yysemantic_stack_[(6) - (5)].p_Expression), NULL));
     }
@@ -3208,7 +3208,7 @@
   case 504:
 
 /* Line 690 of lalr1.cc  */
-#line 2558 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2559 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_year_from_dateTime, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3217,7 +3217,7 @@
   case 505:
 
 /* Line 690 of lalr1.cc  */
-#line 2561 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2562 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_month_from_dateTime, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3226,7 +3226,7 @@
   case 506:
 
 /* Line 690 of lalr1.cc  */
-#line 2564 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2565 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_day_from_dateTime, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3235,7 +3235,7 @@
   case 507:
 
 /* Line 690 of lalr1.cc  */
-#line 2567 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2568 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_hours_from_dateTime, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3244,7 +3244,7 @@
   case 508:
 
 /* Line 690 of lalr1.cc  */
-#line 2570 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2571 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_minutes_from_dateTime, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3253,7 +3253,7 @@
   case 509:
 
 /* Line 690 of lalr1.cc  */
-#line 2573 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2574 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_seconds_from_dateTime, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3262,7 +3262,7 @@
   case 510:
 
 /* Line 690 of lalr1.cc  */
-#line 2576 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2577 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_timezone_from_dateTime, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3271,7 +3271,7 @@
   case 511:
 
 /* Line 690 of lalr1.cc  */
-#line 2579 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2580 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_timezone_from_dateTime, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3280,7 +3280,7 @@
   case 512:
 
 /* Line 690 of lalr1.cc  */
-#line 2582 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2583 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_now, NULL, NULL, NULL));
     }
@@ -3289,7 +3289,7 @@
   case 513:
 
 /* Line 690 of lalr1.cc  */
-#line 2585 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2586 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_uuid, NULL, NULL, NULL));
     }
@@ -3298,7 +3298,7 @@
   case 514:
 
 /* Line 690 of lalr1.cc  */
-#line 2588 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2589 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_struuid, NULL, NULL, NULL));
     }
@@ -3307,7 +3307,7 @@
   case 515:
 
 /* Line 690 of lalr1.cc  */
-#line 2591 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2592 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_md5, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3316,7 +3316,7 @@
   case 516:
 
 /* Line 690 of lalr1.cc  */
-#line 2594 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2595 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_sha1, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3325,7 +3325,7 @@
   case 517:
 
 /* Line 690 of lalr1.cc  */
-#line 2597 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2598 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_sha256, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3334,7 +3334,7 @@
   case 518:
 
 /* Line 690 of lalr1.cc  */
-#line 2600 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2601 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_sha384, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3343,7 +3343,7 @@
   case 519:
 
 /* Line 690 of lalr1.cc  */
-#line 2603 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2604 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_sha512, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3352,7 +3352,7 @@
   case 520:
 
 /* Line 690 of lalr1.cc  */
-#line 2606 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2607 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = NULL; // new FunctionCallExpression(new FunctionCall(TTerm::FUNC_coalesce, $2, NULL, NULL));
 	w3c_sw_NEED_IMPL("COALESCE");
@@ -3362,7 +3362,7 @@
   case 521:
 
 /* Line 690 of lalr1.cc  */
-#line 2610 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2611 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_if, (yysemantic_stack_[(8) - (3)].p_Expression), (yysemantic_stack_[(8) - (5)].p_Expression), (yysemantic_stack_[(8) - (7)].p_Expression)));
     }
@@ -3371,7 +3371,7 @@
   case 522:
 
 /* Line 690 of lalr1.cc  */
-#line 2613 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2614 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_strlang, (yysemantic_stack_[(6) - (3)].p_Expression), (yysemantic_stack_[(6) - (5)].p_Expression), NULL));
     }
@@ -3380,7 +3380,7 @@
   case 523:
 
 /* Line 690 of lalr1.cc  */
-#line 2616 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2617 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_strdt, (yysemantic_stack_[(6) - (3)].p_Expression), (yysemantic_stack_[(6) - (5)].p_Expression), NULL));
     }
@@ -3389,7 +3389,7 @@
   case 524:
 
 /* Line 690 of lalr1.cc  */
-#line 2619 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2620 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_sameTerm, (yysemantic_stack_[(6) - (3)].p_Expression), (yysemantic_stack_[(6) - (5)].p_Expression), NULL));
     }
@@ -3398,7 +3398,7 @@
   case 525:
 
 /* Line 690 of lalr1.cc  */
-#line 2622 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2623 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_isIRI, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3407,7 +3407,7 @@
   case 526:
 
 /* Line 690 of lalr1.cc  */
-#line 2625 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2626 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_isIRI, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3416,7 +3416,7 @@
   case 527:
 
 /* Line 690 of lalr1.cc  */
-#line 2628 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2629 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_isBlank, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3425,7 +3425,7 @@
   case 528:
 
 /* Line 690 of lalr1.cc  */
-#line 2631 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2632 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_isLiteral, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3434,7 +3434,7 @@
   case 529:
 
 /* Line 690 of lalr1.cc  */
-#line 2634 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2635 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_isNumeric, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -3443,7 +3443,7 @@
   case 533:
 
 /* Line 690 of lalr1.cc  */
-#line 2645 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2646 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = (yysemantic_stack_[(3) - (2)].p_Expression);
     }
@@ -3452,7 +3452,7 @@
   case 534:
 
 /* Line 690 of lalr1.cc  */
-#line 2648 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2649 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = NULL;
     }
@@ -3461,7 +3461,7 @@
   case 535:
 
 /* Line 690 of lalr1.cc  */
-#line 2655 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2656 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_matches, (yysemantic_stack_[(7) - (3)].p_Expression), (yysemantic_stack_[(7) - (5)].p_Expression), (yysemantic_stack_[(7) - (6)].p_Expression)));
     }
@@ -3470,7 +3470,7 @@
   case 536:
 
 /* Line 690 of lalr1.cc  */
-#line 2662 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2663 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = NULL;
     }
@@ -3479,7 +3479,7 @@
   case 538:
 
 /* Line 690 of lalr1.cc  */
-#line 2669 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2670 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_substring, (yysemantic_stack_[(7) - (3)].p_Expression), (yysemantic_stack_[(7) - (5)].p_Expression), (yysemantic_stack_[(7) - (6)].p_Expression)));
     }
@@ -3488,7 +3488,7 @@
   case 539:
 
 /* Line 690 of lalr1.cc  */
-#line 2675 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2676 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = NULL; // new FunctionCallExpression(new FunctionCall(TTerm::FUNC_exists, driver.ensureGraphPattern(), NULL, NULL));
 	w3c_sw_NEED_IMPL("EXISTS");
@@ -3498,7 +3498,7 @@
   case 540:
 
 /* Line 690 of lalr1.cc  */
-#line 2682 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2683 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = NULL; // new FunctionCallExpression(new BooleanNegation(new FunctionCall(TTerm::FUNC_exists, driver.ensureGraphPattern(), NULL, NULL)));
 	w3c_sw_NEED_IMPL("EXISTS");
@@ -3508,7 +3508,7 @@
   case 541:
 
 /* Line 690 of lalr1.cc  */
-#line 2689 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2690 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.countStar = true;
 	(yyval.p_Expression) = new FunctionCallExpression(new AggregateCall(TTerm::FUNC_count, (yysemantic_stack_[(5) - (3)].p_distinctness), (yysemantic_stack_[(5) - (4)].p_Expression)));
@@ -3518,7 +3518,7 @@
   case 542:
 
 /* Line 690 of lalr1.cc  */
-#line 2693 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2694 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.countStar = true;
 	(yyval.p_Expression) = new FunctionCallExpression(new AggregateCall((yysemantic_stack_[(5) - (1)].p_URI), (yysemantic_stack_[(5) - (3)].p_distinctness), (yysemantic_stack_[(5) - (4)].p_Expression)));
@@ -3528,7 +3528,7 @@
   case 543:
 
 /* Line 690 of lalr1.cc  */
-#line 2698 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2699 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	driver.countStar = true;
 	(yyval.p_Expressions) = driver.curExprList;
@@ -3539,7 +3539,7 @@
   case 544:
 
 /* Line 690 of lalr1.cc  */
-#line 2702 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2703 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	  if ((yysemantic_stack_[(7) - (6)].p_RDFLiteral) != NULL) {
 	      std::stringstream ss;
@@ -3558,7 +3558,7 @@
   case 545:
 
 /* Line 690 of lalr1.cc  */
-#line 2718 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2719 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_Expression) = NULL;
     }
@@ -3567,7 +3567,7 @@
   case 547:
 
 /* Line 690 of lalr1.cc  */
-#line 2725 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2726 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_URI) = TTerm::FUNC_sum;
     }
@@ -3576,7 +3576,7 @@
   case 548:
 
 /* Line 690 of lalr1.cc  */
-#line 2728 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2729 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_URI) = TTerm::FUNC_min;
     }
@@ -3585,7 +3585,7 @@
   case 549:
 
 /* Line 690 of lalr1.cc  */
-#line 2731 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2732 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_URI) = TTerm::FUNC_max;
     }
@@ -3594,7 +3594,7 @@
   case 550:
 
 /* Line 690 of lalr1.cc  */
-#line 2734 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2735 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_URI) = TTerm::FUNC_avg;
     }
@@ -3603,7 +3603,7 @@
   case 551:
 
 /* Line 690 of lalr1.cc  */
-#line 2737 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2738 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_URI) = TTerm::FUNC_sample;
     }
@@ -3612,7 +3612,7 @@
   case 552:
 
 /* Line 690 of lalr1.cc  */
-#line 2743 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2744 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_RDFLiteral) = driver.getRDFLiteral(*(yysemantic_stack_[(4) - (4)].p_string), NULL, NULL);
     }
@@ -3621,7 +3621,7 @@
   case 553:
 
 /* Line 690 of lalr1.cc  */
-#line 2749 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2750 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_RDFLiteral) = NULL;
     }
@@ -3630,7 +3630,7 @@
   case 555:
 
 /* Line 690 of lalr1.cc  */
-#line 2756 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2757 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	if ((yysemantic_stack_[(2) - (2)].p_ArgList))
 	    (yyval.p_Expression) = new FunctionCallExpression(new FunctionCall((yysemantic_stack_[(2) - (1)].p_URI), (yysemantic_stack_[(2) - (2)].p_ArgList)));
@@ -3642,7 +3642,7 @@
   case 556:
 
 /* Line 690 of lalr1.cc  */
-#line 2766 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2767 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_ArgList) = NULL;
     }
@@ -3651,7 +3651,7 @@
   case 558:
 
 /* Line 690 of lalr1.cc  */
-#line 2774 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2775 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_RDFLiteral) = driver.getRDFLiteral(*(yysemantic_stack_[(2) - (1)].p_string), (yysemantic_stack_[(2) - (2)].p_uri_or_langtag).uri, (yysemantic_stack_[(2) - (2)].p_uri_or_langtag).langtag);
 	delete (yysemantic_stack_[(2) - (1)].p_string);
@@ -3661,7 +3661,7 @@
   case 559:
 
 /* Line 690 of lalr1.cc  */
-#line 2782 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2783 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_URI) = (yysemantic_stack_[(2) - (2)].p_URI);
     }
@@ -3670,7 +3670,7 @@
   case 560:
 
 /* Line 690 of lalr1.cc  */
-#line 2789 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2790 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_uri_or_langtag).uri = NULL;
 	(yyval.p_uri_or_langtag).langtag = (yysemantic_stack_[(1) - (1)].p_LANGTAG);
@@ -3680,7 +3680,7 @@
   case 561:
 
 /* Line 690 of lalr1.cc  */
-#line 2793 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2794 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_uri_or_langtag).uri = (yysemantic_stack_[(1) - (1)].p_URI);
 	(yyval.p_uri_or_langtag).langtag = NULL;
@@ -3690,7 +3690,7 @@
   case 562:
 
 /* Line 690 of lalr1.cc  */
-#line 2801 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2802 "lib/SPARQLParser/SPARQLParser.ypp"
     {
 	(yyval.p_uri_or_langtag).uri = NULL;
 	(yyval.p_uri_or_langtag).langtag = NULL;
@@ -5431,65 +5431,65 @@
   const unsigned short int
   SPARQLParser::yyrline_[] =
   {
-         0,   481,   481,   484,   490,   495,   506,   507,   508,   509,
-     514,   517,   522,   526,   528,   532,   534,   537,   539,   543,
-     543,   561,   567,   570,   574,   575,   576,   577,   583,   584,
-     587,   589,   593,   597,   601,   602,   606,   607,   611,   611,
-     619,   625,   629,   630,   633,   635,   639,   643,   647,   648,
-     652,   653,   657,   657,   665,   671,   675,   678,   680,   684,
-     684,   691,   693,   697,   700,   702,   706,   709,   712,   718,
-     724,   726,   724,   736,   736,   748,   751,   759,   762,   765,
-     759,   780,   788,   791,   798,   801,   806,   813,   816,   821,
-     828,   831,   834,   837,   840,   843,   846,   850,   855,   858,
-     866,   869,   876,   876,   887,   895,   898,   906,   909,   916,
-     919,   924,   932,   939,   940,   944,   950,   956,   963,   970,
-     972,   977,   984,   987,   992,   995,  1000,  1003,  1008,  1012,
-    1016,  1023,  1026,  1033,  1036,  1039,  1042,  1048,  1054,  1057,
-    1064,  1069,  1076,  1080,  1088,  1090,  1098,  1101,  1109,  1117,
-    1118,  1125,  1129,  1137,  1140,  1145,  1148,  1152,  1158,  1165,
-    1165,  1173,  1175,  1181,  1184,  1190,  1190,  1195,  1201,  1203,
-    1207,  1210,  1213,  1216,  1219,  1222,  1225,  1231,  1235,  1235,
-    1244,  1246,  1250,  1253,  1255,  1259,  1260,  1261,  1262,  1263,
-    1264,  1265,  1266,  1267,  1268,  1269,  1273,  1280,  1287,  1290,
-    1294,  1300,  1303,  1309,  1315,  1321,  1327,  1333,  1339,  1347,
-    1355,  1362,  1371,  1377,  1380,  1384,  1387,  1391,  1395,  1401,
-    1403,  1409,  1415,  1421,  1427,  1430,  1436,  1439,  1444,  1446,
-    1450,  1456,  1459,  1462,  1465,  1472,  1478,  1484,  1484,  1492,
-    1494,  1498,  1500,  1504,  1507,  1509,  1514,  1519,  1522,  1514,
-    1533,  1537,  1540,  1542,  1546,  1547,  1560,  1561,  1566,  1566,
-    1577,  1581,  1583,  1593,  1597,  1600,  1616,  1621,  1625,  1628,
-    1632,  1633,  1634,  1635,  1636,  1637,  1638,  1639,  1642,  1646,
-    1652,  1652,  1668,  1672,  1674,  1668,  1685,  1689,  1691,  1685,
-    1702,  1713,  1717,  1713,  1727,  1731,  1727,  1741,  1741,  1753,
-    1755,  1759,  1769,  1770,  1771,  1775,  1783,  1787,  1787,  1797,
-    1800,  1807,  1813,  1815,  1829,  1832,  1832,  1842,  1842,  1845,
-    1845,  1852,  1857,  1861,  1863,  1868,  1872,  1874,  1879,  1883,
-    1885,  1890,  1895,  1899,  1901,  1905,  1912,  1916,  1924,  1924,
-    1927,  1927,  1933,  1933,  1939,  1940,  1944,  1944,  1949,  1951,
-    1955,  1958,  1960,  1964,  1968,  1972,  1978,  1982,  1986,  1989,
-    1991,  1995,  1999,  2004,  2006,  2012,  2015,  2017,  2023,  2024,
-    2030,  2034,  2035,  2039,  2040,  2044,  2045,  2049,  2050,  2051,
-    2052,  2056,  2060,  2063,  2066,  2069,  2075,  2079,  2082,  2084,
-    2088,  2091,  2093,  2097,  2098,  2102,  2106,  2107,  2111,  2112,
-    2113,  2117,  2122,  2123,  2127,  2127,  2140,  2165,  2168,  2171,
-    2174,  2177,  2184,  2187,  2192,  2196,  2203,  2204,  2208,  2211,
-    2215,  2218,  2224,  2225,  2229,  2232,  2235,  2238,  2241,  2242,
-    2248,  2253,  2262,  2269,  2272,  2280,  2289,  2296,  2299,  2306,
-    2311,  2322,  2325,  2329,  2332,  2335,  2338,  2341,  2344,  2347,
-    2350,  2356,  2361,  2370,  2373,  2380,  2383,  2390,  2393,  2398,
-    2401,  2405,  2419,  2422,  2430,  2439,  2442,  2449,  2452,  2455,
-    2458,  2462,  2463,  2464,  2465,  2468,  2471,  2474,  2477,  2481,
-    2487,  2490,  2493,  2496,  2499,  2502,  2505,  2509,  2512,  2515,
-    2518,  2521,  2524,  2527,  2530,  2531,  2534,  2537,  2540,  2543,
-    2546,  2549,  2552,  2555,  2558,  2561,  2564,  2567,  2570,  2573,
-    2576,  2579,  2582,  2585,  2588,  2591,  2594,  2597,  2600,  2603,
-    2606,  2610,  2613,  2616,  2619,  2622,  2625,  2628,  2631,  2634,
-    2637,  2638,  2639,  2645,  2648,  2655,  2662,  2665,  2669,  2675,
-    2682,  2689,  2693,  2698,  2698,  2718,  2721,  2725,  2728,  2731,
-    2734,  2737,  2743,  2749,  2752,  2756,  2766,  2769,  2774,  2782,
-    2789,  2793,  2801,  2805,  2809,  2810,  2811,  2815,  2816,  2817,
-    2821,  2822,  2823,  2827,  2828,  2829,  2833,  2834,  2838,  2839,
-    2840,  2841,  2845,  2846,  2850,  2851,  2855,  2856
+         0,   482,   482,   485,   491,   496,   507,   508,   509,   510,
+     515,   518,   523,   527,   529,   533,   535,   538,   540,   544,
+     544,   562,   568,   571,   575,   576,   577,   578,   584,   585,
+     588,   590,   594,   598,   602,   603,   607,   608,   612,   612,
+     620,   626,   630,   631,   634,   636,   640,   644,   648,   649,
+     653,   654,   658,   658,   666,   672,   676,   679,   681,   685,
+     685,   692,   694,   698,   701,   703,   707,   710,   713,   719,
+     725,   727,   725,   737,   737,   749,   752,   760,   763,   766,
+     760,   781,   789,   792,   799,   802,   807,   814,   817,   822,
+     829,   832,   835,   838,   841,   844,   847,   851,   856,   859,
+     867,   870,   877,   877,   888,   896,   899,   907,   910,   917,
+     920,   925,   933,   940,   941,   945,   951,   957,   964,   971,
+     973,   978,   985,   988,   993,   996,  1001,  1004,  1009,  1013,
+    1017,  1024,  1027,  1034,  1037,  1040,  1043,  1049,  1055,  1058,
+    1065,  1070,  1077,  1081,  1089,  1091,  1099,  1102,  1110,  1118,
+    1119,  1126,  1130,  1138,  1141,  1146,  1149,  1153,  1159,  1166,
+    1166,  1174,  1176,  1182,  1185,  1191,  1191,  1196,  1202,  1204,
+    1208,  1211,  1214,  1217,  1220,  1223,  1226,  1232,  1236,  1236,
+    1245,  1247,  1251,  1254,  1256,  1260,  1261,  1262,  1263,  1264,
+    1265,  1266,  1267,  1268,  1269,  1270,  1274,  1281,  1288,  1291,
+    1295,  1301,  1304,  1310,  1316,  1322,  1328,  1334,  1340,  1348,
+    1356,  1363,  1372,  1378,  1381,  1385,  1388,  1392,  1396,  1402,
+    1404,  1410,  1416,  1422,  1428,  1431,  1437,  1440,  1445,  1447,
+    1451,  1457,  1460,  1463,  1466,  1473,  1479,  1485,  1485,  1493,
+    1495,  1499,  1501,  1505,  1508,  1510,  1515,  1520,  1523,  1515,
+    1534,  1538,  1541,  1543,  1547,  1548,  1561,  1562,  1567,  1567,
+    1578,  1582,  1584,  1594,  1598,  1601,  1617,  1622,  1626,  1629,
+    1633,  1634,  1635,  1636,  1637,  1638,  1639,  1640,  1643,  1647,
+    1653,  1653,  1669,  1673,  1675,  1669,  1686,  1690,  1692,  1686,
+    1703,  1714,  1718,  1714,  1728,  1732,  1728,  1742,  1742,  1754,
+    1756,  1760,  1770,  1771,  1772,  1776,  1784,  1788,  1788,  1798,
+    1801,  1808,  1814,  1816,  1830,  1833,  1833,  1843,  1843,  1846,
+    1846,  1853,  1858,  1862,  1864,  1869,  1873,  1875,  1880,  1884,
+    1886,  1891,  1896,  1900,  1902,  1906,  1913,  1917,  1925,  1925,
+    1928,  1928,  1934,  1934,  1940,  1941,  1945,  1945,  1950,  1952,
+    1956,  1959,  1961,  1965,  1969,  1973,  1979,  1983,  1987,  1990,
+    1992,  1996,  2000,  2005,  2007,  2013,  2016,  2018,  2024,  2025,
+    2031,  2035,  2036,  2040,  2041,  2045,  2046,  2050,  2051,  2052,
+    2053,  2057,  2061,  2064,  2067,  2070,  2076,  2080,  2083,  2085,
+    2089,  2092,  2094,  2098,  2099,  2103,  2107,  2108,  2112,  2113,
+    2114,  2118,  2123,  2124,  2128,  2128,  2141,  2166,  2169,  2172,
+    2175,  2178,  2185,  2188,  2193,  2197,  2204,  2205,  2209,  2212,
+    2216,  2219,  2225,  2226,  2230,  2233,  2236,  2239,  2242,  2243,
+    2249,  2254,  2263,  2270,  2273,  2281,  2290,  2297,  2300,  2307,
+    2312,  2323,  2326,  2330,  2333,  2336,  2339,  2342,  2345,  2348,
+    2351,  2357,  2362,  2371,  2374,  2381,  2384,  2391,  2394,  2399,
+    2402,  2406,  2420,  2423,  2431,  2440,  2443,  2450,  2453,  2456,
+    2459,  2463,  2464,  2465,  2466,  2469,  2472,  2475,  2478,  2482,
+    2488,  2491,  2494,  2497,  2500,  2503,  2506,  2510,  2513,  2516,
+    2519,  2522,  2525,  2528,  2531,  2532,  2535,  2538,  2541,  2544,
+    2547,  2550,  2553,  2556,  2559,  2562,  2565,  2568,  2571,  2574,
+    2577,  2580,  2583,  2586,  2589,  2592,  2595,  2598,  2601,  2604,
+    2607,  2611,  2614,  2617,  2620,  2623,  2626,  2629,  2632,  2635,
+    2638,  2639,  2640,  2646,  2649,  2656,  2663,  2666,  2670,  2676,
+    2683,  2690,  2694,  2699,  2699,  2719,  2722,  2726,  2729,  2732,
+    2735,  2738,  2744,  2750,  2753,  2757,  2767,  2770,  2775,  2783,
+    2790,  2794,  2802,  2806,  2810,  2811,  2812,  2816,  2817,  2818,
+    2822,  2823,  2824,  2828,  2829,  2830,  2834,  2835,  2839,  2840,
+    2841,  2842,  2846,  2847,  2851,  2852,  2856,  2857
   };
 
   // Print the state stack on the debug stream.
@@ -5601,7 +5601,7 @@
 
 
 /* Line 1138 of lalr1.cc  */
-#line 2862 "lib/SPARQLParser/SPARQLParser.ypp"
+#line 2863 "lib/SPARQLParser/SPARQLParser.ypp"
  /*** Additional Code ***/
 
 void w3c_sw::SPARQLParser::error(const SPARQLParser::location_type& l,
Index: lib/SPARQLParser/SPARQLParser.hpp
===================================================================
--- lib/SPARQLParser/SPARQLParser.hpp	(revision 1728)
+++ lib/SPARQLParser/SPARQLParser.hpp	(working copy)
@@ -327,6 +327,7 @@
     e_ASCorDESC p_e_ASCorDESC;
     BindingClause* p_BindingClause;
     const TableOperation* p_TableOperation;
+    const AssertableOperation* p_AssertableOperation;
     ProductionVector<const TableOperation*>* p_TableOperations;
     OptionalGraphPattern* p_OptionalGraphPattern;
     BasicGraphPattern* p_BasicGraphPattern;
@@ -347,7 +348,7 @@
 
 
 /* Line 35 of lalr1.cc  */
-#line 351 "lib/SPARQLParser/SPARQLParser.hpp"
+#line 352 "lib/SPARQLParser/SPARQLParser.hpp"
     };
 #else
     typedef YYSTYPE semantic_type;
@@ -723,7 +724,7 @@
 } // w3c_sw
 
 /* Line 35 of lalr1.cc  */
-#line 727 "lib/SPARQLParser/SPARQLParser.hpp"
+#line 728 "lib/SPARQLParser/SPARQLParser.hpp"
 
 
 
Index: lib/SPARQLParser/SPARQLParser.ypp
===================================================================
--- lib/SPARQLParser/SPARQLParser.ypp	(revision 1750)
+++ lib/SPARQLParser/SPARQLParser.ypp	(working copy)
@@ -293,6 +293,7 @@
     e_ASCorDESC p_e_ASCorDESC;
     BindingClause* p_BindingClause;
     const TableOperation* p_TableOperation;
+    const AssertableOperation* p_AssertableOperation;
     ProductionVector<const TableOperation*>* p_TableOperations;
     OptionalGraphPattern* p_OptionalGraphPattern;
     BasicGraphPattern* p_BasicGraphPattern;
@@ -393,7 +394,7 @@
 %type <p_RSName> RSREF _O_QRSREF_E_S_QGT_EQUAL_E_C _Q_O_QRSREF_E_S_QGT_EQUAL_E_C_E_Opt
 %type <p_BindingClause> BindingsClause _QBindingsClause_E_Opt
 
-%type <p_TableOperation> QuadPattern QuadData Quads
+%type <p_AssertableOperation> QuadPattern QuadData Quads
 
 %type <p_ArgList> ArgList _QArgList_E_Opt
 %type <p_Expressions> _Q_O_QGT_OR_E_S_QConditionalAndExpression_E_C_E_Star
@@ -1484,7 +1485,7 @@
     {
 	driver.curBGP = NULL;
       } _QTriplesTemplate_E_Opt _Q_O_QQuadsNotTriples_E_S_QGT_DOT_E_Opt_S_QTriplesTemplate_E_Opt_C_E_Star	{
-	  $$ = driver.ensureGraphPattern();
+	  $$ = (const AssertableOperation*)driver.ensureGraphPattern();
 	  driver.curOp = NULL;
       }
 ;
Index: lib/SQLizer.hpp
===================================================================
--- lib/SQLizer.hpp	(revision 1750)
+++ lib/SQLizer.hpp	(working copy)
@@ -954,8 +954,7 @@
 	    delete subselect;
 	    curQuery = parent;
 	}
-	// !!!2 -- use ConstructableOperation for p_ConstructTemplate
-	virtual void construct (const Construct* const, const TableOperation* p_ConstructTemplate, ProductionVector<const DatasetClause*>* p_DatasetClauses, WhereClause* p_WhereClause, SolutionModifier* p_SolutionModifier) {
+	virtual void construct (const Construct* const, const AssertableOperation* p_ConstructTemplate, ProductionVector<const DatasetClause*>* p_DatasetClauses, WhereClause* p_WhereClause, SolutionModifier* p_SolutionModifier) {
 	    w3c_sw_FAIL("CONSTRUCT");
 	    p_ConstructTemplate->express(this);
 	    p_DatasetClauses->express(this);
@@ -982,12 +981,12 @@
 		p_insert->express(this);
 	    p_WhereClause->express(this);
 	}
-	virtual void insert (const Insert* const, const TableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
+	virtual void insert (const Insert* const, const AssertableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
 	    w3c_sw_FAIL("INSERT {");
 	    p_GraphTemplate->express(this);
 	    if (p_WhereClause) p_WhereClause->express(this);
 	}
-	virtual void del (const Delete* const, const TableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
+	virtual void del (const Delete* const, const AssertableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
 	    w3c_sw_FAIL("DELET");
 	    p_GraphTemplate->express(this);
 	    p_WhereClause->express(this);
Index: lib/SPARQLalgebraParser/SPARQLalgebraParser.cpp
===================================================================
--- lib/SPARQLalgebraParser/SPARQLalgebraParser.cpp	(revision 1728)
+++ lib/SPARQLalgebraParser/SPARQLalgebraParser.cpp	(working copy)
@@ -45,12 +45,12 @@
 /* User implementation prologue.  */
 
 /* Line 299 of lalr1.cc  */
-#line 262 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 263 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
 
 #include "../SPARQLalgebraScanner.hpp"
 
 /* Line 299 of lalr1.cc  */
-#line 320 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 322 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
 
 #include <stdarg.h>
 #include "SPARQLalgebraScanner.hpp"
@@ -462,7 +462,7 @@
 	  case 2:
 
 /* Line 690 of lalr1.cc  */
-#line 337 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 339 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	driver.root = (yyval.p_Operation) = (yysemantic_stack_[(1) - (1)].p_Operation);
     }
@@ -471,7 +471,7 @@
   case 3:
 
 /* Line 690 of lalr1.cc  */
-#line 340 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 342 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	driver.root = (yyval.p_Operation) = (yysemantic_stack_[(1) - (1)].p_Operation);
     }
@@ -480,7 +480,7 @@
   case 5:
 
 /* Line 690 of lalr1.cc  */
-#line 350 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 352 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Operation) = (yysemantic_stack_[(4) - (3)].p_Operation);
     }
@@ -489,7 +489,7 @@
   case 7:
 
 /* Line 690 of lalr1.cc  */
-#line 357 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 359 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Operation) = (yysemantic_stack_[(4) - (3)].p_Operation);
     }
@@ -498,7 +498,7 @@
   case 9:
 
 /* Line 690 of lalr1.cc  */
-#line 364 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 366 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Operation) = new Select((yysemantic_stack_[(4) - (3)].p_protoSelect).distinctness, (yysemantic_stack_[(4) - (3)].p_protoSelect).varSet, (yysemantic_stack_[(4) - (2)].p_DatasetClauses), (yysemantic_stack_[(4) - (3)].p_protoSelect).p_WhereClause, (yysemantic_stack_[(4) - (3)].p_protoSelect).p_SolutionModifier);
     }
@@ -507,7 +507,7 @@
   case 10:
 
 /* Line 690 of lalr1.cc  */
-#line 367 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 369 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Operation) = new Ask((yysemantic_stack_[(4) - (2)].p_DatasetClauses), new WhereClause((yysemantic_stack_[(4) - (3)].p_op)));
     }
@@ -516,7 +516,7 @@
   case 11:
 
 /* Line 690 of lalr1.cc  */
-#line 370 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 372 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Operation) = new Ask(new ProductionVector<const DatasetClause*>(), new WhereClause((yysemantic_stack_[(1) - (1)].p_op)));
     }
@@ -525,7 +525,7 @@
   case 12:
 
 /* Line 690 of lalr1.cc  */
-#line 373 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 375 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Operation) = new Select((yysemantic_stack_[(1) - (1)].p_protoSelect).distinctness, (yysemantic_stack_[(1) - (1)].p_protoSelect).varSet, new ProductionVector<const DatasetClause*>(), (yysemantic_stack_[(1) - (1)].p_protoSelect).p_WhereClause, (yysemantic_stack_[(1) - (1)].p_protoSelect).p_SolutionModifier);
     }
@@ -534,7 +534,7 @@
   case 13:
 
 /* Line 690 of lalr1.cc  */
-#line 379 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 381 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_DatasetClauses) = new ProductionVector<const DatasetClause*>((yysemantic_stack_[(1) - (1)].p_DatasetClause));
     }
@@ -543,7 +543,7 @@
   case 14:
 
 /* Line 690 of lalr1.cc  */
-#line 382 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 384 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yysemantic_stack_[(2) - (1)].p_DatasetClauses)->push_back((yysemantic_stack_[(2) - (2)].p_DatasetClause));
 	(yyval.p_DatasetClauses) = (yysemantic_stack_[(2) - (1)].p_DatasetClauses);
@@ -553,7 +553,7 @@
   case 16:
 
 /* Line 690 of lalr1.cc  */
-#line 390 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 392 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_protoSelect) = (yysemantic_stack_[(1) - (1)].p_protoSelect);
 	(yyval.p_protoSelect).p_SolutionModifier = new SolutionModifier(NULL, NULL, NULL, -1, -1);
@@ -563,7 +563,7 @@
   case 18:
 
 /* Line 690 of lalr1.cc  */
-#line 398 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 400 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_protoSelect) = (yysemantic_stack_[(1) - (1)].p_protoSelect);
 	(yyval.p_protoSelect).distinctness = DIST_all;
@@ -573,7 +573,7 @@
   case 20:
 
 /* Line 690 of lalr1.cc  */
-#line 406 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 408 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_protoSelect) = (yysemantic_stack_[(1) - (1)].p_protoSelect);
 	(yyval.p_protoSelect).varSet = new StarVarSet();
@@ -583,7 +583,7 @@
   case 22:
 
 /* Line 690 of lalr1.cc  */
-#line 414 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 416 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_protoSelect) = (yysemantic_stack_[(1) - (1)].p_protoSelect);
 	(yyval.p_protoSelect).p_OrderConditions = NULL;
@@ -593,7 +593,7 @@
   case 24:
 
 /* Line 690 of lalr1.cc  */
-#line 422 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 424 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_protoSelect) = (yysemantic_stack_[(1) - (1)].p_protoSelect);
 	(yyval.p_protoSelect).p_having = NULL;
@@ -603,7 +603,7 @@
   case 25:
 
 /* Line 690 of lalr1.cc  */
-#line 429 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 431 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	throw std::string("ExtendOpt: not ready to parse aggregates");
 	(yyval.p_protoSelect) = (yysemantic_stack_[(4) - (3)].p_protoSelect);
@@ -613,7 +613,7 @@
   case 26:
 
 /* Line 690 of lalr1.cc  */
-#line 433 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 435 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_protoSelect) = (yysemantic_stack_[(1) - (1)].p_protoSelect);
     }
@@ -622,7 +622,7 @@
   case 28:
 
 /* Line 690 of lalr1.cc  */
-#line 440 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 442 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_protoSelect).p_WhereClause = new WhereClause((yysemantic_stack_[(1) - (1)].p_op));
     }
@@ -631,7 +631,7 @@
   case 29:
 
 /* Line 690 of lalr1.cc  */
-#line 448 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 450 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_op) = (yysemantic_stack_[(4) - (3)].p_op);
     }
@@ -640,7 +640,7 @@
   case 30:
 
 /* Line 690 of lalr1.cc  */
-#line 454 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 456 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	driver.setBase((yysemantic_stack_[(2) - (2)].p_URI)->getLexicalValue());
     }
@@ -649,7 +649,7 @@
   case 32:
 
 /* Line 690 of lalr1.cc  */
-#line 464 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 466 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	driver.ignorePrefix(true);
       }
@@ -658,7 +658,7 @@
   case 33:
 
 /* Line 690 of lalr1.cc  */
-#line 466 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 468 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	  driver.ignorePrefix(false);
       }
@@ -667,7 +667,7 @@
   case 34:
 
 /* Line 690 of lalr1.cc  */
-#line 468 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 470 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	  std::string prefix((yysemantic_stack_[(6) - (3)].p_URI)->getLexicalValue());
 	  driver.addPrefix(prefix.substr(0, prefix.length()-1), (yysemantic_stack_[(6) - (5)].p_URI));
@@ -677,7 +677,7 @@
   case 37:
 
 /* Line 690 of lalr1.cc  */
-#line 480 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 482 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_protoSelect) = (yysemantic_stack_[(7) - (6)].p_protoSelect);
 	(yyval.p_protoSelect).varSet = (yysemantic_stack_[(7) - (4)].p_ExpressionAliaseList);
@@ -687,7 +687,7 @@
   case 38:
 
 /* Line 690 of lalr1.cc  */
-#line 487 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 489 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_ExpressionAliaseList) = new ExpressionAliasList();
     }
@@ -696,7 +696,7 @@
   case 39:
 
 /* Line 690 of lalr1.cc  */
-#line 490 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 492 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yysemantic_stack_[(2) - (1)].p_ExpressionAliaseList)->push_back(new ExpressionAlias(new TTermExpression((yysemantic_stack_[(2) - (2)].p_Variable))));
 	(yyval.p_ExpressionAliaseList) = (yysemantic_stack_[(2) - (1)].p_ExpressionAliaseList);
@@ -706,7 +706,7 @@
   case 40:
 
 /* Line 690 of lalr1.cc  */
-#line 497 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 499 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	throw std::string("Extend: not ready to parse aggregates");
     }
@@ -715,7 +715,7 @@
   case 51:
 
 /* Line 690 of lalr1.cc  */
-#line 530 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 532 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_protoSelect) = (yysemantic_stack_[(4) - (3)].p_protoSelect);
 	(yyval.p_protoSelect).distinctness = DIST_distinct;
@@ -725,7 +725,7 @@
   case 52:
 
 /* Line 690 of lalr1.cc  */
-#line 534 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 536 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_protoSelect) = (yysemantic_stack_[(4) - (3)].p_protoSelect);
 	(yyval.p_protoSelect).distinctness = DIST_reduced;
@@ -735,7 +735,7 @@
   case 54:
 
 /* Line 690 of lalr1.cc  */
-#line 570 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 572 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	throw std::string("GroupClause: not ready to parse aggregates");
 	(yyval.p_protoSelect).p_WhereClause = new WhereClause((yysemantic_stack_[(10) - (9)].p_op));
@@ -745,7 +745,7 @@
   case 59:
 
 /* Line 690 of lalr1.cc  */
-#line 589 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 591 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_protoSelect) = (yysemantic_stack_[(5) - (4)].p_protoSelect);
 	(yyval.p_protoSelect).p_having = new w3c_sw::ProductionVector<const w3c_sw::Expression*>((yysemantic_stack_[(5) - (3)].p_Expression)); // !!!
@@ -755,7 +755,7 @@
   case 60:
 
 /* Line 690 of lalr1.cc  */
-#line 598 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 600 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_protoSelect) = (yysemantic_stack_[(7) - (6)].p_protoSelect);
 	(yyval.p_protoSelect).p_OrderConditions = (yysemantic_stack_[(7) - (4)].p_OrderConditions);
@@ -765,7 +765,7 @@
   case 61:
 
 /* Line 690 of lalr1.cc  */
-#line 605 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 607 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_OrderConditions) = new std::vector<s_OrderConditionPair>();
 	(yyval.p_OrderConditions)->push_back((yysemantic_stack_[(1) - (1)].p_OrderConditionPair));
@@ -775,7 +775,7 @@
   case 62:
 
 /* Line 690 of lalr1.cc  */
-#line 609 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 611 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yysemantic_stack_[(2) - (1)].p_OrderConditions)->push_back((yysemantic_stack_[(2) - (2)].p_OrderConditionPair));
 	(yyval.p_OrderConditions) = (yysemantic_stack_[(2) - (1)].p_OrderConditions);
@@ -785,7 +785,7 @@
   case 64:
 
 /* Line 690 of lalr1.cc  */
-#line 617 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 619 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_OrderConditionPair).ascOrDesc = ORDER_Asc;
 	(yyval.p_OrderConditionPair).expression = (yysemantic_stack_[(1) - (1)].p_Expression);
@@ -795,7 +795,7 @@
   case 65:
 
 /* Line 690 of lalr1.cc  */
-#line 624 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 626 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_e_ASCorDESC) = ORDER_Asc;
     }
@@ -804,7 +804,7 @@
   case 66:
 
 /* Line 690 of lalr1.cc  */
-#line 628 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 630 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_e_ASCorDESC) = ORDER_Desc;
     }
@@ -813,7 +813,7 @@
   case 67:
 
 /* Line 690 of lalr1.cc  */
-#line 634 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 636 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_OrderConditionPair).ascOrDesc = (yysemantic_stack_[(4) - (2)].p_e_ASCorDESC);
 	(yyval.p_OrderConditionPair).expression = (yysemantic_stack_[(4) - (3)].p_Expression);
@@ -823,7 +823,7 @@
   case 68:
 
 /* Line 690 of lalr1.cc  */
-#line 641 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 643 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_protoSelect) = (yysemantic_stack_[(6) - (5)].p_protoSelect); // ($5.p_group, ...)
 	(yyval.p_protoSelect).p_SolutionModifier = new SolutionModifier(NULL, (yysemantic_stack_[(6) - (5)].p_protoSelect).p_having, (yysemantic_stack_[(6) - (5)].p_protoSelect).p_OrderConditions, (yysemantic_stack_[(6) - (3)].p_int), (yysemantic_stack_[(6) - (4)].p_int)); // !!!
@@ -833,7 +833,7 @@
   case 69:
 
 /* Line 690 of lalr1.cc  */
-#line 648 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 650 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_int) = ((IntegerRDFLiteral*)(yysemantic_stack_[(1) - (1)].p_NumericRDFLiteral))->getValue();
     }
@@ -842,7 +842,7 @@
   case 70:
 
 /* Line 690 of lalr1.cc  */
-#line 651 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 653 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_int) = LIMIT_None;
     }
@@ -851,7 +851,7 @@
   case 72:
 
 /* Line 690 of lalr1.cc  */
-#line 675 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 677 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Operation) = (yysemantic_stack_[(4) - (3)].p_Operation);
     }
@@ -860,7 +860,7 @@
   case 74:
 
 /* Line 690 of lalr1.cc  */
-#line 682 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 684 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Operation) = (yysemantic_stack_[(4) - (3)].p_Operation);
     }
@@ -869,7 +869,7 @@
   case 76:
 
 /* Line 690 of lalr1.cc  */
-#line 689 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 691 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Operation) = (yysemantic_stack_[(3) - (2)]. p_OperationSet);
 }
@@ -878,7 +878,7 @@
   case 77:
 
 /* Line 690 of lalr1.cc  */
-#line 695 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 697 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	OperationSet* ret = new OperationSet();
 	ret->push_back((yysemantic_stack_[(1) - (1)].p_Operation));
@@ -888,7 +888,7 @@
   case 78:
 
 /* Line 690 of lalr1.cc  */
-#line 699 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 701 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yysemantic_stack_[(2) - (1)]. p_OperationSet)->push_back((yysemantic_stack_[(2) - (2)].p_Operation));
 	(yyval. p_OperationSet) = (yysemantic_stack_[(2) - (1)]. p_OperationSet);
@@ -898,7 +898,7 @@
   case 90:
 
 /* Line 690 of lalr1.cc  */
-#line 722 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 724 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Operation) = new Load((yysemantic_stack_[(5) - (3)].p_URI), (yysemantic_stack_[(5) - (4)].p_URI));
     }
@@ -907,7 +907,7 @@
   case 91:
 
 /* Line 690 of lalr1.cc  */
-#line 728 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 730 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_URI) = NULL;
     }
@@ -916,7 +916,7 @@
   case 93:
 
 /* Line 690 of lalr1.cc  */
-#line 737 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 739 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Operation) = new Clear((yysemantic_stack_[(5) - (3)].p_Silence), (yysemantic_stack_[(5) - (4)].p_URI));
     }
@@ -925,7 +925,7 @@
   case 94:
 
 /* Line 690 of lalr1.cc  */
-#line 743 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 745 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Silence) = SILENT_No;
     }
@@ -934,7 +934,7 @@
   case 95:
 
 /* Line 690 of lalr1.cc  */
-#line 746 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 748 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Silence) = SILENT_Yes;
     }
@@ -943,7 +943,7 @@
   case 96:
 
 /* Line 690 of lalr1.cc  */
-#line 754 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 756 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Operation) = new Drop((yysemantic_stack_[(5) - (3)].p_Silence), (yysemantic_stack_[(5) - (4)].p_URI));
     }
@@ -952,7 +952,7 @@
   case 97:
 
 /* Line 690 of lalr1.cc  */
-#line 762 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 764 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Operation) = new Create((yysemantic_stack_[(5) - (3)].p_Silence), (yysemantic_stack_[(5) - (4)].p_URI));
     }
@@ -961,7 +961,7 @@
   case 98:
 
 /* Line 690 of lalr1.cc  */
-#line 770 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 772 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Operation) = new Add((yysemantic_stack_[(6) - (3)].p_Silence), (yysemantic_stack_[(6) - (4)].p_URI), (yysemantic_stack_[(6) - (5)].p_URI));
     }
@@ -970,7 +970,7 @@
   case 99:
 
 /* Line 690 of lalr1.cc  */
-#line 778 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 780 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Operation) = new Move((yysemantic_stack_[(6) - (3)].p_Silence), (yysemantic_stack_[(6) - (4)].p_URI), (yysemantic_stack_[(6) - (5)].p_URI));
     }
@@ -979,7 +979,7 @@
   case 100:
 
 /* Line 690 of lalr1.cc  */
-#line 786 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 788 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Operation) = new Copy((yysemantic_stack_[(6) - (3)].p_Silence), (yysemantic_stack_[(6) - (4)].p_URI), (yysemantic_stack_[(6) - (5)].p_URI));
     }
@@ -988,34 +988,34 @@
   case 101:
 
 /* Line 690 of lalr1.cc  */
-#line 794 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 796 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
-	(yyval.p_Operation) = new Insert((yysemantic_stack_[(4) - (3)].p_op), NULL);
+	(yyval.p_Operation) = new Insert((yysemantic_stack_[(4) - (3)].p_AssertableOperation), NULL);
     }
     break;
 
   case 102:
 
 /* Line 690 of lalr1.cc  */
-#line 802 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 804 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
-	(yyval.p_Operation) = new Delete((yysemantic_stack_[(4) - (3)].p_op), NULL);
+	(yyval.p_Operation) = new Delete((yysemantic_stack_[(4) - (3)].p_AssertableOperation), NULL);
     }
     break;
 
   case 103:
 
 /* Line 690 of lalr1.cc  */
-#line 810 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 812 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
-	(yyval.p_Operation) = new Delete((yysemantic_stack_[(4) - (3)].p_op), NULL);
+	(yyval.p_Operation) = new Delete((yysemantic_stack_[(4) - (3)].p_AssertableOperation), NULL);
     }
     break;
 
   case 104:
 
 /* Line 690 of lalr1.cc  */
-#line 818 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 820 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Operation) = new Modify((yysemantic_stack_[(6) - (5)].p_DeleteInsert).del, (yysemantic_stack_[(6) - (5)].p_DeleteInsert).ins, new WhereClause((yysemantic_stack_[(6) - (4)].p_op)));
     }
@@ -1024,7 +1024,7 @@
   case 105:
 
 /* Line 690 of lalr1.cc  */
-#line 824 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 826 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_DatasetClauses) = new ProductionVector<const DatasetClause*>();
     }
@@ -1033,7 +1033,7 @@
   case 106:
 
 /* Line 690 of lalr1.cc  */
-#line 827 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 829 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yysemantic_stack_[(2) - (1)].p_DatasetClauses)->push_back((yysemantic_stack_[(2) - (2)].p_DatasetClause));
 	(yyval.p_DatasetClauses) = (yysemantic_stack_[(2) - (1)].p_DatasetClauses);
@@ -1043,7 +1043,7 @@
   case 107:
 
 /* Line 690 of lalr1.cc  */
-#line 834 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 836 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Insert) = NULL;
     }
@@ -1052,7 +1052,7 @@
   case 109:
 
 /* Line 690 of lalr1.cc  */
-#line 841 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 843 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_DeleteInsert).del = (yysemantic_stack_[(2) - (1)].p_Delete);
 	(yyval.p_DeleteInsert).ins = (yysemantic_stack_[(2) - (2)].p_Insert);
@@ -1062,7 +1062,7 @@
   case 110:
 
 /* Line 690 of lalr1.cc  */
-#line 845 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 847 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_DeleteInsert).del = NULL;
 	(yyval.p_DeleteInsert).ins = (yysemantic_stack_[(1) - (1)].p_Insert);
@@ -1072,25 +1072,25 @@
   case 111:
 
 /* Line 690 of lalr1.cc  */
-#line 854 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 856 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
-	(yyval.p_Delete) = new Delete((yysemantic_stack_[(4) - (3)].p_op), NULL);
+	(yyval.p_Delete) = new Delete((yysemantic_stack_[(4) - (3)].p_AssertableOperation), NULL);
     }
     break;
 
   case 112:
 
 /* Line 690 of lalr1.cc  */
-#line 862 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 864 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
-	(yyval.p_Insert) = new Insert((yysemantic_stack_[(4) - (3)].p_op), NULL);
+	(yyval.p_Insert) = new Insert((yysemantic_stack_[(4) - (3)].p_AssertableOperation), NULL);
     }
     break;
 
   case 113:
 
 /* Line 690 of lalr1.cc  */
-#line 870 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 872 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_DatasetClause) = new DefaultGraphClause((yysemantic_stack_[(4) - (3)].p_URI), driver.atomFactory);
     }
@@ -1099,7 +1099,7 @@
   case 114:
 
 /* Line 690 of lalr1.cc  */
-#line 873 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 875 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_DatasetClause) = new NamedGraphClause((yysemantic_stack_[(5) - (3)].p_URI), driver.atomFactory);
     }
@@ -1108,7 +1108,7 @@
   case 115:
 
 /* Line 690 of lalr1.cc  */
-#line 881 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 883 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_URI) = NULL;
     }
@@ -1117,7 +1117,7 @@
   case 119:
 
 /* Line 690 of lalr1.cc  */
-#line 897 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 899 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	w3c_sw_NEED_IMPL("DEFAULT");
     }
@@ -1126,7 +1126,7 @@
   case 120:
 
 /* Line 690 of lalr1.cc  */
-#line 900 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 902 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	w3c_sw_NEED_IMPL("NAMED");
     }
@@ -1135,7 +1135,7 @@
   case 121:
 
 /* Line 690 of lalr1.cc  */
-#line 903 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 905 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	w3c_sw_NEED_IMPL("ALL");
     }
@@ -1144,16 +1144,16 @@
   case 124:
 
 /* Line 690 of lalr1.cc  */
-#line 919 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 921 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
-	(yyval.p_op) = (yysemantic_stack_[(1) - (1)].p_conj);
+	(yyval.p_AssertableOperation) = (yysemantic_stack_[(1) - (1)].p_conj);
     }
     break;
 
   case 127:
 
 /* Line 690 of lalr1.cc  */
-#line 930 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 932 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_conj) = new ParserTableConjunction();
     }
@@ -1162,7 +1162,7 @@
   case 128:
 
 /* Line 690 of lalr1.cc  */
-#line 933 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 935 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yysemantic_stack_[(2) - (1)].p_conj)->addTableOperation((yysemantic_stack_[(2) - (2)].p_op), false);
 	(yyval.p_conj) = (yysemantic_stack_[(2) - (1)].p_conj);
@@ -1172,7 +1172,7 @@
   case 129:
 
 /* Line 690 of lalr1.cc  */
-#line 940 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 942 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_TTerm) = driver.curGraphName;
 	driver.curGraphName = (yysemantic_stack_[(2) - (2)].p_TTerm);
@@ -1182,7 +1182,7 @@
   case 130:
 
 /* Line 690 of lalr1.cc  */
-#line 943 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 945 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	  (yyval.p_op) = (yysemantic_stack_[(4) - (4)].p_op);
 	  driver.curGraphName = (yysemantic_stack_[(4) - (3)].p_TTerm);
@@ -1192,7 +1192,7 @@
   case 131:
 
 /* Line 690 of lalr1.cc  */
-#line 950 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 952 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_op) = (yysemantic_stack_[(4) - (3)].p_BasicGraphPattern);
     }
@@ -1201,7 +1201,7 @@
   case 132:
 
 /* Line 690 of lalr1.cc  */
-#line 953 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 955 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_op) = driver.ensureGraphPattern();
     }
@@ -1210,7 +1210,7 @@
   case 133:
 
 /* Line 690 of lalr1.cc  */
-#line 959 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 961 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_BasicGraphPattern) = driver.ensureGraphPattern();
 	(yyval.p_BasicGraphPattern)->addTriplePattern((yysemantic_stack_[(1) - (1)].p_TriplePattern));
@@ -1220,7 +1220,7 @@
   case 134:
 
 /* Line 690 of lalr1.cc  */
-#line 963 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 965 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yysemantic_stack_[(2) - (1)].p_BasicGraphPattern)->addTriplePattern((yysemantic_stack_[(2) - (2)].p_TriplePattern));
 	(yyval.p_BasicGraphPattern) = (yysemantic_stack_[(2) - (1)].p_BasicGraphPattern);
@@ -1230,7 +1230,7 @@
   case 137:
 
 /* Line 690 of lalr1.cc  */
-#line 972 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 974 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yysemantic_stack_[(5) - (4)].p_conj)->insertTableOperation((yysemantic_stack_[(5) - (3)].p_op));
 	(yyval.p_op) = (yysemantic_stack_[(5) - (4)].p_conj);
@@ -1240,7 +1240,7 @@
   case 143:
 
 /* Line 690 of lalr1.cc  */
-#line 981 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 983 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	throw new std::string("GroupGraphPatternNoSub: GT_LPAREN IT_path VarOrTerm Path VarOrTerm GT_RPAREN not implemented");
 	(yyval.p_op) = driver.ensureGraphPattern();
@@ -1250,7 +1250,7 @@
   case 146:
 
 /* Line 690 of lalr1.cc  */
-#line 993 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 995 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_conj) = new ParserTableConjunction();
 	(yyval.p_conj)->addTableOperation((yysemantic_stack_[(1) - (1)].p_op), driver.unnestTree);
@@ -1260,7 +1260,7 @@
   case 147:
 
 /* Line 690 of lalr1.cc  */
-#line 997 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 999 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yysemantic_stack_[(2) - (1)].p_conj)->addTableOperation((yysemantic_stack_[(2) - (2)].p_op), driver.unnestTree);
 	(yyval.p_conj) = (yysemantic_stack_[(2) - (1)].p_conj);
@@ -1270,7 +1270,7 @@
   case 150:
 
 /* Line 690 of lalr1.cc  */
-#line 1006 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1008 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yysemantic_stack_[(5) - (4)].p_conj)->addTableOperation((yysemantic_stack_[(5) - (3)].p_op), driver.unnestTree);
 	(yyval.p_op) = (yysemantic_stack_[(5) - (4)].p_conj);
@@ -1280,7 +1280,7 @@
   case 156:
 
 /* Line 690 of lalr1.cc  */
-#line 1015 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1017 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	throw new std::string("GroupGraphPatternSub: GT_LPAREN IT_path VarOrTerm Path VarOrTerm GT_RPAREN not implemented");
 	(yyval.p_op) = driver.ensureGraphPattern();
@@ -1290,7 +1290,7 @@
   case 157:
 
 /* Line 690 of lalr1.cc  */
-#line 1019 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1021 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_op) = new SubSelect(new Select((yysemantic_stack_[(1) - (1)].p_protoSelect).distinctness, (yysemantic_stack_[(1) - (1)].p_protoSelect).varSet, NULL, (yysemantic_stack_[(1) - (1)].p_protoSelect).p_WhereClause, (yysemantic_stack_[(1) - (1)].p_protoSelect).p_SolutionModifier));
     }
@@ -1299,7 +1299,7 @@
   case 158:
 
 /* Line 690 of lalr1.cc  */
-#line 1025 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1027 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_conj) = new ParserTableConjunction();
 	(yyval.p_conj)->addTableOperation((yysemantic_stack_[(1) - (1)].p_op), driver.unnestTree);
@@ -1309,7 +1309,7 @@
   case 159:
 
 /* Line 690 of lalr1.cc  */
-#line 1029 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1031 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yysemantic_stack_[(2) - (1)].p_conj)->addTableOperation((yysemantic_stack_[(2) - (2)].p_op), driver.unnestTree);
 	(yyval.p_conj) = (yysemantic_stack_[(2) - (1)].p_conj);
@@ -1319,7 +1319,7 @@
   case 160:
 
 /* Line 690 of lalr1.cc  */
-#line 1036 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1038 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expressions) = (yysemantic_stack_[(4) - (3)].p_Expressions);
     }
@@ -1328,7 +1328,7 @@
   case 161:
 
 /* Line 690 of lalr1.cc  */
-#line 1042 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1044 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expressions) = new ProductionVector<const Expression*>((yysemantic_stack_[(1) - (1)].p_Expression));
     }
@@ -1337,7 +1337,7 @@
   case 162:
 
 /* Line 690 of lalr1.cc  */
-#line 1045 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1047 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yysemantic_stack_[(2) - (1)].p_Expressions)->push_back((yysemantic_stack_[(2) - (2)].p_Expression));
 	(yyval.p_Expressions) = (yysemantic_stack_[(2) - (1)].p_Expressions);
@@ -1347,7 +1347,7 @@
   case 163:
 
 /* Line 690 of lalr1.cc  */
-#line 1052 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1054 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_TriplePattern) = driver.atomFactory->getTriple((yysemantic_stack_[(6) - (3)].p_TTerm), (yysemantic_stack_[(6) - (4)].p_TTerm), (yysemantic_stack_[(6) - (5)].p_TTerm));
     }
@@ -1356,7 +1356,7 @@
   case 164:
 
 /* Line 690 of lalr1.cc  */
-#line 1066 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1068 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	OptionalGraphPattern* opt = new OptionalGraphPattern((yysemantic_stack_[(6) - (4)].p_op));
 	TableConjunction* conj = new TableConjunction();
@@ -1376,7 +1376,7 @@
   case 165:
 
 /* Line 690 of lalr1.cc  */
-#line 1080 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1082 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	OptionalGraphPattern* opt = new OptionalGraphPattern((yysemantic_stack_[(5) - (3)].p_op));
 	if ((yysemantic_stack_[(5) - (4)].p_Expressions) != NULL) {
@@ -1393,7 +1393,7 @@
   case 166:
 
 /* Line 690 of lalr1.cc  */
-#line 1094 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1096 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expressions) = NULL;
     }
@@ -1402,7 +1402,7 @@
   case 168:
 
 /* Line 690 of lalr1.cc  */
-#line 1101 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1103 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_TTerm) = driver.curGraphName;
 	driver.curGraphName = (yysemantic_stack_[(3) - (3)].p_TTerm);
@@ -1412,7 +1412,7 @@
   case 169:
 
 /* Line 690 of lalr1.cc  */
-#line 1104 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1106 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	  (yyval.p_op) = (yysemantic_stack_[(6) - (5)].p_op);
 	  driver.curGraphName = (yysemantic_stack_[(6) - (4)].p_TTerm);
@@ -1422,7 +1422,7 @@
   case 170:
 
 /* Line 690 of lalr1.cc  */
-#line 1111 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1113 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_op) = new ServiceGraphPattern((yysemantic_stack_[(6) - (4)].p_TTerm), (yysemantic_stack_[(6) - (5)].p_op), (yysemantic_stack_[(6) - (3)].p_Silence), driver.atomFactory, false);
     }
@@ -1431,7 +1431,7 @@
   case 171:
 
 /* Line 690 of lalr1.cc  */
-#line 1119 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1121 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	TableConjunction* ret = new TableConjunction();
 	ret->addTableOperation((yysemantic_stack_[(5) - (3)].p_op), driver.unnestTree);
@@ -1443,7 +1443,7 @@
   case 172:
 
 /* Line 690 of lalr1.cc  */
-#line 1128 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1130 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	TableDisjunction* ret = new TableDisjunction();
 	ret->addTableOperation((yysemantic_stack_[(5) - (3)].p_op), driver.unnestTree);
@@ -1455,7 +1455,7 @@
   case 173:
 
 /* Line 690 of lalr1.cc  */
-#line 1137 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1139 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_op) = new Filter((yysemantic_stack_[(5) - (4)].p_op), (yysemantic_stack_[(5) - (3)].p_Expressions)->begin(), (yysemantic_stack_[(5) - (3)].p_Expressions)->end());
 	(yysemantic_stack_[(5) - (3)].p_Expressions)->clear();
@@ -1466,7 +1466,7 @@
   case 174:
 
 /* Line 690 of lalr1.cc  */
-#line 1153 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1155 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expressions) = NULL;
     }
@@ -1475,7 +1475,7 @@
   case 175:
 
 /* Line 690 of lalr1.cc  */
-#line 1156 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1158 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yysemantic_stack_[(4) - (3)].p_Expressions)->push_front((yysemantic_stack_[(4) - (2)].p_Expression));
 	(yyval.p_Expressions) = (yysemantic_stack_[(4) - (3)].p_Expressions);
@@ -1485,7 +1485,7 @@
   case 176:
 
 /* Line 690 of lalr1.cc  */
-#line 1163 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1165 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = (yysemantic_stack_[(2) - (2)].p_Expression);
     }
@@ -1494,7 +1494,7 @@
   case 177:
 
 /* Line 690 of lalr1.cc  */
-#line 1169 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1171 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expressions) = new ProductionVector<const Expression*>();
     }
@@ -1503,7 +1503,7 @@
   case 178:
 
 /* Line 690 of lalr1.cc  */
-#line 1172 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1174 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yysemantic_stack_[(2) - (1)].p_Expressions)->push_back((yysemantic_stack_[(2) - (2)].p_Expression));
 	(yyval.p_Expressions) = (yysemantic_stack_[(2) - (1)].p_Expressions);
@@ -1513,7 +1513,7 @@
   case 185:
 
 /* Line 690 of lalr1.cc  */
-#line 1229 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1231 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	// $$ = new PathAlternative($3, $4);
     }
@@ -1522,7 +1522,7 @@
   case 186:
 
 /* Line 690 of lalr1.cc  */
-#line 1235 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1237 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	// $$ = new PathSequence($3, $4);
     }
@@ -1531,7 +1531,7 @@
   case 187:
 
 /* Line 690 of lalr1.cc  */
-#line 1243 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1245 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	// $$ = new PathEltOrInverse($3);
     }
@@ -1540,7 +1540,7 @@
   case 188:
 
 /* Line 690 of lalr1.cc  */
-#line 1249 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1251 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	// $$ = $3;
     }
@@ -1549,7 +1549,7 @@
   case 189:
 
 /* Line 690 of lalr1.cc  */
-#line 1252 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1254 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	// $$ = $5;
       }
@@ -1558,7 +1558,7 @@
   case 193:
 
 /* Line 690 of lalr1.cc  */
-#line 1264 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1266 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_TTerm) = (yysemantic_stack_[(1) - (1)].p_URI);
     }
@@ -1567,7 +1567,7 @@
   case 194:
 
 /* Line 690 of lalr1.cc  */
-#line 1267 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1269 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_TTerm) = driver.getURI("http://www.w3.org/1999/02/22-rdf-syntax-ns#type");
     }
@@ -1576,7 +1576,7 @@
   case 195:
 
 /* Line 690 of lalr1.cc  */
-#line 1275 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1277 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_TTerm) = (yysemantic_stack_[(4) - (3)].p_TTerm);
     }
@@ -1585,7 +1585,7 @@
   case 197:
 
 /* Line 690 of lalr1.cc  */
-#line 1282 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1284 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	// $1->push_back($2);
 	(yyval.p_TTerm) = (yysemantic_stack_[(2) - (1)].p_TTerm);
@@ -1595,7 +1595,7 @@
   case 198:
 
 /* Line 690 of lalr1.cc  */
-#line 1289 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1291 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_NumericRDFLiteral) = (yysemantic_stack_[(1) - (1)].p_NumericRDFLiteral);
     }
@@ -1604,7 +1604,7 @@
   case 199:
 
 /* Line 690 of lalr1.cc  */
-#line 1306 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1308 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_TTerm) = (yysemantic_stack_[(1) - (1)].p_Variable);
     }
@@ -1613,7 +1613,7 @@
   case 201:
 
 /* Line 690 of lalr1.cc  */
-#line 1313 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1315 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_TTerm) = (yysemantic_stack_[(1) - (1)].p_Variable);
     }
@@ -1622,7 +1622,7 @@
   case 202:
 
 /* Line 690 of lalr1.cc  */
-#line 1316 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1318 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_TTerm) = (yysemantic_stack_[(1) - (1)].p_URI);
     }
@@ -1631,7 +1631,7 @@
   case 205:
 
 /* Line 690 of lalr1.cc  */
-#line 1327 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1329 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_TTerm) = (yysemantic_stack_[(1) - (1)].p_URI);
     }
@@ -1640,7 +1640,7 @@
   case 207:
 
 /* Line 690 of lalr1.cc  */
-#line 1331 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1333 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_TTerm) = (yysemantic_stack_[(1) - (1)].p_NumericRDFLiteral);
     }
@@ -1649,7 +1649,7 @@
   case 208:
 
 /* Line 690 of lalr1.cc  */
-#line 1334 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1336 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_TTerm) = (yysemantic_stack_[(1) - (1)].p_BooleanRDFLiteral);
     }
@@ -1658,7 +1658,7 @@
   case 210:
 
 /* Line 690 of lalr1.cc  */
-#line 1338 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1340 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_TTerm) = driver.getURI("http://www.w3.org/1999/02/22-rdf-syntax-ns#nil");
     }
@@ -1667,7 +1667,7 @@
   case 217:
 
 /* Line 690 of lalr1.cc  */
-#line 1353 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1355 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	ProductionVector<const Expression*>* t = new ProductionVector<const Expression*>();
 	t->push_back((yysemantic_stack_[(5) - (3)].p_Expression));
@@ -1679,7 +1679,7 @@
   case 218:
 
 /* Line 690 of lalr1.cc  */
-#line 1362 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1364 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	ProductionVector<const Expression*>* t = new ProductionVector<const Expression*>();
 	t->push_back((yysemantic_stack_[(5) - (3)].p_Expression));
@@ -1691,7 +1691,7 @@
   case 222:
 
 /* Line 690 of lalr1.cc  */
-#line 1380 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1382 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new BooleanEQ((yysemantic_stack_[(5) - (3)].p_Expression), (yysemantic_stack_[(5) - (4)].p_Expression));
     }
@@ -1700,7 +1700,7 @@
   case 223:
 
 /* Line 690 of lalr1.cc  */
-#line 1383 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1385 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new BooleanNE((yysemantic_stack_[(5) - (3)].p_Expression), (yysemantic_stack_[(5) - (4)].p_Expression));
     }
@@ -1709,7 +1709,7 @@
   case 224:
 
 /* Line 690 of lalr1.cc  */
-#line 1386 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1388 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new BooleanLT((yysemantic_stack_[(5) - (3)].p_Expression), (yysemantic_stack_[(5) - (4)].p_Expression));
     }
@@ -1718,7 +1718,7 @@
   case 225:
 
 /* Line 690 of lalr1.cc  */
-#line 1389 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1391 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new BooleanGT((yysemantic_stack_[(5) - (3)].p_Expression), (yysemantic_stack_[(5) - (4)].p_Expression));
     }
@@ -1727,7 +1727,7 @@
   case 226:
 
 /* Line 690 of lalr1.cc  */
-#line 1392 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1394 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new BooleanLE((yysemantic_stack_[(5) - (3)].p_Expression), (yysemantic_stack_[(5) - (4)].p_Expression));
     }
@@ -1736,7 +1736,7 @@
   case 227:
 
 /* Line 690 of lalr1.cc  */
-#line 1395 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1397 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new BooleanGE((yysemantic_stack_[(5) - (3)].p_Expression), (yysemantic_stack_[(5) - (4)].p_Expression));
     }
@@ -1745,7 +1745,7 @@
   case 228:
 
 /* Line 690 of lalr1.cc  */
-#line 1398 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1400 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new NaryIn((yysemantic_stack_[(4) - (3)].p_Expressions));
     }
@@ -1754,7 +1754,7 @@
   case 230:
 
 /* Line 690 of lalr1.cc  */
-#line 1410 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1412 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	ProductionVector<const Expression*>* t = new ProductionVector<const Expression*>();
 	t->push_back((yysemantic_stack_[(5) - (3)].p_Expression));
@@ -1766,7 +1766,7 @@
   case 231:
 
 /* Line 690 of lalr1.cc  */
-#line 1416 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1418 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	ProductionVector<const Expression*>* t = new ProductionVector<const Expression*>();
 	t->push_back((yysemantic_stack_[(5) - (3)].p_Expression));
@@ -1778,7 +1778,7 @@
   case 232:
 
 /* Line 690 of lalr1.cc  */
-#line 1430 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1432 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	ProductionVector<const Expression*>* t = new ProductionVector<const Expression*>();
 	t->push_back((yysemantic_stack_[(5) - (3)].p_Expression));
@@ -1790,7 +1790,7 @@
   case 233:
 
 /* Line 690 of lalr1.cc  */
-#line 1436 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1438 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	ProductionVector<const Expression*>* t = new ProductionVector<const Expression*>();
 	t->push_back((yysemantic_stack_[(5) - (3)].p_Expression));
@@ -1802,7 +1802,7 @@
   case 234:
 
 /* Line 690 of lalr1.cc  */
-#line 1445 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1447 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new BooleanNegation((yysemantic_stack_[(4) - (3)].p_Expression));
     }
@@ -1811,7 +1811,7 @@
   case 235:
 
 /* Line 690 of lalr1.cc  */
-#line 1448 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1450 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = (yysemantic_stack_[(4) - (3)].p_Expression);
     }
@@ -1820,7 +1820,7 @@
   case 236:
 
 /* Line 690 of lalr1.cc  */
-#line 1451 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1453 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new ArithmeticNegation((yysemantic_stack_[(4) - (3)].p_Expression));
     }
@@ -1829,7 +1829,7 @@
   case 239:
 
 /* Line 690 of lalr1.cc  */
-#line 1459 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1461 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new TTermExpression((yysemantic_stack_[(1) - (1)].p_TTerm));
     }
@@ -1838,7 +1838,7 @@
   case 240:
 
 /* Line 690 of lalr1.cc  */
-#line 1462 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1464 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new TTermExpression((yysemantic_stack_[(1) - (1)].p_NumericRDFLiteral));
     }
@@ -1847,7 +1847,7 @@
   case 241:
 
 /* Line 690 of lalr1.cc  */
-#line 1465 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1467 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new TTermExpression((yysemantic_stack_[(1) - (1)].p_BooleanRDFLiteral));
     }
@@ -1856,7 +1856,7 @@
   case 242:
 
 /* Line 690 of lalr1.cc  */
-#line 1468 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1470 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new TTermExpression((yysemantic_stack_[(1) - (1)].p_Variable));
     }
@@ -1865,7 +1865,7 @@
   case 243:
 
 /* Line 690 of lalr1.cc  */
-#line 1471 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1473 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new TTermExpression((yysemantic_stack_[(1) - (1)].p_TTerm));
     }
@@ -1874,7 +1874,7 @@
   case 244:
 
 /* Line 690 of lalr1.cc  */
-#line 1482 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1484 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_str, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -1883,7 +1883,7 @@
   case 245:
 
 /* Line 690 of lalr1.cc  */
-#line 1485 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1487 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_lang, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -1892,7 +1892,7 @@
   case 246:
 
 /* Line 690 of lalr1.cc  */
-#line 1488 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1490 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_langMatches, (yysemantic_stack_[(6) - (3)].p_Expression), (yysemantic_stack_[(6) - (5)].p_Expression), NULL));
     }
@@ -1901,7 +1901,7 @@
   case 247:
 
 /* Line 690 of lalr1.cc  */
-#line 1491 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1493 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_datatype, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -1910,7 +1910,7 @@
   case 248:
 
 /* Line 690 of lalr1.cc  */
-#line 1494 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1496 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_bound, new TTermExpression((yysemantic_stack_[(4) - (3)].p_Variable)), NULL, NULL));
     }
@@ -1919,7 +1919,7 @@
   case 249:
 
 /* Line 690 of lalr1.cc  */
-#line 1497 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1499 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_iri, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -1928,7 +1928,7 @@
   case 250:
 
 /* Line 690 of lalr1.cc  */
-#line 1500 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1502 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_iri, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -1937,7 +1937,7 @@
   case 251:
 
 /* Line 690 of lalr1.cc  */
-#line 1503 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1505 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_bnode, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -1946,7 +1946,7 @@
   case 252:
 
 /* Line 690 of lalr1.cc  */
-#line 1506 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1508 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_rand, NULL, NULL, NULL));
     }
@@ -1955,7 +1955,7 @@
   case 253:
 
 /* Line 690 of lalr1.cc  */
-#line 1509 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1511 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_numeric_abs, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -1964,7 +1964,7 @@
   case 254:
 
 /* Line 690 of lalr1.cc  */
-#line 1512 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1514 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_numeric_ciel, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -1973,7 +1973,7 @@
   case 255:
 
 /* Line 690 of lalr1.cc  */
-#line 1515 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1517 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_numeric_floor, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -1982,7 +1982,7 @@
   case 256:
 
 /* Line 690 of lalr1.cc  */
-#line 1518 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1520 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_numeric_round, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -1991,7 +1991,7 @@
   case 257:
 
 /* Line 690 of lalr1.cc  */
-#line 1521 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1523 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_concat, new ArgList((yysemantic_stack_[(4) - (3)].p_Expressions))));
     }
@@ -2000,7 +2000,7 @@
   case 259:
 
 /* Line 690 of lalr1.cc  */
-#line 1525 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1527 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_string_length, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -2009,7 +2009,7 @@
   case 260:
 
 /* Line 690 of lalr1.cc  */
-#line 1528 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1530 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_upper_case, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -2018,7 +2018,7 @@
   case 261:
 
 /* Line 690 of lalr1.cc  */
-#line 1531 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1533 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_lower_case, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -2027,7 +2027,7 @@
   case 262:
 
 /* Line 690 of lalr1.cc  */
-#line 1534 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1536 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_encode_for_uri, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -2036,7 +2036,7 @@
   case 263:
 
 /* Line 690 of lalr1.cc  */
-#line 1537 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1539 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_contains, (yysemantic_stack_[(6) - (3)].p_Expression), (yysemantic_stack_[(6) - (5)].p_Expression), NULL));
     }
@@ -2045,7 +2045,7 @@
   case 264:
 
 /* Line 690 of lalr1.cc  */
-#line 1540 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1542 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_starts_with, (yysemantic_stack_[(6) - (3)].p_Expression), (yysemantic_stack_[(6) - (5)].p_Expression), NULL));
     }
@@ -2054,7 +2054,7 @@
   case 265:
 
 /* Line 690 of lalr1.cc  */
-#line 1543 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1545 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_ends_with, (yysemantic_stack_[(6) - (3)].p_Expression), (yysemantic_stack_[(6) - (5)].p_Expression), NULL));
     }
@@ -2063,7 +2063,7 @@
   case 266:
 
 /* Line 690 of lalr1.cc  */
-#line 1546 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1548 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_substring_before, (yysemantic_stack_[(6) - (3)].p_Expression), (yysemantic_stack_[(6) - (5)].p_Expression), NULL));
     }
@@ -2072,7 +2072,7 @@
   case 267:
 
 /* Line 690 of lalr1.cc  */
-#line 1549 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1551 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_substring_after, (yysemantic_stack_[(6) - (3)].p_Expression), (yysemantic_stack_[(6) - (5)].p_Expression), NULL));
     }
@@ -2081,7 +2081,7 @@
   case 268:
 
 /* Line 690 of lalr1.cc  */
-#line 1552 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1554 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_year_from_dateTime, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -2090,7 +2090,7 @@
   case 269:
 
 /* Line 690 of lalr1.cc  */
-#line 1555 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1557 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_month_from_dateTime, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -2099,7 +2099,7 @@
   case 270:
 
 /* Line 690 of lalr1.cc  */
-#line 1558 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1560 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_day_from_dateTime, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -2108,7 +2108,7 @@
   case 271:
 
 /* Line 690 of lalr1.cc  */
-#line 1561 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1563 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_hours_from_dateTime, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -2117,7 +2117,7 @@
   case 272:
 
 /* Line 690 of lalr1.cc  */
-#line 1564 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1566 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_minutes_from_dateTime, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -2126,7 +2126,7 @@
   case 273:
 
 /* Line 690 of lalr1.cc  */
-#line 1567 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1569 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_seconds_from_dateTime, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -2135,7 +2135,7 @@
   case 274:
 
 /* Line 690 of lalr1.cc  */
-#line 1570 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1572 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_timezone_from_dateTime, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -2144,7 +2144,7 @@
   case 275:
 
 /* Line 690 of lalr1.cc  */
-#line 1573 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1575 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_timezone_from_dateTime, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -2153,7 +2153,7 @@
   case 276:
 
 /* Line 690 of lalr1.cc  */
-#line 1576 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1578 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_now, NULL, NULL, NULL));
     }
@@ -2162,7 +2162,7 @@
   case 277:
 
 /* Line 690 of lalr1.cc  */
-#line 1579 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1581 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_md5, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -2171,7 +2171,7 @@
   case 278:
 
 /* Line 690 of lalr1.cc  */
-#line 1582 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1584 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_sha1, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -2180,7 +2180,7 @@
   case 279:
 
 /* Line 690 of lalr1.cc  */
-#line 1585 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1587 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_sha256, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -2189,7 +2189,7 @@
   case 280:
 
 /* Line 690 of lalr1.cc  */
-#line 1588 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1590 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_sha384, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -2198,7 +2198,7 @@
   case 281:
 
 /* Line 690 of lalr1.cc  */
-#line 1591 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1593 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_sha512, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -2207,7 +2207,7 @@
   case 282:
 
 /* Line 690 of lalr1.cc  */
-#line 1594 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1596 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = NULL; // new FunctionCallExpression(new FunctionCall(TTerm::FUNC_coalesce, $2, NULL, NULL));
 	w3c_sw_NEED_IMPL("COALESCE");
@@ -2217,7 +2217,7 @@
   case 283:
 
 /* Line 690 of lalr1.cc  */
-#line 1598 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1600 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_if, (yysemantic_stack_[(8) - (3)].p_Expression), (yysemantic_stack_[(8) - (5)].p_Expression), (yysemantic_stack_[(8) - (7)].p_Expression)));
     }
@@ -2226,7 +2226,7 @@
   case 284:
 
 /* Line 690 of lalr1.cc  */
-#line 1601 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1603 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_strlang, (yysemantic_stack_[(6) - (3)].p_Expression), (yysemantic_stack_[(6) - (5)].p_Expression), NULL));
     }
@@ -2235,7 +2235,7 @@
   case 285:
 
 /* Line 690 of lalr1.cc  */
-#line 1604 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1606 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_strdt, (yysemantic_stack_[(6) - (3)].p_Expression), (yysemantic_stack_[(6) - (5)].p_Expression), NULL));
     }
@@ -2244,7 +2244,7 @@
   case 286:
 
 /* Line 690 of lalr1.cc  */
-#line 1607 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1609 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_sameTerm, (yysemantic_stack_[(6) - (3)].p_Expression), (yysemantic_stack_[(6) - (5)].p_Expression), NULL));
     }
@@ -2253,7 +2253,7 @@
   case 287:
 
 /* Line 690 of lalr1.cc  */
-#line 1610 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1612 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_isIRI, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -2262,7 +2262,7 @@
   case 288:
 
 /* Line 690 of lalr1.cc  */
-#line 1613 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1615 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_isIRI, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -2271,7 +2271,7 @@
   case 289:
 
 /* Line 690 of lalr1.cc  */
-#line 1616 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1618 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_isBlank, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -2280,7 +2280,7 @@
   case 290:
 
 /* Line 690 of lalr1.cc  */
-#line 1619 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1621 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_isLiteral, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -2289,7 +2289,7 @@
   case 291:
 
 /* Line 690 of lalr1.cc  */
-#line 1622 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1624 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_isNumeric, (yysemantic_stack_[(4) - (3)].p_Expression), NULL, NULL));
     }
@@ -2298,7 +2298,7 @@
   case 294:
 
 /* Line 690 of lalr1.cc  */
-#line 1630 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1632 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = NULL;
     }
@@ -2307,7 +2307,7 @@
   case 296:
 
 /* Line 690 of lalr1.cc  */
-#line 1639 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1641 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_matches, (yysemantic_stack_[(7) - (3)].p_Expression), (yysemantic_stack_[(7) - (5)].p_Expression), (yysemantic_stack_[(7) - (6)].p_Expression)));
     }
@@ -2316,7 +2316,7 @@
   case 297:
 
 /* Line 690 of lalr1.cc  */
-#line 1645 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1647 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = NULL;
     }
@@ -2325,7 +2325,7 @@
   case 299:
 
 /* Line 690 of lalr1.cc  */
-#line 1652 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1654 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall(TTerm::FUNC_substring, (yysemantic_stack_[(7) - (3)].p_Expression), (yysemantic_stack_[(7) - (5)].p_Expression), (yysemantic_stack_[(7) - (6)].p_Expression)));
     }
@@ -2334,7 +2334,7 @@
   case 300:
 
 /* Line 690 of lalr1.cc  */
-#line 1658 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1660 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = NULL; // new FunctionCallExpression(new FunctionCall(TTerm::FUNC_exists, driver.ensureGraphPattern(), NULL, NULL));
 	w3c_sw_NEED_IMPL("EXISTS");
@@ -2344,7 +2344,7 @@
   case 305:
 
 /* Line 690 of lalr1.cc  */
-#line 1680 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1682 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
  	(yyval.p_Expression) = new FunctionCallExpression(new AggregateCall(TTerm::FUNC_count, (yysemantic_stack_[(3) - (2)].p_distinctness), (yysemantic_stack_[(3) - (3)].p_Expression)));
     }
@@ -2353,7 +2353,7 @@
   case 306:
 
 /* Line 690 of lalr1.cc  */
-#line 1686 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1688 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_distinctness) = DIST_all;
     }
@@ -2362,7 +2362,7 @@
   case 307:
 
 /* Line 690 of lalr1.cc  */
-#line 1689 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1691 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_distinctness) = DIST_distinct;
 }
@@ -2371,7 +2371,7 @@
   case 308:
 
 /* Line 690 of lalr1.cc  */
-#line 1695 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1697 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = NULL;
     }
@@ -2380,7 +2380,7 @@
   case 310:
 
 /* Line 690 of lalr1.cc  */
-#line 1702 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1704 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new AggregateCall((yysemantic_stack_[(3) - (1)].p_URI), (yysemantic_stack_[(3) - (2)].p_distinctness), (yysemantic_stack_[(3) - (3)].p_Expression)));
     }
@@ -2389,7 +2389,7 @@
   case 311:
 
 /* Line 690 of lalr1.cc  */
-#line 1708 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1710 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_URI) = TTerm::FUNC_sum;
     }
@@ -2398,7 +2398,7 @@
   case 312:
 
 /* Line 690 of lalr1.cc  */
-#line 1711 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1713 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_URI) = TTerm::FUNC_min;
     }
@@ -2407,7 +2407,7 @@
   case 313:
 
 /* Line 690 of lalr1.cc  */
-#line 1714 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1716 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_URI) = TTerm::FUNC_max;
     }
@@ -2416,7 +2416,7 @@
   case 314:
 
 /* Line 690 of lalr1.cc  */
-#line 1717 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1719 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_URI) = TTerm::FUNC_avg;
     }
@@ -2425,7 +2425,7 @@
   case 315:
 
 /* Line 690 of lalr1.cc  */
-#line 1720 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1722 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_URI) = TTerm::FUNC_sample;
     }
@@ -2434,7 +2434,7 @@
   case 316:
 
 /* Line 690 of lalr1.cc  */
-#line 1726 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1728 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new AggregateCall(TTerm::FUNC_group_concat, (yysemantic_stack_[(3) - (2)].p_distinctness), (yysemantic_stack_[(3) - (3)].p_Expression)));
     }
@@ -2443,7 +2443,7 @@
   case 317:
 
 /* Line 690 of lalr1.cc  */
-#line 1729 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1731 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new AggregateCall(TTerm::FUNC_group_concat, (yysemantic_stack_[(4) - (2)].p_distinctness), (yysemantic_stack_[(4) - (4)].p_Expression)));
     }
@@ -2452,7 +2452,7 @@
   case 319:
 
 /* Line 690 of lalr1.cc  */
-#line 1739 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1741 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new TTermExpression((yysemantic_stack_[(1) - (1)].p_URI));
     }
@@ -2461,7 +2461,7 @@
   case 320:
 
 /* Line 690 of lalr1.cc  */
-#line 1742 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1744 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_Expression) = new FunctionCallExpression(new FunctionCall((yysemantic_stack_[(4) - (2)].p_URI), new ArgList((yysemantic_stack_[(4) - (3)].p_Expressions))));
     }
@@ -2470,7 +2470,7 @@
   case 321:
 
 /* Line 690 of lalr1.cc  */
-#line 1748 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1750 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_TTerm) = driver.getRDFLiteral(*(yysemantic_stack_[(2) - (1)].p_string), (yysemantic_stack_[(2) - (2)].p_uri_or_langtag).uri, (yysemantic_stack_[(2) - (2)].p_uri_or_langtag).langtag);
 	delete (yysemantic_stack_[(2) - (1)].p_string);
@@ -2480,7 +2480,7 @@
   case 322:
 
 /* Line 690 of lalr1.cc  */
-#line 1755 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1757 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_URI) = (yysemantic_stack_[(2) - (2)].p_URI);
     }
@@ -2489,7 +2489,7 @@
   case 323:
 
 /* Line 690 of lalr1.cc  */
-#line 1761 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1763 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_uri_or_langtag).uri = NULL;
 	(yyval.p_uri_or_langtag).langtag = (yysemantic_stack_[(1) - (1)].p_LANGTAG);
@@ -2499,7 +2499,7 @@
   case 324:
 
 /* Line 690 of lalr1.cc  */
-#line 1765 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1767 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_uri_or_langtag).uri = (yysemantic_stack_[(1) - (1)].p_URI);
 	(yyval.p_uri_or_langtag).langtag = NULL;
@@ -2509,7 +2509,7 @@
   case 325:
 
 /* Line 690 of lalr1.cc  */
-#line 1772 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1774 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
     {
 	(yyval.p_uri_or_langtag).uri = NULL;
 	(yyval.p_uri_or_langtag).langtag = NULL;
@@ -3868,42 +3868,42 @@
   const unsigned short int
   SPARQLalgebraParser::yyrline_[] =
   {
-         0,   337,   337,   340,   346,   350,   353,   357,   360,   364,
-     367,   370,   373,   379,   382,   389,   390,   397,   398,   405,
-     406,   413,   414,   421,   422,   429,   433,   439,   440,   448,
-     454,   460,   464,   466,   464,   474,   476,   480,   487,   490,
-     497,   502,   504,   508,   512,   516,   522,   523,   524,   525,
-     526,   530,   534,   564,   570,   577,   578,   582,   583,   589,
-     598,   605,   609,   616,   617,   624,   628,   634,   641,   648,
-     651,   671,   675,   678,   682,   685,   689,   695,   699,   708,
-     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
-     722,   728,   731,   737,   743,   746,   754,   762,   770,   778,
-     786,   794,   802,   810,   818,   824,   827,   834,   837,   841,
-     845,   854,   862,   870,   873,   881,   884,   890,   896,   897,
-     900,   903,   911,   915,   919,   925,   926,   930,   933,   940,
-     940,   950,   953,   959,   963,   970,   971,   972,   976,   977,
-     978,   979,   980,   981,   988,   989,   993,   997,  1004,  1005,
-    1006,  1010,  1011,  1012,  1013,  1014,  1015,  1019,  1025,  1029,
-    1036,  1042,  1045,  1052,  1066,  1080,  1094,  1097,  1101,  1101,
-    1111,  1119,  1128,  1137,  1153,  1156,  1163,  1169,  1172,  1220,
-    1221,  1222,  1223,  1224,  1225,  1229,  1235,  1243,  1249,  1252,
-    1258,  1259,  1260,  1264,  1267,  1275,  1281,  1282,  1289,  1306,
-    1309,  1313,  1316,  1322,  1323,  1327,  1330,  1331,  1334,  1337,
-    1338,  1344,  1345,  1346,  1347,  1348,  1349,  1353,  1362,  1371,
-    1375,  1376,  1380,  1383,  1386,  1389,  1392,  1395,  1398,  1406,
-    1410,  1416,  1430,  1436,  1445,  1448,  1451,  1457,  1458,  1459,
-    1462,  1465,  1468,  1471,  1482,  1485,  1488,  1491,  1494,  1497,
-    1500,  1503,  1506,  1509,  1512,  1515,  1518,  1521,  1524,  1525,
-    1528,  1531,  1534,  1537,  1540,  1543,  1546,  1549,  1552,  1555,
-    1558,  1561,  1564,  1567,  1570,  1573,  1576,  1579,  1582,  1585,
-    1588,  1591,  1594,  1598,  1601,  1604,  1607,  1610,  1613,  1616,
-    1619,  1622,  1625,  1626,  1630,  1633,  1639,  1645,  1648,  1652,
-    1658,  1670,  1674,  1675,  1676,  1680,  1686,  1689,  1695,  1698,
-    1702,  1708,  1711,  1714,  1717,  1720,  1726,  1729,  1735,  1739,
-    1742,  1748,  1755,  1761,  1765,  1772,  1776,  1780,  1781,  1782,
-    1786,  1787,  1788,  1792,  1793,  1794,  1798,  1799,  1800,  1804,
-    1805,  1809,  1810,  1811,  1812,  1816,  1817,  1821,  1822,  1826,
-    1827
+         0,   339,   339,   342,   348,   352,   355,   359,   362,   366,
+     369,   372,   375,   381,   384,   391,   392,   399,   400,   407,
+     408,   415,   416,   423,   424,   431,   435,   441,   442,   450,
+     456,   462,   466,   468,   466,   476,   478,   482,   489,   492,
+     499,   504,   506,   510,   514,   518,   524,   525,   526,   527,
+     528,   532,   536,   566,   572,   579,   580,   584,   585,   591,
+     600,   607,   611,   618,   619,   626,   630,   636,   643,   650,
+     653,   673,   677,   680,   684,   687,   691,   697,   701,   710,
+     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
+     724,   730,   733,   739,   745,   748,   756,   764,   772,   780,
+     788,   796,   804,   812,   820,   826,   829,   836,   839,   843,
+     847,   856,   864,   872,   875,   883,   886,   892,   898,   899,
+     902,   905,   913,   917,   921,   927,   928,   932,   935,   942,
+     942,   952,   955,   961,   965,   972,   973,   974,   978,   979,
+     980,   981,   982,   983,   990,   991,   995,   999,  1006,  1007,
+    1008,  1012,  1013,  1014,  1015,  1016,  1017,  1021,  1027,  1031,
+    1038,  1044,  1047,  1054,  1068,  1082,  1096,  1099,  1103,  1103,
+    1113,  1121,  1130,  1139,  1155,  1158,  1165,  1171,  1174,  1222,
+    1223,  1224,  1225,  1226,  1227,  1231,  1237,  1245,  1251,  1254,
+    1260,  1261,  1262,  1266,  1269,  1277,  1283,  1284,  1291,  1308,
+    1311,  1315,  1318,  1324,  1325,  1329,  1332,  1333,  1336,  1339,
+    1340,  1346,  1347,  1348,  1349,  1350,  1351,  1355,  1364,  1373,
+    1377,  1378,  1382,  1385,  1388,  1391,  1394,  1397,  1400,  1408,
+    1412,  1418,  1432,  1438,  1447,  1450,  1453,  1459,  1460,  1461,
+    1464,  1467,  1470,  1473,  1484,  1487,  1490,  1493,  1496,  1499,
+    1502,  1505,  1508,  1511,  1514,  1517,  1520,  1523,  1526,  1527,
+    1530,  1533,  1536,  1539,  1542,  1545,  1548,  1551,  1554,  1557,
+    1560,  1563,  1566,  1569,  1572,  1575,  1578,  1581,  1584,  1587,
+    1590,  1593,  1596,  1600,  1603,  1606,  1609,  1612,  1615,  1618,
+    1621,  1624,  1627,  1628,  1632,  1635,  1641,  1647,  1650,  1654,
+    1660,  1672,  1676,  1677,  1678,  1682,  1688,  1691,  1697,  1700,
+    1704,  1710,  1713,  1716,  1719,  1722,  1728,  1731,  1737,  1741,
+    1744,  1750,  1757,  1763,  1767,  1774,  1778,  1782,  1783,  1784,
+    1788,  1789,  1790,  1794,  1795,  1796,  1800,  1801,  1802,  1806,
+    1807,  1811,  1812,  1813,  1814,  1818,  1819,  1823,  1824,  1828,
+    1829
   };
 
   // Print the state stack on the debug stream.
@@ -4013,7 +4013,7 @@
 
 
 /* Line 1138 of lalr1.cc  */
-#line 1832 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
+#line 1834 "lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp"
  /*** Additional Code ***/
 
 void w3c_sw::SPARQLalgebraParser::error(const SPARQLalgebraParser::location_type& l,
Index: lib/SPARQLalgebraParser/SPARQLalgebraParser.hpp
===================================================================
--- lib/SPARQLalgebraParser/SPARQLalgebraParser.hpp	(revision 1728)
+++ lib/SPARQLalgebraParser/SPARQLalgebraParser.hpp	(working copy)
@@ -271,6 +271,7 @@
     std::vector<s_OrderConditionPair>* p_OrderConditions;
     ExpressionAliasList* p_ExpressionAliaseList;
     const TableOperation* p_op;
+    const AssertableOperation* p_AssertableOperation;
     ParserTableConjunction* p_conj;
     BasicGraphPattern* p_BasicGraphPattern; // used to accumulate triple patterns
     const TriplePattern* p_TriplePattern;
@@ -295,7 +296,7 @@
 
 
 /* Line 35 of lalr1.cc  */
-#line 299 "lib/SPARQLalgebraParser/SPARQLalgebraParser.hpp"
+#line 300 "lib/SPARQLalgebraParser/SPARQLalgebraParser.hpp"
     };
 #else
     typedef YYSTYPE semantic_type;
@@ -650,7 +651,7 @@
 } // w3c_sw
 
 /* Line 35 of lalr1.cc  */
-#line 654 "lib/SPARQLalgebraParser/SPARQLalgebraParser.hpp"
+#line 655 "lib/SPARQLalgebraParser/SPARQLalgebraParser.hpp"
 
 
 
Index: lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp
===================================================================
--- lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp	(revision 1728)
+++ lib/SPARQLalgebraParser/SPARQLalgebraParser.ypp	(working copy)
@@ -237,6 +237,7 @@
     std::vector<s_OrderConditionPair>* p_OrderConditions;
     ExpressionAliasList* p_ExpressionAliaseList;
     const TableOperation* p_op;
+    const AssertableOperation* p_AssertableOperation;
     ParserTableConjunction* p_conj;
     BasicGraphPattern* p_BasicGraphPattern; // used to accumulate triple patterns
     const TriplePattern* p_TriplePattern;
@@ -286,8 +287,9 @@
 %type <p_OrderConditions> _QOrderCondition_E_Plus
 %type <p_OrderConditionPair> OrderCondition _O_QGT_LPAREN_E_S_QIT_asc_E_Or_QIT_desc_E_S_QExpression_E_S_QGT_RPAREN_E_C
 %type <p_ExpressionAliaseList> _QVar_E_Star
-%type <p_op> AskQuery WhereClause GroupGraphPatternNoSub Filter OptionalGraphPattern GraphGraphPattern ServiceGraphPattern MinusGraphPattern GroupOrUnionGraphPattern GroupGraphPatternSub QuadData QuadPattern Quads _O_QQuadsNotTriples_E_Or_QTriplesTemplate_E_C QuadsNotTriples TriplesTemplate
-%type <p_conj> _QGroupGraphPatternNoSub_E_Plus _Q_O_QQuadsNotTriples_E_Or_QTriplesTemplate_E_C_E_Star _QGroupGraphPatternSub_E_Plus
+%type <p_op> AskQuery WhereClause GroupGraphPatternNoSub Filter OptionalGraphPattern GraphGraphPattern ServiceGraphPattern MinusGraphPattern GroupOrUnionGraphPattern GroupGraphPatternSub _O_QQuadsNotTriples_E_Or_QTriplesTemplate_E_C QuadsNotTriples TriplesTemplate
+%type <p_AssertableOperation> QuadData QuadPattern Quads _Q_O_QQuadsNotTriples_E_Or_QTriplesTemplate_E_C_E_Star
+%type <p_conj> _QGroupGraphPatternNoSub_E_Plus _QGroupGraphPatternSub_E_Plus
 %type <p_BasicGraphPattern> _QMyTriple_E_Plus
 %type <p_TriplePattern> MyTriple
 %type <p_Variable> Var
Index: lib/SWObjectDuplicator.hpp
===================================================================
--- lib/SWObjectDuplicator.hpp	(revision 1750)
+++ lib/SWObjectDuplicator.hpp	(working copy)
@@ -320,16 +320,14 @@
 	    p_Select->express(this);
 	    last.tableOperation = new SubSelect((const Select*)last.operation);
 	}
-	// !!!2 -- use ConstructableOperation for p_ConstructTemplate
-	virtual void construct (const Construct* const, const TableOperation* p_ConstructTemplate, ProductionVector<const DatasetClause*>* p_DatasetClauses, WhereClause* p_WhereClause, SolutionModifier* p_SolutionModifier) {
+	virtual void construct (const Construct* const, const AssertableOperation* p_ConstructTemplate, ProductionVector<const DatasetClause*>* p_DatasetClauses, WhereClause* p_WhereClause, SolutionModifier* p_SolutionModifier) {
 	    p_ConstructTemplate->express(this);
 	    TableOperation* construct = last.tableOperation;
 	    p_WhereClause->express(this);
 	    WhereClause* where = last.whereClause;
 	    p_SolutionModifier->express(this);
 	    SolutionModifier* solutionModifier = last.solutionModifier;
-	    // !!!2 -- use ConstructableOperation for p 1
-	    last.operation = new Construct(construct, _DatasetClauses(p_DatasetClauses), where, solutionModifier);
+	    last.operation = new Construct((const AssertableOperation*)construct, _DatasetClauses(p_DatasetClauses), where, solutionModifier);
 	}
 	virtual void describe (const Describe* const, VarSet* p_VarSet, ProductionVector<const DatasetClause*>* p_DatasetClauses, WhereClause* p_WhereClause, SolutionModifier* p_SolutionModifier) {
 	    p_VarSet->express(this);
@@ -358,23 +356,23 @@
 	    p_WhereClause->express(this);
 	    last.operation = new Modify(del, ins, last.whereClause);
 	}
-	virtual void insert (const Insert* const, const TableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
+	virtual void insert (const Insert* const, const AssertableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
 	    WhereClause* where = NULL;
 	    if (p_WhereClause != NULL) {
 		p_WhereClause->express(this);
 		where = last.whereClause;
 	    }
 	    p_GraphTemplate->express(this);
-	    last.operation = new Insert(last.tableOperation, where);
+	    last.operation = new Insert((const AssertableOperation*)last.tableOperation, where);
 	}
-	virtual void del (const Delete* const, const TableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
+	virtual void del (const Delete* const, const AssertableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
 	    WhereClause* where = NULL;
 	    if (p_WhereClause != NULL) {
 		p_WhereClause->express(this);
 		where = last.whereClause;
 	    }
 	    p_GraphTemplate->express(this);
-	    last.operation = new Delete(last.tableOperation, where);
+	    last.operation = new Delete((const AssertableOperation*)last.tableOperation, where);
 	}
 	virtual void load (const Load* const, const URI* p_from, const URI* p_into) {
 	    p_from->express(this);
Index: lib/QueryMapper.hpp
===================================================================
--- lib/QueryMapper.hpp	(revision 1750)
+++ lib/QueryMapper.hpp	(working copy)
@@ -122,7 +122,7 @@
     };
 
     struct Rule {
-	const TableOperation* head; // !!!2 -- use ConstructableOperation
+	const AssertableOperation* head; // !!!2 -- use ConstructableOperation
 	const TableOperation* body;
 	const TTerm* label;
 
@@ -130,8 +130,7 @@
 	   (bodyVars); just handy for explanation/debugging. */
 	VariableList bodyVars;
 
-	// !!!2 -- use ConstructableOperation for head
-	Rule (const TableOperation* head, const TableOperation* body, const TTerm* label, VariableList bodyVars)
+	Rule (const AssertableOperation* head, const TableOperation* body, const TTerm* label, VariableList bodyVars)
 	    : head(head), body(body), label(label), bodyVars(bodyVars) {  }
 	Rule (const Rule& ref)
 	    : head(ref.head), body(ref.body), label(ref.label), bodyVars(ref.bodyVars) {  }
Index: lib/RuleInverter.hpp
===================================================================
--- lib/RuleInverter.hpp	(revision 1750)
+++ lib/RuleInverter.hpp	(working copy)
@@ -360,7 +360,7 @@
 
     class RuleInverter : public SWObjectDuplicator {
     protected:
-	DefaultGraphPattern* constructRuleHead;
+	AssertableOperation* constructRuleHead;
 	TableOperation* constructRuleBodyAsConsequent;
 	MappingConstruct* m_Construct;
 	bool inUserRuleHead;
@@ -471,8 +471,7 @@
 	    last.whereClause = new WhereClause(op);
 	}
 
-	// !!!2 -- use ConstructableOperation for p_ConstructTemplate
-	virtual void construct (const Construct* const, const TableOperation* p_ConstructTemplate, ProductionVector<const DatasetClause*>* p_DatasetClauses, WhereClause* p_WhereClause, SolutionModifier* p_SolutionModifier) {
+	virtual void construct (const Construct* const, const AssertableOperation* p_ConstructTemplate, ProductionVector<const DatasetClause*>* p_DatasetClauses, WhereClause* p_WhereClause, SolutionModifier* p_SolutionModifier) {
 	    if (p_DatasetClauses->size() != 0)
 		throw(std::runtime_error("Don't know how to invert a Construct with a DatasetClauses."));
 
@@ -481,8 +480,7 @@
 	     * constructRuleHead and sets constructRuleBodyAsConsequent to a
 	     * copy of the graph pattern of the CONSTRUCT WhereClause.
 	     */
-	    // !!!2 -- use ConstructableOperation for head
-	    constructRuleHead = const_cast<DefaultGraphPattern*>(dynamic_cast<const DefaultGraphPattern*>(p_ConstructTemplate));
+	    constructRuleHead = const_cast<AssertableOperation*>(dynamic_cast<const AssertableOperation*>(p_ConstructTemplate));
 	    p_WhereClause->express(this);
 	    WhereClause* constructRuleHeadAsPattern = last.whereClause;
 
Index: lib/SWObjects.hpp
===================================================================
--- lib/SWObjects.hpp	(revision 1750)
+++ lib/SWObjects.hpp	(working copy)
@@ -1934,7 +1934,21 @@
     }
     virtual TableOperation* getDNF() const;
 };
-class BasicGraphPattern : public TableOperation { // ⊌⊍
+
+// AssertableOperation - a class that can be in a rule head (i.e. BGPs and GGPs)
+class AssertableOperation : public TableOperation {
+protected:
+    AssertableOperation ()
+	: TableOperation()
+    {  }
+    AssertableOperation (const AssertableOperation& ref)
+	: TableOperation(ref)
+    {  }
+};
+
+
+/* Subclasses of TableOperation and AssertableOperation */
+class BasicGraphPattern : public AssertableOperation { // ⊌⊍
 public:
 
     struct TTerm2Triple_type : public std::multimap<const TTerm*, const TriplePattern*> {
@@ -1999,7 +2013,7 @@
     TTerm2TTerm2Triple_type PO;
     TTerm2TTerm2Triple_type OS;
     bool allOpts;
-    BasicGraphPattern (bool allOpts) : TableOperation(), m_TriplePatterns(), allOpts(allOpts) {  }
+    BasicGraphPattern (bool allOpts) : m_TriplePatterns(), allOpts(allOpts) {  }
 #if REGEX_LIB != SWOb_DISABLED
     BasicGraphPattern (std::string ntp, AtomFactory* atomFactory, TTerm::String2BNode bnodeMap)
 	: allOpts(false) {
@@ -2008,7 +2022,7 @@
     }
 #endif /* REGEX_LIB != SWOb_DISABLED */
     BasicGraphPattern (const BasicGraphPattern& ref) :
-	TableOperation(ref), m_TriplePatterns(ref.m_TriplePatterns), // TTerm2TTerm2Triple(ref.TTerm2TTerm2Triple), 
+	AssertableOperation(ref), m_TriplePatterns(ref.m_TriplePatterns), // TTerm2TTerm2Triple(ref.TTerm2TTerm2Triple), 
 	SP(ref.SP), PO(ref.PO), OS(ref.OS), allOpts(ref.allOpts) {  }
 
     /* Misc helper functions: */
@@ -2112,15 +2126,21 @@
 	    BasicGraphPattern::operator==(*pref);
     }
 };
-class TableOperationOnOperation : public TableOperation {
+class SelfMakerInterface {
+public:
+    TableOperation* getDNF() const;
+    virtual TableOperation* makeANewThis(const TableOperation* p_TableOperation) const = 0;
+    virtual const TableOperation* getNestedTableOperation() const = 0;
+};
+class TableOperationOnOperation : public TableOperation, public SelfMakerInterface {
     friend struct GraphAndServiceMerger;
 protected:
     const TableOperation* m_TableOperation;
-    TableOperationOnOperation (const TableOperation* p_TableOperation) : TableOperation(), m_TableOperation(p_TableOperation) {  }
+    TableOperationOnOperation (const TableOperation* p_TableOperation) : m_TableOperation(p_TableOperation) {  }
     ~TableOperationOnOperation() { delete m_TableOperation; }
-    virtual TableOperationOnOperation* makeANewThis(const TableOperation* p_TableOperation) const = 0;
+    virtual TableOperation* getDNF () const { return SelfMakerInterface::getDNF(); }
 public:
-    virtual TableOperation* getDNF() const;
+    virtual const TableOperation* getNestedTableOperation () const { return m_TableOperation; }
 };
 
 class Print : public TableOperationOnOperation {
@@ -2144,7 +2164,7 @@
 	const Print* pref = dynamic_cast<const Print*>(&ref);
 	return pref == NULL ? false : operator==(*pref); // calls Print-specific operator==
     }
-    virtual TableOperationOnOperation* makeANewThis(const TableOperation* p_TableOperation) const { return new Print(p_TableOperation); }
+    virtual TableOperation* makeANewThis(const TableOperation* p_TableOperation) const { return new Print(p_TableOperation); }
 };
 
 class Filter : public TableOperationOnOperation {
@@ -2180,7 +2200,7 @@
 	const Filter* pref = dynamic_cast<const Filter*>(&ref);
 	return pref == NULL ? false : operator==(*pref); // calls Filter-specific operator==
     }
-    virtual TableOperationOnOperation* makeANewThis(const TableOperation* p_TableOperation) const;
+    virtual TableOperation* makeANewThis(const TableOperation* p_TableOperation) const;
 };
 class Bind : public TableOperationOnOperation {
 protected:
@@ -2207,15 +2227,19 @@
 	const Bind* pref = dynamic_cast<const Bind*>(&ref);
 	return pref == NULL ? false : operator==(*pref); // calls Bind-specific operator==
     }
-    virtual TableOperationOnOperation* makeANewThis(const TableOperation* p_TableOperation) const;
+    virtual TableOperation* makeANewThis(const TableOperation* p_TableOperation) const;
 };
 /* GraphGraphPattern: pass-through class that's just used to reproduce verbatim SPARQL queries
  */
-class GraphGraphPattern : public TableOperationOnOperation {
+class GraphGraphPattern : public AssertableOperation, public SelfMakerInterface {
 private:
+    const TableOperation* m_TableOperation;
     const TTerm* m_VarOrIRIref;
 public:
-    GraphGraphPattern (const TTerm* p_TTerm, const TableOperation* p_GroupGraphPattern) : TableOperationOnOperation(p_GroupGraphPattern), m_VarOrIRIref(p_TTerm) {  }
+    GraphGraphPattern (const TTerm* p_TTerm, const TableOperation* p_GroupGraphPattern) : m_TableOperation(p_GroupGraphPattern), m_VarOrIRIref(p_TTerm) {  }
+    ~GraphGraphPattern() { delete m_TableOperation; }
+    virtual TableOperation* getDNF () const { return SelfMakerInterface::getDNF(); }
+    virtual const TableOperation* getNestedTableOperation () const { return m_TableOperation; }
     virtual void express(Expressor* p_expressor) const;
     virtual bool operator== (const TableOperation& ref) const {
 	const GraphGraphPattern* pref = dynamic_cast<const GraphGraphPattern*>(&ref);
@@ -2228,7 +2252,7 @@
     }
     virtual void construct(RdfDB* target, const ResultSet* rs, BNodeEvaluator* evaluator, BasicGraphPattern* bgp) const;
     virtual void deletePattern(RdfDB* target, const ResultSet* rs, BNodeEvaluator* evaluator, BasicGraphPattern* bgp) const;
-    virtual TableOperationOnOperation* makeANewThis (const TableOperation* p_TableOperation) const { return new GraphGraphPattern(m_VarOrIRIref, p_TableOperation); }
+    virtual TableOperation* makeANewThis (const TableOperation* p_TableOperation) const { return new GraphGraphPattern(m_VarOrIRIref, p_TableOperation); }
 };
 /* ServiceGraphPattern: pass-through class that's just used to reproduce verbatim SPARQL queries
  */
@@ -2260,7 +2284,7 @@
     virtual void bindVariables(RdfDB* db, ResultSet* rs) const;
     virtual void construct(RdfDB* target, const ResultSet* rs, BNodeEvaluator* evaluator, BasicGraphPattern* bgp) const;
     virtual void deletePattern(RdfDB* target, const ResultSet* rs, BNodeEvaluator* evaluator, BasicGraphPattern* bgp) const;
-    virtual TableOperationOnOperation* makeANewThis (const TableOperation* p_TableOperation) const { return new ServiceGraphPattern(m_VarOrIRIref, p_TableOperation, m_Silence, atomFactory, lexicalCompare); }
+    virtual TableOperation* makeANewThis (const TableOperation* p_TableOperation) const { return new ServiceGraphPattern(m_VarOrIRIref, p_TableOperation, m_Silence, atomFactory, lexicalCompare); }
 };
 class OptionalGraphPattern : public TableOperationOnOperation {
 protected:
@@ -2281,7 +2305,7 @@
     virtual void deletePattern (RdfDB* /* target */, const ResultSet* /* rs */, BNodeEvaluator* /* evaluator */, BasicGraphPattern* /* bgp */) const {
 	w3c_sw_NEED_IMPL("DELETEPATTERN{OPTIONAL{?s?p?o}}");
     }
-    virtual TableOperationOnOperation* makeANewThis (const TableOperation* p_TableOperation) const { return new OptionalGraphPattern(p_TableOperation); }
+    virtual TableOperation* makeANewThis (const TableOperation* p_TableOperation) const { return new OptionalGraphPattern(p_TableOperation); }
 
     void addExpression (const Expression* expression) {
 	m_Expressions.push_back(expression);
@@ -2303,7 +2327,7 @@
     virtual void deletePattern (RdfDB* /* target */, const ResultSet* /* rs */, BNodeEvaluator* /* evaluator */, BasicGraphPattern* /* bgp */) const {
 	w3c_sw_NEED_IMPL("DELETEPATTERN{MINUS{?s?p?o}}");
     }
-    virtual TableOperationOnOperation* makeANewThis (const TableOperation* p_TableOperation) const { return new MinusGraphPattern(p_TableOperation); }
+    virtual TableOperation* makeANewThis (const TableOperation* p_TableOperation) const { return new MinusGraphPattern(p_TableOperation); }
 
 };
 
@@ -2583,14 +2607,14 @@
 };
 class Construct : public Operation {
 protected:
-    const TableOperation* m_ConstructTemplate; // !!!2 -- use ConstructableOperation for p_ConstructTemplate
+    const AssertableOperation* m_ConstructTemplate;
     ProductionVector<const DatasetClause*>* m_DatasetClauses;
     WhereClause* m_WhereClause;
     SolutionModifier* m_SolutionModifier;
     DefaultGraphPattern* resultGraph;
 
 public:
-    Construct (const TableOperation* p_ConstructTemplate, ProductionVector<const DatasetClause*>* p_DatasetClauses, WhereClause* p_WhereClause, SolutionModifier* p_SolutionModifier) : 
+    Construct (const AssertableOperation* p_ConstructTemplate, ProductionVector<const DatasetClause*>* p_DatasetClauses, WhereClause* p_WhereClause, SolutionModifier* p_SolutionModifier) : 
 	Operation(), m_ConstructTemplate(p_ConstructTemplate), m_DatasetClauses(p_DatasetClauses), m_WhereClause(p_WhereClause), m_SolutionModifier(p_SolutionModifier), resultGraph(new DefaultGraphPattern()) {  }
     ~Construct () {
 	delete m_ConstructTemplate;
@@ -2671,10 +2695,10 @@
 class Insert : public GraphChange {
     friend class SPARQLParser;
 private:
-    const TableOperation* m_GraphTemplate;
+    const AssertableOperation* m_GraphTemplate;
     WhereClause* m_WhereClause;
 public:
-    Insert (const TableOperation* p_GraphTemplate, WhereClause* p_WhereClause) : GraphChange(), m_GraphTemplate(p_GraphTemplate), m_WhereClause(p_WhereClause) {  }
+    Insert (const AssertableOperation* p_GraphTemplate, WhereClause* p_WhereClause) : GraphChange(), m_GraphTemplate(p_GraphTemplate), m_WhereClause(p_WhereClause) {  }
     ~Insert () { delete m_GraphTemplate; delete m_WhereClause; }
     virtual void express(Expressor* p_expressor) const;
     virtual ResultSet* execute(RdfDB* db, ResultSet* rs = NULL) const;
@@ -2686,10 +2710,10 @@
 class Delete : public GraphChange {
     friend class SPARQLParser;
 private:
-    const TableOperation* m_GraphTemplate;
+    const AssertableOperation* m_GraphTemplate;
     WhereClause* m_WhereClause;
 public:
-    Delete (const TableOperation* p_GraphTemplate, WhereClause* p_WhereClause) : GraphChange(), m_GraphTemplate(p_GraphTemplate), m_WhereClause(p_WhereClause) {  }
+    Delete (const AssertableOperation* p_GraphTemplate, WhereClause* p_WhereClause) : GraphChange(), m_GraphTemplate(p_GraphTemplate), m_WhereClause(p_WhereClause) {  }
     ~Delete () { delete m_GraphTemplate; delete m_WhereClause; }
     virtual void express(Expressor* p_expressor) const;
     virtual ResultSet* execute(RdfDB* db, ResultSet* rs = NULL) const;
@@ -3656,13 +3680,12 @@
     virtual void operationSet(const OperationSet* const, const ProductionVector<const Operation*>* p_Operations) = 0;
     virtual void select(const Select* const self, e_distinctness p_distinctness, VarSet* p_VarSet, ProductionVector<const DatasetClause*>* p_DatasetClauses, WhereClause* p_WhereClause, SolutionModifier* p_SolutionModifier) = 0;
     virtual void subSelect(const SubSelect* const self, const Select* p_Select) = 0;
-    // !!!2 -- use ConstructableOperation for p_ConstructTemplate
-    virtual void construct(const Construct* const self, const TableOperation* p_ConstructTemplate, ProductionVector<const DatasetClause*>* p_DatasetClauses, WhereClause* p_WhereClause, SolutionModifier* p_SolutionModifier) = 0;
+    virtual void construct(const Construct* const self, const AssertableOperation* p_ConstructTemplate, ProductionVector<const DatasetClause*>* p_DatasetClauses, WhereClause* p_WhereClause, SolutionModifier* p_SolutionModifier) = 0;
     virtual void describe(const Describe* const self, VarSet* p_VarSet, ProductionVector<const DatasetClause*>* p_DatasetClauses, WhereClause* p_WhereClause, SolutionModifier* p_SolutionModifier) = 0;
     virtual void ask(const Ask* const self, ProductionVector<const DatasetClause*>* p_DatasetClauses, WhereClause* p_WhereClause) = 0;
     virtual void modify(const Modify* const self, const Delete* p_delete, const Insert* p_insert, WhereClause* p_WhereClause) = 0;
-    virtual void insert(const Insert* const self, const TableOperation* p_GraphTemplate, WhereClause* p_WhereClause) = 0;
-    virtual void del(const Delete* const self, const TableOperation* p_GraphTemplate, WhereClause* p_WhereClause) = 0;
+    virtual void insert(const Insert* const self, const AssertableOperation* p_GraphTemplate, WhereClause* p_WhereClause) = 0;
+    virtual void del(const Delete* const self, const AssertableOperation* p_GraphTemplate, WhereClause* p_WhereClause) = 0;
     virtual void load(const Load* const self, const URI* p_from, const URI* p_into) = 0;
     virtual void clear(const Clear* const self, e_Silence p_Silence, const URI* p__QGraphIRI_E_Opt) = 0;
     virtual void create(const Create* const self, e_Silence p_Silence, const URI* p_GraphIRI) = 0;
@@ -3812,8 +3835,7 @@
     virtual void subSelect (const SubSelect* const, const Select* p_Select) {
 	p_Select->express(this);
     }
-    // !!!2 -- use ConstructableOperation for p_ConstructTemplate
-    virtual void construct (const Construct* const, const TableOperation* p_ConstructTemplate, ProductionVector<const DatasetClause*>* p_DatasetClauses, WhereClause* p_WhereClause, SolutionModifier* p_SolutionModifier) {
+    virtual void construct (const Construct* const, const AssertableOperation* p_ConstructTemplate, ProductionVector<const DatasetClause*>* p_DatasetClauses, WhereClause* p_WhereClause, SolutionModifier* p_SolutionModifier) {
 	p_ConstructTemplate->express(this);
 	p_DatasetClauses->express(this);
 	p_WhereClause->express(this);
@@ -3836,11 +3858,11 @@
 	    p_insert->express(this);
 	p_WhereClause->express(this);
     }
-    virtual void insert (const Insert* const, const TableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
+    virtual void insert (const Insert* const, const AssertableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
 	p_GraphTemplate->express(this);
 	if (p_WhereClause) p_WhereClause->express(this);
     }
-    virtual void del (const Delete* const, const TableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
+    virtual void del (const Delete* const, const AssertableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
 	p_GraphTemplate->express(this);
 	p_WhereClause->express(this);
     }
@@ -4049,8 +4071,7 @@
     virtual void subSelect (const SubSelect* const, const Select* p_Select) {
 	w3c_sw_NEED_IMPL("subSelect");
     }
-    // !!!2 -- use ConstructableOperation for p_ConstructTemplate
-    virtual void construct (const Construct* const, const TableOperation* p_ConstructTemplate, ProductionVector<const DatasetClause*>* p_DatasetClauses, WhereClause* p_WhereClause, SolutionModifier* p_SolutionModifier) {
+    virtual void construct (const Construct* const, const AssertableOperation* p_ConstructTemplate, ProductionVector<const DatasetClause*>* p_DatasetClauses, WhereClause* p_WhereClause, SolutionModifier* p_SolutionModifier) {
 	w3c_sw_NEED_IMPL("construct");
     }
     virtual void describe (const Describe* const, VarSet* p_VarSet, ProductionVector<const DatasetClause*>* p_DatasetClauses, WhereClause* p_WhereClause, SolutionModifier* p_SolutionModifier) {
@@ -4062,10 +4083,10 @@
     virtual void modify (const Modify* const, const Delete* p_delete, const Insert* p_insert, WhereClause* p_WhereClause) {
 	w3c_sw_NEED_IMPL("modify");
     }
-    virtual void insert (const Insert* const, const TableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
+    virtual void insert (const Insert* const, const AssertableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
 	w3c_sw_NEED_IMPL("insert");
     }
-    virtual void del (const Delete* const, const TableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
+    virtual void del (const Delete* const, const AssertableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
 	w3c_sw_NEED_IMPL("del");
     }
     virtual void load (const Load* const, const URI* p_from, const URI* p_into) {
Index: lib/SPARQLAlgebraSerializer.hpp
===================================================================
--- lib/SPARQLAlgebraSerializer.hpp	(revision 1750)
+++ lib/SPARQLAlgebraSerializer.hpp	(working copy)
@@ -486,9 +486,7 @@
 	--depth;
 	ret << ")" << std::endl;
     }
-
-    // !!!2 -- use ConstructableOperation for p_ConstructTemplate
-    virtual void construct (const Construct* const, const TableOperation* p_ConstructTemplate, ProductionVector<const DatasetClause*>* p_DatasetClauses, WhereClause* p_WhereClause, SolutionModifier* p_SolutionModifier) {
+    virtual void construct (const Construct* const, const AssertableOperation* p_ConstructTemplate, ProductionVector<const DatasetClause*>* p_DatasetClauses, WhereClause* p_WhereClause, SolutionModifier* p_SolutionModifier) {
 	lead();
 	ret << "CONSTRUCT ";
 	p_ConstructTemplate->express(this);
@@ -522,7 +520,7 @@
 	    p_insert->express(this);
 	p_WhereClause->express(this);
     }
-    virtual void insert (const Insert* const self, const TableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
+    virtual void insert (const Insert* const self, const AssertableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
 	lead();
 	ret << "INSERT { ";
 	if (debug & DEBUG_graphs) ret << self << ' ';
@@ -530,7 +528,7 @@
 	if (p_WhereClause) p_WhereClause->express(this);
 	ret << "}" << std::endl;
     }
-    virtual void del (const Delete* const, const TableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
+    virtual void del (const Delete* const, const AssertableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
 	lead();
 	ret << "DELETE { ";
 	p_GraphTemplate->express(this);
Index: lib/ChainingMapper.hpp
===================================================================
--- lib/ChainingMapper.hpp	(revision 1750)
+++ lib/ChainingMapper.hpp	(working copy)
@@ -589,7 +589,7 @@
 		const BasicGraphPattern* asBgp = dynamic_cast<const BasicGraphPattern*>(rule->head);
 		if (asBgp != NULL) 
 		    addStuff(&adds, asBgp, rule, triple);
-		// !!!2 -- other stuff in ConstructableOperation
+		// !!!2 -- other stuff in AssertableOperation
 	    }
 	    if (adds.size() == 0 || alternatives.cross(adds) == 0)
 		failed.bgp2triples[bgp].insert(triple);
@@ -690,7 +690,7 @@
     };
 
     struct RuleParser : public RecursiveExpressor {
-	const TableOperation* head; // !!!2 -- use ConstructableOperation
+	const AssertableOperation* head;
 	const TableOperation* body;
 	SWObjectDuplicator d;
 	VariableList bodyVars;
@@ -714,11 +714,10 @@
 	    RecursiveExpressor::subSelect(self, p_Select);
 	    delete body; // body got erroneously set in the nested where clause
 	}
-	// !!!2 -- use ConstructableOperation for p_ConstructTemplate
-	virtual void construct (const Construct* const, const TableOperation* p_ConstructTemplate, ProductionVector<const DatasetClause*>*, WhereClause* p_WhereClause, SolutionModifier*) {
+	virtual void construct (const Construct* const, const AssertableOperation* p_ConstructTemplate, ProductionVector<const DatasetClause*>*, WhereClause* p_WhereClause, SolutionModifier*) {
 	    p_ConstructTemplate->express(&d);
 	    // bodyVars.clear(); -- unnecessary because p_ConstructTemplate was only visited with an SWObjectDuplicator.
-	    head = d.last.tableOperation; // !!!2 -- use ConstructableOperation
+	    head = (AssertableOperation*)d.last.tableOperation;
 	    p_WhereClause->express(this);
 	}
 	Rule parseConstruct (const Construct* c, const TTerm* name) {
Index: lib/SPARQLSerializer.hpp
===================================================================
--- lib/SPARQLSerializer.hpp	(revision 1750)
+++ lib/SPARQLSerializer.hpp	(working copy)
@@ -440,9 +440,7 @@
 	lead();
 	ret << '}' << std::endl;
     }
-
-    // !!!2 -- use ConstructableOperation for p_ConstructTemplate
-    virtual void construct (const Construct* const, const TableOperation* p_ConstructTemplate, ProductionVector<const DatasetClause*>* p_DatasetClauses, WhereClause* p_WhereClause, SolutionModifier* p_SolutionModifier) {
+    virtual void construct (const Construct* const, const AssertableOperation* p_ConstructTemplate, ProductionVector<const DatasetClause*>* p_DatasetClauses, WhereClause* p_WhereClause, SolutionModifier* p_SolutionModifier) {
 	lead();
 	ret << "CONSTRUCT ";
 	needBraces = true;
@@ -473,7 +471,7 @@
 	    p_insert->express(this);
 	p_WhereClause->express(this);
     }
-    virtual void insert (const Insert* const self, const TableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
+    virtual void insert (const Insert* const self, const AssertableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
 	lead();
 	ret << "INSERT { ";
 	if (debug & DEBUG_graphs) ret << self << ' ';
@@ -481,7 +479,7 @@
 	if (p_WhereClause) p_WhereClause->express(this);
 	ret << "}" << std::endl;
     }
-    virtual void del (const Delete* const, const TableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
+    virtual void del (const Delete* const, const AssertableOperation* p_GraphTemplate, WhereClause* p_WhereClause) {
 	lead();
 	ret << "DELETE { ";
 	p_GraphTemplate->express(this);

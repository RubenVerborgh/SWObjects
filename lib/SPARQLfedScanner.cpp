#line 2 "lib/SPARQLfedScanner.cpp"

#line 4 "lib/SPARQLfedScanner.cpp"

#define  YY_INT_ALIGNED short int

/* A lexical scanner generated by flex */

/* %not-for-header */

/* %if-c-only */
/* %if-not-reentrant */
/* %endif */
/* %endif */
/* %ok-for-header */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 5
#define YY_FLEX_SUBMINOR_VERSION 35
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

/* %if-c++-only */
    /* The c++ scanner is a mess. The FlexLexer.h header file relies on the
     * following macro. This is required in order to pass the c++-multiple-scanners
     * test in the regression suite. We get reports that it breaks inheritance.
     * We will address this in a future release of flex, or omit the C++ scanner
     * altogether.
     */
    #define yyFlexLexer SPARQLfedFlexLexer
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */
/* %if-c-only */
/* %endif */

/* %if-tables-serialization */
/* %endif */
/* end standard C headers. */

/* %if-c-or-c++ */
/* flex integer type definitions */

#ifndef FLEXINT_H
#define FLEXINT_H

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L

/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
 * if you want the limit (max/min) macros for int types. 
 */
#ifndef __STDC_LIMIT_MACROS
#define __STDC_LIMIT_MACROS 1
#endif

#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t; 
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;

/* Limits of integral types. */
#ifndef INT8_MIN
#define INT8_MIN               (-128)
#endif
#ifndef INT16_MIN
#define INT16_MIN              (-32767-1)
#endif
#ifndef INT32_MIN
#define INT32_MIN              (-2147483647-1)
#endif
#ifndef INT8_MAX
#define INT8_MAX               (127)
#endif
#ifndef INT16_MAX
#define INT16_MAX              (32767)
#endif
#ifndef INT32_MAX
#define INT32_MAX              (2147483647)
#endif
#ifndef UINT8_MAX
#define UINT8_MAX              (255U)
#endif
#ifndef UINT16_MAX
#define UINT16_MAX             (65535U)
#endif
#ifndef UINT32_MAX
#define UINT32_MAX             (4294967295U)
#endif

#endif /* ! C99 */

#endif /* ! FLEXINT_H */

/* %endif */

/* %if-c++-only */
/* begin standard C++ headers. */
#include <iostream> 
#include <errno.h>
#include <cstdlib>
#include <cstdio>
#include <cstring>
/* end standard C++ headers. */
/* %endif */

#ifdef __cplusplus

/* The "const" storage-class-modifier is valid. */
#define YY_USE_CONST

#else	/* ! __cplusplus */

/* C99 requires __STDC__ to be defined as 1. */
#if defined (__STDC__)

#define YY_USE_CONST

#endif	/* defined (__STDC__) */
#endif	/* ! __cplusplus */

#ifdef YY_USE_CONST
#define yyconst const
#else
#define yyconst
#endif

/* %not-for-header */

/* Returned upon end-of-file. */
#define YY_NULL 0
/* %ok-for-header */

/* %not-for-header */

/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index.  If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */
#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)
/* %ok-for-header */

/* %if-reentrant */
/* %endif */

/* %if-not-reentrant */

/* %endif */

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN (yy_start) = 1 + 2 *

/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START (((yy_start) - 1) / 2)
#define YYSTATE YY_START

/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)

/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin  )

#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#ifndef YY_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k.
 * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
 * Ditto for the __ia64__ case accordingly.
 */
#define YY_BUF_SIZE 32768
#else
#define YY_BUF_SIZE 16384
#endif /* __ia64__ */
#endif

/* The state buf must be large enough to hold one state per character in the main buffer.
 */
#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

/* %if-not-reentrant */
extern int yyleng;
/* %endif */

/* %if-c-only */
/* %if-not-reentrant */
/* %endif */
/* %endif */

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2

    #define YY_LESS_LINENO(n)
    
/* Return all but the first "n" matched characters back to the input stream. */
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		*yy_cp = (yy_hold_char); \
		YY_RESTORE_YY_MORE_OFFSET \
		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )

#define unput(c) yyunput( c, (yytext_ptr)  )

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef size_t yy_size_t;
#endif

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{
/* %if-c-only */
/* %endif */

/* %if-c++-only */
	std::istream* yy_input_file;
/* %endif */

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	yy_size_t yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */
    
	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

/* %if-c-only Standard (non-C++) definition */
/* %not-for-header */

/* %if-not-reentrant */
/* %endif */
/* %ok-for-header */

/* %endif */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or NULL.
 */
#define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
                          : NULL)

/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */
#define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]

/* %if-c-only Standard (non-C++) definition */
/* %if-not-reentrant */
/* %not-for-header */

/* %ok-for-header */

/* %endif */
/* %endif */

void *SPARQLfedalloc (yy_size_t  );
void *SPARQLfedrealloc (void *,yy_size_t  );
void SPARQLfedfree (void *  );

#define yy_new_buffer yy_create_buffer

#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){ \
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
	}

#define yy_set_bol(at_bol) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){\
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
	}

#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)

/* %% [1.0] yytext/yyin/yyout/yy_state_type/yylineno etc. def's & init go here */
/* Begin user sect3 */
#define YY_SKIP_YYWRAP

#define FLEX_DEBUG

typedef unsigned char YY_CHAR;

#define yytext_ptr yytext

#include <FlexLexer.h>

int yyFlexLexer::yywrap() { return 1; }

/* %if-c-only Standard (non-C++) definition */
/* %endif */

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	(yytext_ptr) = yy_bp; \
/* %% [2.0] code to fiddle yytext and yyleng for yymore() goes here \ */\
	yyleng = (size_t) (yy_cp - yy_bp); \
	(yy_hold_char) = *yy_cp; \
	*yy_cp = '\0'; \
/* %% [3.0] code to copy yytext_ptr to yytext[] goes here, if %array \ */\
	(yy_c_buf_p) = yy_cp;

/* %% [4.0] data tables for the DFA and the user's section 1 definitions go here */
#define YY_NUM_RULES 181
#define YY_END_OF_BUFFER 182
/* This struct is not used in this scanner,
   but its presence is necessary. */
struct yy_trans_info
	{
	flex_int32_t yy_verify;
	flex_int32_t yy_nxt;
	};
static yyconst flex_int16_t yy_accept[1399] =
    {   0,
        0,    0,  182,  180,    2,    1,    1,   69,  180,    2,
      180,  180,  180,    9,   10,   20,   68,   11,   86,    4,
       65,  158,  152,   36,   80,    3,   81,   67,  180,  180,
      180,  180,  180,  180,  180,  180,  180,  180,  180,  180,
      180,  180,  180,  180,  180,  180,  180,  180,  180,  180,
      180,   70,   71,   66,  180,   64,  180,  180,    7,    5,
        8,  180,  180,  180,  180,  180,  180,  180,  180,  180,
      180,  180,  180,  180,  180,    2,    1,   79,    0,  168,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    2,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,  156,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,   78,    0,  167,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  171,  176,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      161,   60,    0,  164,   12,  159,    0,  158,    0,    0,
      153,  153,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,   82,  151,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
       83,  155,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,  157,    0,    0,  152,
        0,    0,    0,    0,    0,   19,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,   28,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  127,   84,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   44,  117,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  172,  148,    0,    0,

        0,   77,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  168,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  156,  156,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  167,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  176,  176,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  173,  162,    0,    0,  165,    0,    0,    0,  159,
        0,    0,  160,    0,    0,  153,    0,  153,  153,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  153,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  155,  155,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,   96,   43,   53,   75,
       31,   24,  145,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  112,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   92,    0,    0,    0,    0,

        0,    0,    0,    0,    0,  144,  121,    0,  143,    0,
        0,    0,   85,  118,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,   87,    0,  142,    0,    0,    0,    0,
        0,   93,    0,    0,    0,    0,    0,    0,  154,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,   13,    6,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    2,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  156,
      156,  156,  156,  156,  156,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  176,  176,  176,  176,  176,
      176,    0,    0,    0,    0,  162,    0,    0,  163,    0,
      165,    0,    0,  166,    0,  160,    0,  160,    0,  153,
      153,  153,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  153,  153,  153,  153,  153,  153,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  155,  155,  155,  155,  155,
      155,    0,    0,    0,  157,    0,    0,    0,    0,    0,
        0,    0,    0,   14,   58,    0,    0,   97,    0,    0,
        0,    0,    0,   46,    0,    0,    0,    0,    0,   32,
        0,   41,    0,   74,    0,    0,    0,   25,    0,    0,
        0,    0,    0,   39,    0,    0,    0,    0,    0,   88,

        0,    0,   37,    0,    0,    0,   45,    0,    0,    0,
        0,    0,    0,   95,    0,    0,    0,    0,   57,    0,
        0,    0,    0,    0,    0,  122,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  119,    0,    0,   47,  110,
      154,    0,  154,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  149,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,  156,  156,  156,  156,  156,  156,
      156,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  176,  176,  176,  176,  176,  176,
      176,    0,    0,    0,    0,  163,    0,  163,    0,  166,
        0,  166,  153,  153,  153,  153,  153,    0,    0,    0,
      155,  155,  155,  155,  155,  155,  155,    0,    0,    0,
       94,   91,   40,    0,    0,    0,    0,  140,    0,    0,
        0,    0,    0,    0,    0,    0,    0,   98,   52,   27,
        0,  113,    0,    0,  131,    0,    0,  132,    0,  103,
       33,    0,   61,    0,  111,   26,    0,    0,   30,    0,

       54,    0,  136,    0,   99,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  129,    0,
        0,    0,    0,    0,    0,    0,  102,   59,   62,    0,
       50,    0,   22,  154,  154,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  154,  154,  154,  154,  154,
      154,    0,    0,    0,  150,    0,    0,  170,    0,    0,
        0,    0,  169,    0,    0,    0,    0,    0,  100,    0,
        0,   42,    0,    0,   48,    0,    0,    0,  139,   63,
        0,   29,   49,    0,    0,    0,    0,    0,    0,   34,

        0,   15,    0,    0,    0,  146,    0,   16,    0,    0,
      123,  124,  125,   38,   73,    0,    0,    0,    0,  101,
        0,    0,  137,    0,    0,   35,  154,  154,  154,  154,
      154,    0,    0,    0,    0,  174,    0,    0,  175,    0,
        0,    0,    0,    0,   51,    0,    0,    0,    0,    0,
        0,    0,    0,  133,    0,    0,    0,   72,  114,    0,
       18,  138,    0,  115,    0,   56,    0,    0,  107,  128,
        0,  120,    0,    0,    0,    0,  126,    0,  105,   90,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,   23,   17,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   55,  130,    0,  109,    0,    0,  116,    0,
        0,    0,   21,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  134,  135,    0,  147,  108,  106,   76,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  178,
        0,    0,    0,    0,    0,  177,    0,   89,  179,  178,
        0,    0,  141,  177,  179,    0,  104,    0

    } ;

static yyconst flex_int32_t yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    4,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    5,    6,    7,    8,    9,   10,   11,   12,   13,
       14,   15,   16,   17,   18,   19,   20,   21,   22,   23,
       24,   25,   26,   27,   21,   28,   21,   29,   30,   31,
       32,   33,   34,   35,   36,   37,   38,   39,   40,   41,
       42,   43,   44,   45,   46,   47,   48,   49,   50,   51,
       45,   52,   53,   54,   55,   56,   57,   58,   59,   60,
       61,   62,   63,   64,   65,    1,   66,   67,   68,   69,

       70,   71,   72,   73,   74,   75,   76,   77,   78,   79,
       80,   81,   75,   82,   83,   84,   85,   86,   87,   88,
       89,   90,   91,   92,   93,   94,   95,   96,   97,   98,
       99,   99,   99,  100,  101,  101,  101,  101,  101,  102,
      103,  101,  104,  105,  106,  107,  106,  108,  106,  106,
      109,  110,  111,  111,  111,  111,  111,  111,  111,  112,
      112,  112,  112,  113,  113,  113,  113,  113,  113,  113,
      113,  114,  113,  113,  113,  115,  115,  115,  115,  116,
      115,  115,  117,  118,  118,  118,  118,  118,  118,  119,
      120,  121,  121,  122,  123,  124,  124,  124,  124,  124,

      124,  124,  124,  125,  126,  127,  127,  127,  127,  127,
      127,  127,  127,  127,  127,  127,  127,  127,  127,  127,
      127,  127,  127,  128,  129,  130,  131,  132,  132,  132,
      132,  132,  132,  132,  132,  132,  133,  134,  135,  136,
      137,  137,  138,  139,  121,  121,  121,  121,  121,  121,
      121,  121,  121,  121,  121
    } ;

static yyconst flex_int32_t yy_meta[140] =
    {   0,
        1,    1,    2,    2,    1,    1,    1,    3,    3,    4,
        3,    3,    3,    3,    3,    3,    3,    5,    6,    3,
        7,    7,    7,    7,    7,    7,    7,    7,    8,    3,
        1,    3,    3,    3,    3,    9,    9,    9,    9,    9,
        9,    9,    9,    9,    9,    9,    9,    9,    9,    9,
        9,    9,    9,    9,    9,    9,    9,    9,    9,    9,
        3,   10,    3,    1,   11,    9,    9,    9,    9,    9,
        9,    9,    9,    9,    9,    9,    9,    9,    9,    9,
        9,    9,    9,    9,    9,    9,    9,    9,    9,    9,
        1,    1,    1,    3,    3,   12,   13,   12,   12,   12,

       12,   12,   12,   14,   12,   12,   12,   12,   15,   12,
       12,   12,   12,   12,   12,   12,   15,   12,   16,   17,
       18,   19,   11,   11,    6,   11,   11,   11,   11,   11,
       11,   11,   11,    3,   11,   11,   11,   11,    3
    } ;

static yyconst flex_int16_t yy_base[1769] =
    {   0,
        0,    0, 2023,13356,  138,13356, 2019, 1956,  137,   37,
       54, 1976,  265,  144,13356,   74,  195,13356,  206,  221,
    13356,  259,  395,13356,  502,13356, 1954,  165,    0,  624,
      269,  389,  290,  395,  496,  497,  505,  723,  511,  730,
      742,  777,  785,  794,  832,  845,  876,  902,  924,  948,
      962,  191,13356, 1921, 1918,    0,  963, 1006,13356, 1852,
    13356,    0,   33,   36,  141,  261,    0, 1001, 1836,    0,
      388,  293,  395,    0,  626,  233,13356,13356, 1115, 1912,
     1061,    0,    0,    0,  482,    0, 1050,    0, 1073,    0,
      511, 1151,    0,    0,    0, 1050,    0, 1098,    0, 1186,

        0, 1114, 1286,    0,  195,  334,  198, 1108,    0, 1329,
     1822,    0, 1219, 1143, 1226,    0, 1251,13356, 1438, 1882,
     1389,    0,    0,    0, 1254,    0, 1378,    0, 1396,    0,
     1279,  846,13356, 1557,    0,  200,  500,  214, 1272,    0,
     1600, 1790,    0, 1421, 1377, 1481,    0, 1506,  235, 1512,
     1602,13356, 1522, 1612,13356, 1700, 1708, 1728, 1635, 1736,
     1798, 1927, 1822,    0,  215,  539,  224, 1667,    0, 1970,
     1757,    0, 1765, 1530, 1791,    0, 1861, 2058, 2165,13356,
        0,    0,    0, 1676,    0, 1894,    0, 1901,    0, 1568,
    13356, 2284,    0,  230,  600,  236, 1731,    0, 2327, 1719,

        0, 1929, 1764, 1987,    0, 2012, 1795, 2430, 2551, 2680,
     1662,  261,  281,  179,  325,  867,  386, 1559, 1524,    0,
      242,  248,  944,  254, 1864,    0, 2723, 1536,    0, 2031,
     1928, 2038,    0, 2103,  500,  397,  488,  487, 1593,  510,
      403, 2189,  729,  786,  892,  536,  715,  909,  789,  840,
      778,  823,  991,  824,  712, 1530,  878,  915, 2198,  944,
      398,  742,  401,  879,  211,  813,  968, 2192,  957,  995,
      521,  954,  865, 2190, 1002, 2284, 1040, 2204, 2199,  748,
     1007, 2285, 2288, 1046, 1528, 1512, 1019, 2289, 1097, 1098,
     1100, 1189, 1429, 1713, 2193, 1400,13356,13356, 2037,  159,

      226,13356, 1469,    0,    0,  259, 1018,    0, 2245,    0,
     1357,    0, 1114, 1361,    0,    0,    0,    0, 2274,    0,
      263,    0,    0,    0,13356, 2837,    0, 1391,    0,    0,
        0,    0,    0,    0,    0,    0, 1357,    0,    0,    0,
        0,    0,    0,    0, 2956, 3074, 1304, 1280,    0,  353,
     1152,  447, 2283,    0, 3117, 1299,    0, 2364, 2363, 2379,
        0, 2404,    0,    0,  358, 1436,    0, 2432,    0,    0,
     1558, 1077,    0,    0,    0,    0, 2485,    0,  360,    0,
        0,    0,13356, 3226,    0, 1067,    0,    0,    0,    0,
        0,    0,    0, 3345, 3463,  996,  970,    0,  721, 1694,

      769, 2425,    0, 3506,  981,    0, 2510, 2406, 2517,    0,
     2553,    0,    0,  379, 1773,    0, 2494,    0,    0, 1823,
      978,    0,    0,    0,    0, 2595,    0,  440,    0,    0,
        0, 1054, 2695, 2703, 2723, 2731, 2824, 2754, 2767, 2832,
     2852, 2617, 2860, 2882, 2964, 3617, 3746,    0,    0, 3009,
      971,  948,    0,  784,  902, 2267,  917, 2812,    0, 3789,
      920,    0, 2958, 2820, 2999,    0, 3024,    0,    0,    0,
      501, 2431,    0, 2910,    0,    0, 2796,  903,    0,    0,
        0,    0, 3043,    0,  566,    0,    0,    0,    0,  933,
        0,    0,    0,    0,    0,    0,    0, 3889, 4007,  884,

      851,    0,  961, 1797, 1022, 3036,    0, 4050,  869,    0,
     3076, 2932, 3134,    0, 3159,    0,    0,  585, 2827,    0,
     3178,    0,    0, 2878,  845,    0,    0,    0,    0, 3193,
        0,  623,    0,    0,    0,    0, 4153, 4274,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 1291, 3049,    0,
     3202,    0,    0, 3073,  828,    0,    0,    0,    0, 3218,
        0,  668,    0,    0,    0, 1699, 1702, 1760, 1806, 2177,
     2190, 2184, 3336, 2173, 2187, 2213, 2250,    0, 2284, 2284,
     2289, 2275, 2279, 2281, 2279, 2281, 2284, 2329, 2340, 2619,
     2677, 2689, 2682, 2696, 2687,    0, 2691, 2717, 2740, 2806,

     2810, 2821, 2812, 2822, 2828,    0,    0, 2834, 2985, 2988,
     3305, 3307,    0,    0, 3323, 3334, 3339, 3339, 3332, 3343,
     3328, 3344, 3338, 3337, 3343, 3348, 3341, 3352, 3357, 3338,
     1067, 3355, 3344, 3456, 3344,    0, 3358, 3347, 3361, 3352,
     3351,    0, 3356, 3368, 3379, 3384, 3397, 3397, 4395,    0,
     1289, 3208, 1290, 3338,    0, 4438,  810,    0, 3446, 3399,
     3456,    0, 3551,  807,  813,    0,    0,    0,    0,  747,
      709,    0,    0,    0,    0,    0,    0,    0, 4552, 4685,
     3621,    0,    0,    0, 3554,    0, 3619,    0, 3671,    0,
     3481, 4818,    0,    0,    0, 3689,    0,    0,    0,    0,

        0, 1350, 3224,    0, 3698,    0,    0, 3328,  727,    0,
        0,    0,    0, 3733,    0, 1056,    0,    0,    0, 4937,
     5055,    0,    0,    0,    0,    0,    0,    0, 5182, 5310,
     3622,    0,    0,    0, 3742,    0, 3822,    0, 3829,    0,
     3635, 5438,    0,    0,    0,    0,    0, 1698, 3382,    0,
     3854,    0,    0, 3412,  689,    0,    0,    0,    0, 3863,
        0, 1145,    0,    0,    0, 5557, 5675,    0,    0,    0,
        0,    0,    0,    0, 3969, 4015, 3982, 3947, 4023, 4036,
     4044, 4065, 4052, 4073, 4084, 4094, 4162, 4170, 4178, 5804,
     5933,    0,    0,    0, 3404, 3579,    0, 4124,    0,    0,

     3592,  687,    0,    0,    0,    0, 4136,    0, 1342,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 6039,    0,    0,    0,    0,    0, 3418, 3642,    0,
     4161,    0,    0, 4008,  649,    0,    0,    0,    0, 4208,
        0, 1347,    0,    0,    0, 6158, 6276,    0,    0,    0,
        0,    0,    0,    0,  701, 6397, 6518,    0,    0,    0,
        0,    0,    0,    0,    0, 3464, 3466,    0, 3458, 3518,
     3774, 3930, 3987,    0, 4048, 4157, 4158, 4158, 4233, 4261,
     4270,    0, 4276,    0, 4262, 4278, 4267,    0, 4277, 4270,
     4273, 4276, 4278,    0, 4295, 4288, 4279, 4286, 4291, 4288,

     4297, 4284,    0, 4299, 4300, 4297,    0, 4303, 4307, 4305,
     4304, 4313, 4304,    0, 4340, 4336, 4359, 4376,    0, 4372,
     4380, 4379, 4391, 4378, 4387,    0,  632,  616,  601, 4383,
     4379, 4393, 4395, 4382, 4388, 4402, 4385, 4385, 4387, 4383,
     4404, 4405, 4398, 4409, 4407,    0, 4410, 4411,    0,    0,
     6639, 6760,    0,  525,  488,    0, 1355, 1628, 4151, 1629,
     4370,    0, 6803,  484,    0, 4397, 4396, 4455,    0, 4480,
        0,    0, 1641, 4480,    0, 4505,    0,    0, 4500,  473,
        0,    0,    0,    0, 4525,    0, 1646,    0,    0,    0,
     6906, 7027, 7070,  412, 7184,    0,  393,    0,    0,    0,

        0,    0,    0,    0, 7303, 7421,    0,    0,    0,    0,
        0,    0,    0,    0, 7548,    0,  377,    0,    0,    0,
        0,    0,    0,    0, 7667, 7785,    0,    0,    0,    0,
        0,    0,    0,    0, 4609, 4625, 4636, 4672, 4680, 4688,
     4696, 4704, 7914, 8043,    0,    0,    0,    0,    0,    0,
     8161, 8279,    0,    0,    0,    0,    0,    0,    0,    0,
     8400, 8521,    0, 4585, 4585, 4681, 4690,    0, 4695, 4677,
     4690, 4698, 4695, 4691, 4701, 4689, 4691,    0,    0,  366,
     4702,    0, 4691, 4697,    0, 4708, 4709,    0, 4714,    0,
        0, 4699,    0, 4712,    0,    0, 4699, 4705,    0, 4697,

        0, 4716,    0, 4719,    0, 4718, 4720, 4722, 4708, 4760,
     4759,  359,  296,  256, 4744, 4746, 4746, 4760,    0, 4763,
     4754, 4755, 4770, 4791, 4785, 4788,    0,    0,    0, 4799,
        0, 4787,    0, 8642, 8763,    0,    0, 3743, 4726,    0,
     4751,    0,    0, 4741,  156,    0,    0,    0,    0, 4775,
        0, 1739,    0,    0,    0, 8884,    0,    0,    0,    0,
        0,    0,    0,    0, 9005, 2691, 4786,13356, 9137,    0,
        0,    0,13356, 9265,    0,    0,    0, 9387, 4843, 4845,
     4848, 4846, 4847, 4849, 4964, 4851, 4861, 4866, 4867, 4868,
     4869, 4871, 4971, 4932, 4933, 4939, 4942, 4944, 4945, 4943,

     4948, 4949, 4950, 4952, 5003, 4955, 5046, 4956, 5048, 4965,
     4957, 4961, 4968, 5019, 5020, 5051, 5054, 5052, 5055, 5056,
     5057, 5062, 5058, 5068, 5060, 5065,    0,    0,    0,    0,
        0,    0,    0,    0, 5069, 5070, 5072, 5073, 5075, 5077,
     5106, 5080, 5112, 5128, 5121, 5167, 5133, 5170, 5159, 5163,
     5162, 5212, 5219, 5167, 5173, 5208, 5180, 5181, 5207, 5256,
     5209, 5212, 5292, 5257, 5321, 5258, 5323, 5324, 5259, 5260,
     5325, 5261, 5296, 5297, 9430,  107, 5263, 5331, 5300, 5335,
     5338, 5334, 9549,    0,    0,    0, 4930,    0, 5355,    0,
     5362,    0, 5320, 5340, 5342, 5344, 5445, 5345, 9687,    0,

        0,    0, 5372,    0, 5429,    0, 5481,    0, 5405, 5473,
     5345, 5476, 5357, 5358, 5564, 5359, 5477, 5565, 5360, 5483,
     4277, 4816, 5455, 5462, 5478, 9825, 9963, 5568, 5562,    0,
      116,    0,    0,    0,    0,    0,    0,    0, 5568, 5569,
     5554,10101,10239, 5573,    0,   92,    0,    0,    0,    0,
        0,    0,    0, 5572, 5573, 5574, 5575, 5577, 5579, 5581,
     5583, 5584, 5587, 5573,10377,10515, 5586,    0,    0,    0,
     5592, 5593, 5592, 5620,    0,    0,    0,    0, 5638,13356,
     5635, 5642, 5667, 5671, 5673,13356, 5674, 5677,13356, 5676,
     5677, 5680, 5682,    0, 5682, 5685, 5686,13356,10654,10673,

    10686,10697,10710,10718,10727,10740,  136,10740,10746,10752,
    10758,10764,10781,10789,10794,10798,10804,10810,10816,10833,
    10841,10846,10850,10856,10862,10868,10879,10887,10893,10899,
    10905,10911,10928,10936,10941,10945,10951,10957,10963,10974,
    10982,10988,10994,11000,11006,11020,11028,11034,11040,11046,
    11052,11067,11075,11080,11084,11090,11096,11102,11113,11121,
    11127,11133,11139,11145,  581,11158,11174,11174,11180,11186,
    11192,11198,11204,11215,11215,11221,11227,11233,11239,11245,
    11251,11257,11263,11269,11286,11294,11300,11306,11312,11318,
    11324,11330,11336,11342,11348,11354,11360,11371,11379,11385,

    11391,11397,11403,11409,11415,11421,11427,11433,11439,11445,
    11451,11457,11463,11469,11486,11494,11500,11506,11512,11518,
    11524,11535,11543,11549,11555,11561,11567,11573,11579,11585,
    11591,11597,11603,11609,11615,11621,11627,11633,11647,11655,
    11661,11667,11673,11679,11685,11691,11697,11703,11709,11715,
    11721,11727,11733,11739,11745,11751,11757,11763,11769,11775,
    11781,11792,11800,11806,11812,11818,11824,11830,11836,11842,
    11848,11854,11860,11866,11872,11878,11884,11890,  359,11903,
    11911,11917,11923,11929,11935,11941,11947,11953,11959,11965,
    11978,11986,11992,11998,12004,12010,12016,12033,12041,12046,

    12050,12056,12062,12068,12085,12093,12099,12116,12124,12130,
    12136,12142,12148,12154,12160,12166,12172,12178,12184,12190,
    12201,12209,12226,12234,12239,12243,12249,12255,12261,12278,
    12286,12292,12298,12304,12310,12316,12322,12328,12334,12340,
    12346,12352,12363,12371,12385,12393,12399,12405,12411,12417,
    12423,12429,12435,12441,12447,12453,12468,12476,12482,12488,
    12494,12500,12506,12512,12518,12524,12530,12536,12542,12553,
    12561,12574,12579,12587,12600,12608,12614,12620,12626,12632,
    12638,12644,12650,12656,12662,12668,12674,12680,12686,12692,
    12698,12711,12730,12738,12744,12750,12756,12762,12768,12779,

    12787,12804,12812,12818,12824,12830,12836,12842,12853,12861,
    12875,12883,12894,12902,12915,12930,12938,12944,12950,12956,
    12962,12968,12974,12980,12986,12992,12998,13011,13019,13036,
    13044,13050,13067,13075,13081,13087,13104,13123,13131,13136,
    13140,13146,13152,13158,13164,13169,13173,13179,13185,13191,
    13197,13214,13222,13228,13234,13240,13246,13252,13269,13277,
    13283,13289,13295,13301,13307,13324,13332,13338
    } ;

static yyconst flex_int16_t yy_def[1769] =
    {   0,
     1398,    1, 1398, 1398, 1398, 1398, 1398, 1398, 1399, 1400,
     1401, 1398, 1402, 1398, 1398, 1403, 1398, 1398, 1398, 1398,
     1398, 1398, 1404, 1398, 1405, 1398, 1398, 1406, 1407, 1398,
       30,   31,   32,   32,   32,   32,   32,   32,   32,   31,
       31,   32,   32,   32,   32,   32,   32,   32,   32,   32,
       32, 1398, 1398, 1398, 1398,   30,   32,   32, 1398, 1398,
     1398, 1408, 1408, 1398, 1408, 1398, 1409, 1398, 1410, 1411,
     1398, 1398, 1398, 1412, 1398, 1398, 1398, 1398, 1413, 1398,
     1398, 1414, 1415, 1416, 1398, 1417, 1398, 1418, 1398, 1419,
     1398, 1420, 1421, 1422, 1423, 1398, 1424, 1398, 1425, 1398,

     1426, 1398, 1427, 1428, 1428, 1398, 1428, 1398, 1429, 1398,
     1430, 1431, 1398, 1398, 1398, 1432, 1398, 1398, 1433, 1398,
     1398, 1434, 1435, 1436, 1398, 1437, 1398, 1438, 1398, 1439,
     1398, 1398, 1398, 1440, 1441, 1441, 1398, 1441, 1398, 1442,
     1398, 1443, 1444, 1398, 1398, 1398, 1445, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1446, 1446, 1398, 1447, 1447, 1398, 1447, 1398, 1448, 1398,
     1449, 1450, 1398, 1398, 1398, 1451, 1398, 1452, 1452, 1398,
     1453, 1454, 1455, 1398, 1456, 1398, 1457, 1398, 1458, 1398,
     1398, 1459, 1460, 1460, 1398, 1460, 1398, 1461, 1398, 1462,

     1463, 1398, 1398, 1398, 1464, 1398, 1465, 1466, 1466, 1467,
      209,  209,  209,  209,  209,  209,  209, 1398, 1398, 1468,
     1468, 1468, 1469, 1468, 1398, 1470, 1398, 1471, 1472, 1398,
     1398, 1398, 1473, 1398,  209,  209,  209,  209,  209,  209,
      209,  209,  209,  209,  209,  209,  209,  209,  209,  209,
      209,  209,  209,  209,  209,  209,  209,  209,  209,  209,
      209,  209,  209,  209,  209,  209,  209,  209,  209,  209,
      209,  209,  209,  209,  209,  209,  209,  209,  209,  209,
      209,  209,  209,  209,  209,  209,  209,  209,  209,  209,
      209,  209,  209,  209,  209, 1398, 1398, 1398, 1474,  209,

      209, 1398,  209, 1475, 1476, 1475, 1475, 1477, 1475, 1475,
     1475, 1478, 1478, 1479, 1479, 1476, 1475, 1480, 1398, 1481,
     1481, 1482, 1483, 1484, 1398, 1485, 1486, 1398, 1487, 1488,
     1487, 1487, 1489, 1490, 1491, 1492, 1398, 1493, 1494, 1493,
     1493, 1495, 1496, 1497, 1498, 1498, 1398, 1398, 1499, 1499,
     1500, 1499, 1398, 1501, 1398, 1502, 1503, 1398, 1398, 1398,
     1504, 1398, 1505, 1506, 1505, 1505, 1507, 1505, 1505, 1508,
     1508, 1509, 1509, 1506, 1505, 1510, 1398, 1511, 1511, 1512,
     1513, 1514, 1398, 1515, 1516, 1398, 1517, 1518, 1517, 1517,
     1519, 1520, 1521, 1522, 1522, 1398, 1398, 1523, 1523, 1524,

     1523, 1398, 1525, 1398, 1526, 1527, 1398, 1398, 1398, 1528,
     1398, 1529, 1530, 1529, 1529, 1531, 1529, 1529, 1532, 1532,
     1533, 1533, 1530, 1529, 1534, 1398, 1535, 1535, 1536, 1537,
     1538, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1539, 1539,  447,  447, 1398,
     1398, 1398, 1540, 1540, 1540, 1541, 1540, 1398, 1542, 1398,
     1543, 1544, 1398, 1398, 1398, 1545, 1398,  447, 1546, 1547,
     1546, 1546, 1548, 1546, 1546, 1549, 1549, 1550, 1550, 1547,
     1546, 1551, 1398, 1552, 1552, 1553, 1554, 1555, 1556, 1398,
     1557, 1558, 1557, 1557, 1559, 1560, 1561, 1562, 1562, 1398,

     1398, 1563, 1563, 1564, 1563, 1398, 1565, 1398, 1566, 1567,
     1398, 1398, 1398, 1568, 1398, 1569, 1570, 1569, 1569, 1571,
     1569, 1569, 1572, 1572, 1573, 1573, 1570, 1569, 1574, 1398,
     1575, 1575, 1576, 1577, 1578, 1579, 1580, 1580,  538,  538,
      538,  538,  538,  538,  538, 1581, 1582, 1581, 1581, 1583,
     1581, 1581, 1584, 1584, 1585, 1585, 1582, 1581, 1586, 1398,
     1587, 1587, 1588, 1589, 1590,  538,  538,  538,  538,  538,
      538,  538,  538,  538,  538,  538,  538,  538,  538,  538,
      538,  538,  538,  538,  538,  538,  538,  538,  538,  538,
      538,  538,  538,  538,  538,  538,  538,  538,  538,  538,

      538,  538,  538,  538,  538,  538,  538,  538,  538,  538,
      538,  538,  538,  538,  538,  538,  538,  538,  538,  538,
      538,  538,  538,  538,  538,  538,  538,  538,  538,  538,
      538,  538,  538,  538,  538,  538,  538,  538,  538,  538,
      538,  538,  538,  538,  538,  538,  538,  538, 1591, 1592,
     1592, 1398, 1592, 1398, 1593, 1398, 1594, 1595, 1398, 1398,
     1398, 1596, 1398,  538,  538,  538,  538,  538,  538,  538,
      538,  538,  538,  538,  538, 1597, 1597, 1597, 1598, 1598,
     1398, 1599, 1600, 1601, 1398, 1602, 1398, 1603, 1398, 1604,
     1398, 1605, 1606, 1606, 1607, 1608, 1609, 1609, 1610, 1611,

     1612, 1611, 1611, 1613, 1611, 1611, 1614, 1614, 1615, 1615,
     1612, 1611, 1616, 1398, 1617, 1617, 1618, 1619, 1620, 1621,
     1621,  721,  721,  721,  721, 1622, 1622, 1622, 1623, 1623,
     1398, 1624, 1625, 1626, 1398, 1627, 1398, 1628, 1398, 1629,
     1398, 1630, 1631, 1631, 1632, 1633, 1634, 1633, 1633, 1635,
     1633, 1633, 1636, 1636, 1637, 1637, 1634, 1633, 1638, 1398,
     1639, 1639, 1640, 1641, 1642, 1643, 1643,  767,  767,  767,
      767, 1644, 1644, 1644, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1645,
     1645,  791, 1646, 1647, 1646, 1646, 1648, 1646, 1646, 1649,

     1649, 1650, 1650, 1647, 1646, 1651, 1398, 1652, 1652, 1653,
     1654, 1655,  791,  791,  791,  791,  791,  791, 1656, 1656,
     1656, 1657, 1658, 1658, 1659, 1660, 1661, 1660, 1660, 1662,
     1660, 1660, 1663, 1663, 1664, 1664, 1661, 1660, 1665, 1398,
     1666, 1666, 1667, 1668, 1669, 1670, 1670,  847,  847,  847,
      847, 1671, 1671, 1671, 1672, 1673, 1673,  857,  857,  857,
     1674, 1674, 1674,  857,  857,  857,  857,  857,  857,  857,
      857,  857,  857,  857,  857,  857,  857,  857,  857,  857,
      857,  857,  857,  857,  857,  857,  857,  857,  857,  857,
      857,  857,  857,  857,  857,  857,  857,  857,  857,  857,

      857,  857,  857,  857,  857,  857,  857,  857,  857,  857,
      857,  857,  857,  857,  857,  857,  857,  857,  857,  857,
      857,  857,  857,  857,  857,  857,  857,  857,  857,  857,
      857,  857,  857,  857,  857,  857,  857,  857,  857,  857,
      857,  857,  857,  857,  857,  857,  857,  857,  857,  857,
     1675, 1675,  952, 1398, 1398, 1676, 1676, 1676, 1677, 1676,
     1398, 1678, 1398, 1679, 1680, 1398, 1398, 1398, 1681, 1398,
     1682, 1683, 1682, 1682, 1684, 1682, 1682, 1685, 1685, 1686,
     1686, 1683, 1682, 1687, 1398, 1688, 1688, 1689, 1690, 1691,
     1692, 1692, 1398,  993, 1693, 1694, 1398, 1695, 1696, 1695,

     1695, 1697, 1698, 1699, 1700, 1700, 1006, 1006, 1006, 1006,
     1006, 1701, 1701, 1701, 1702, 1703, 1398, 1704, 1705, 1704,
     1704, 1706, 1707, 1708, 1709, 1709, 1026, 1026, 1026, 1026,
     1026, 1710, 1710, 1710, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1711, 1711, 1044, 1044, 1044, 1712, 1712, 1712,
     1713, 1713, 1052, 1052, 1052, 1052, 1052, 1714, 1714, 1714,
     1715, 1715, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,

     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1716, 1716, 1717, 1718, 1717, 1717, 1719,
     1717, 1717, 1720, 1720, 1721, 1721, 1718, 1717, 1722, 1398,
     1723, 1723, 1724, 1725, 1726, 1716, 1156, 1156, 1156, 1156,
     1156, 1727, 1727, 1727, 1728, 1729, 1729, 1398, 1730, 1731,
     1731, 1732, 1398, 1733, 1734, 1734, 1735, 1728, 1178, 1178,
     1178, 1178, 1178, 1178, 1178, 1178, 1178, 1178, 1178, 1178,
     1178, 1178, 1178, 1178, 1178, 1178, 1178, 1178, 1178, 1178,

     1178, 1178, 1178, 1178, 1178, 1178, 1178, 1178, 1178, 1178,
     1178, 1178, 1178, 1178, 1178, 1178, 1178, 1178, 1178, 1178,
     1178, 1178, 1178, 1178, 1178, 1178, 1156, 1156, 1156, 1156,
     1156, 1736, 1736, 1736, 1178, 1178, 1178, 1178, 1178, 1178,
     1178, 1178, 1178, 1178, 1178, 1398, 1737, 1178, 1178, 1178,
     1178, 1398, 1738, 1178, 1178, 1178, 1178, 1178, 1178, 1178,
     1178, 1178, 1178, 1178, 1178, 1178, 1178, 1178, 1178, 1178,
     1178, 1178, 1178, 1178, 1398, 1275, 1178, 1178, 1178, 1178,
     1398, 1398, 1737, 1739, 1740, 1741, 1398, 1742, 1398, 1743,
     1398, 1744, 1398, 1178, 1178, 1178, 1178, 1398, 1738, 1745,

     1746, 1747, 1398, 1748, 1398, 1749, 1398, 1750, 1398, 1178,
     1178, 1178, 1178, 1178, 1178, 1178, 1178, 1178, 1178, 1178,
     1751, 1751, 1178, 1398, 1398, 1752, 1752, 1327, 1327, 1753,
     1398, 1754, 1755, 1754, 1754, 1756, 1757, 1758, 1178, 1178,
     1398, 1759, 1759, 1343, 1760, 1398, 1761, 1762, 1761, 1761,
     1763, 1764, 1765, 1178, 1178, 1178, 1178, 1178, 1178, 1178,
     1178, 1178, 1398, 1398, 1766, 1766, 1366, 1767, 1767, 1768,
     1178, 1178, 1398, 1343, 1343, 1761, 1761, 1760, 1178, 1398,
     1398, 1366, 1366, 1178, 1178, 1398, 1343, 1178, 1398, 1366,
     1366, 1178, 1178, 1343, 1366, 1178, 1178,    0, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398
    } ;

static yyconst flex_int16_t yy_nxt[13496] =
    {   0,
        4,    5,    6,    7,    5,    8,    9,   10,   11,    4,
       12,   13,   14,   15,   16,   17,   18,   19,   20,   21,
       22,   22,   22,   22,   22,   22,   22,   22,   23,   24,
       25,   26,   27,   28,   29,   30,   31,   32,   33,   34,
       35,   36,   37,   38,   39,   39,   40,   41,   42,   43,
       44,   45,   46,   47,   48,   49,   50,   39,   51,   39,
       52,    4,   53,   54,   55,   56,   31,   32,   33,   34,
       57,   36,   37,   38,   39,   39,   40,   41,   42,   43,
       44,   45,   46,   58,   48,   49,   50,   39,   51,   39,
       59,   60,   61,    4,    4,    4,    4,    4,    4,    4,

        4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
        4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
        4,    4,   62,   63,    4,   64,   65,   66,   67,   68,
       69,   70,   71,    4,   72,   73,   74,   75,    4,   76,
       93,  303,   76,   80,  207,  132,  132,  132,  132,  303,
      303,  303,  303,  303, 1299,  303,   94,  133,   95,   95,
       95,   95,   95,   95,   96,   97,   97,   97,   97,   98,
       99,   99,  100,  101,  101,  102,  104,  105, 1283,  106,
      107,  108,  109,  110,  111,  112,  113,  210,  114,  115,
      116,  117,  296,  296,  296,  296,  135,  136,   81,  137,

      138,  139,  140,  141,  142,  143,  144,  210,  145,  146,
      147,  148,  149,  150, 1322,  151,  151,  151,  151,  151,
      151,  151,  151,  152,  153,  539,  154,  154,  154,  154,
      154,  154,  154,  154,   76,  664,  607,   76,  155,  210,
       82,  156,  156,  156,  156,  156,  156,  156,  156,  303,
      432,  953,  149,  297,  210,  539,   83,  303,   84,   84,
       84,   84,   84,   84,   85,   86,   86,   86,   86,   87,
       88,   88,   89,   90,   90,   91,  120,  157, 1213,  158,
      158,  158,  158,  158,  158,  158,  158,  193,  194,  210,
      195,  196,  197,  198,  199,  200,  201,  202,  159,  203,

      204,  205,  206,  103,  235,  211,  103,  211,  134,  210,
      665,  103,  236,  537,  103,  211,  134,  237,  238,  538,
     1212,  211,  134,  162,  211,  244,  121,  239,  159,  245,
      134,  162,  162,  246,  235,  211,  211,  211,  192,  211,
      162,  247,  236,  537,  192,  211,  192,  237,  238,  538,
      211,  211,  192,  210,  211,  244,  211,  239,  211,  245,
      666,  666,  211,  246,  211,  855,  211,  855,  122,  211,
      211,  247,  304,  304,  304,  304,  304,  304,  304,  304,
      304, 1398, 1398,  540,  123, 1211,  124,  124,  124,  124,
      124,  124,  125,  126,  126,  126,  126,  127,  128,  128,

      129,  130,  130,  131,  160,  318,  318,  318,  318,  319,
      320,  320,  321,  540,  210,  161,  161,  161,  161,  161,
      161,  161,  161,  161,  211,  210,  210,  543,  240,  210,
     1191,  210,  211,  603,  211,  241,  605,  211,  242,  729,
      243,  211,  571,  248,  211,  567,  211,  211,  103,  103,
      103,  103,  249,  103,  211,  679,  163,  543,  240,  720,
      720,  346,  211,  603,  211,  241,  605,  211,  242,  346,
      243,  211,  571,  248,  211,  567,  211,  211, 1398, 1398,
      766,  766,  249,  317,  317,  317,  317,  317,  317,  317,
      317,  317,  317,  317,  317,  317,  317,  317,  317,  322,

      322,  322,  322,  322,  322,  322,  322,  322,  322,  322,
      322,  322,  322,  322,  322,  210,  210,  164,  165, 1167,
      166,  167,  168,  169,  170,  171,  172,  173,  210,  174,
      175,  176,  177,  179,  180,  211,  211,  568,  210,  250,
      254,  569,  251,  211,  211,  211,  211,  252,  253,  210,
      211,  211,  566,  570,  255,  346,  211,  211, 1398, 1398,
      211,  615,  211,  346,  210,  211,  211,  568,  649,  250,
      254,  569,  251,  211,  211,  211,  211,  252,  253, 1145,
      211,  211,  566,  570,  255,  207,  211,  211,  582,  207,
      211,  615,  211,  329,  329,  329,  329,  329,  329,  329,

      329,  329,  813,  813,  951,  181,  335,  335,  335,  335,
      335,  335,  335,  335,  134,  134,  134,  134,  582,  134,
      951,  182, 1114,  183,  183,  183,  183,  183,  183,  184,
      185,  185,  185,  185,  186,  187,  187,  188,  189,  189,
      190,  208,  209, 1113,  208,  208,  208,  208,  208,  208,
      208,  208,  210,  162,  162,  162,  162, 1112,  162,  211,
      212,  211,  213,  211,  211,  211,  211,  211,  211,  211,
      214,  211,  215,  211,  211,  211,  216,  211,  211,  217,
      211,  211,  211,  211, 1398, 1398,  846,  846,  211,  211,
      212,  211,  213,  211,  211,  211,  211,  211,  211,  211,

      214,  211,  215,  211,  211,  211,  216,  211,  211,  217,
      211,  211,  211,  211,  192,  192,  192,  192,  536,  192,
      218,  324,  324,  324,  324,  324,  324,  324,  324,  324,
      324,  324,  324,  324,  324,  324,  324,  324,  324,  324,
      210, 1398, 1398,  210,  499,  219,  220,  221,  222,  223,
      224,  225,  226,  227,  228,  229,  230,  210,  231,  232,
      233,  234,  211,  256,  583,  260,  593,  261,  576,  211,
      210,  257,  211,  262,  258,  259,  210,  264,  211,  263,
      265,  266,  449,  631,  395,  267, 1398, 1398,  211,  604,
      211,  268,  211,  256,  583,  260,  593,  261,  576,  211,

      211,  257,  211,  262,  258,  259,  210,  264,  211,  263,
      265,  266,  269,  631,  210,  267,  211,  210,  211,  604,
      211,  268,  346,  211,  211,  271,  270,  588,  211,  395,
      211,  211,  586,  211,  211,  272,  273,  395,  994,  577,
      211,  210,  269,  211,  578,  274,  211,  132,  132,  132,
      132,  210,  210,  211,  211,  271,  270,  588,  211,  133,
      608,  211,  586,  211,  211,  272,  273,  275,  210,  577,
      211,  276,  589,  211,  578,  274,  993,  395,  211,  592,
      278,  277,  992,  211,  279,  395,  587,  280,  281,  991,
      608,  211,  449,  210,  211,  210,  211,  275,  282,  283,

      449,  276,  589,  617,  541,  980,  210,  210,  211,  592,
      278,  277,  542,  211,  279,  211,  587,  280,  281,  284,
      210,  211,  211,  211,  211,  285,  211,  211,  282,  283,
      594,  595,  579,  617,  541,  286,  606,  210,  580,  287,
      192,  211,  542,  210,  581,  211,  584,  585,  211,  284,
      288,  211,  211,  289,  290,  285,  291,  211,  596,  292,
      594,  595,  579,  211,  835,  286,  606,  498,  580,  287,
      211,  211,  210,  211,  581,  211,  584,  585,  211,  498,
      288,  211,  210,  289,  290,  210,  291,  211,  596,  292,
      293,  294,  602,  211,  211,  178,  210,  211,  162,  211,

      211,  295,  211,  211,  612,  211,  250,  616,  211,  251,
      449,  211,  211,  211,  252,  802,  609,  211,  449,  210,
      293,  294,  602,  210,  211,  449,  590,  211,  300,  211,
      210,  295,  211,  449,  612,  210,  250,  616,  211,  251,
      591,  211,  211,  211,  252,  211,  609,  210,  613,  284,
      620,  614,  211,  632,  638,  285,  590,  211,  545,  545,
      545,  545,  211,  545,  446,  286,  446,   79,  210,  499,
      591,  149,   79,  134,  210,  211,  755,  499,  613,  284,
      620,  614,  211,  632,  638,  285,  394,  301,  926,  927,
      928,  394,  929,  637,  624,  286,  306,  307,  308,  308,

      309,  310,  310,  310,  310,  310,  310,  310,  311,  310,
      310,  310,  310,  310,  310,  312,  312,  312,  312,  312,
      313,  325,   79,  637,  624,  210,  210,   79,  210,  119,
      499,   79,  667,  667,  667,  667,  667,  667,  499,   79,
      642,  643,   79,  644,   79,  331,  331,  331,  331,  331,
      331,  331,  331,  331,  331,  331,  331,  331,  331,  331,
      331,  338,  338,  338,  338,  338,  338,  338,  338,  338,
      642,  643,  103,  644, 1398, 1398,   81,  333,  333,  333,
      333,  333,  333,  333,  333,  333,  333,  333,  333,  333,
      333,  333,  333,  340,  340,  340,  340,  340,  340,  340,

      340,  340,  340,  340,  340,  340,  340,  340,  340,  344,
      344,  344,  344,  344,  344,  344,  344,  210,   82,  363,
      363,  363,  363,  363,  363,  363,  363,  363,  303,  303,
      303,  303,  303,  303,   83,  645,   84,   84,   84,   84,
       84,   84,   85,   86,   86,   86,   86,   87,   88,   88,
       89,   90,   90,   91,   93,  376,  376,  376,  376,  377,
      378,  378,  379, 1398, 1398,  645,  346,  346,  346,  346,
       94,  346,   95,   95,   95,   95,   95,   95,   96,   97,
       97,   97,   97,   98,   99,   99,  100,  101,  101,  102,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,

      342,  342,  342,  342,  342,  342,  345,  345,  345,  345,
      345,  345,  345,  345,  375,  375,  375,  375,  375,  375,
      375,  375,  375,  375,  375,  375,  375,  375,  375,  375,
      380,  380,  380,  380,  380,  380,  380,  380,  380,  380,
      380,  380,  380,  380,  380,  380,  382,  382,  382,  382,
      382,  382,  382,  382,  382,  382,  382,  382,  382,  382,
      382,  382,  382,  382,  382,  387,  387,  387,  387,  387,
      387,  387,  387,  387,  393,  393,  393,  393,  393,  393,
      393,  393,  347,  412,  412,  412,  412,  412,  412,  412,
      412,  412,  545,  545,  709,  119,  345,  649,  649,  345,

      119,  296,  296,  296,  296,  649,  649,  348,  349,  350,
      544,  351,  352,  353,  354,  355,  356,  357,  358,   92,
      359,  360,  361,  362,  365,  366,  367,  367,  368,  369,
      369,  369,  369,  369,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  370,  370,  370,  370,  370,  371,  383,
      119, 1005, 1005,   79,  669,  119,  303,  210,  670,  119,
     1398, 1398,  297,  953,  671, 1398, 1398,  119,  646, 1006,
      119,  953,  119,  389,  389,  389,  389,  389,  389,  389,
      389,  389,  389,  389,  389,  389,  389,  389,  389,  425,
      425,  425,  425,  426,  427,  427,  428,  210,  646,  121,

      391,  391,  391,  391,  391,  391,  391,  391,  391,  391,
      391,  391,  391,  391,  391,  391,  424,  424,  424,  424,
      424,  424,  424,  424,  424,  424,  424,  424,  424,  424,
      424,  424,  433,  433,  433,  433,  433,  433,  433,  433,
      210,  122,  436,  436,  436,  436,  436,  436,  436,  436,
      721,  721,  721,  721,  721,  721,  210,  123,  210,  124,
      124,  124,  124,  124,  124,  125,  126,  126,  126,  126,
      127,  128,  128,  129,  130,  130,  131,  394,  394,  394,
      394,  394,  394,  394,  394,  429,  429,  429,  429,  429,
      429,  429,  429,  429,  429,  429,  429,  429,  429,  429,

      429,  431,  431,  431,  431,  431,  431,  431,  431,  431,
      431,  431,  431,  431,  431,  431,  431,  431,  431,  431,
      434,  210,  151,  151,  151,  151,  151,  151,  151,  151,
      437,  555,  154,  154,  154,  154,  154,  154,  154,  154,
      208,  435,  482,  482,  482,  482,  483,  484,  484,  485,
      442,  438,  442,  396,  208,  443,  443,  443,  443,  443,
      443,  443,  443,  497,  497,  497,  497,  497,  497,  497,
      497,  435,  103,  103,  103,  103,  103,  103,  397,  398,
      399,  438,  400,  401,  402,  403,  404,  405,  406,  407,
      210,  408,  409,  410,  411,  414,  415,  416,  416,  417,

      418,  418,  418,  418,  418,  418,  418,  418,  418,  418,
      418,  418,  418,  418,  419,  419,  419,  419,  419,  420,
      156,  156,  156,  156,  156,  156,  156,  156,  440,  440,
      440,  440,  440,  440,  440,  440,  953,  953,  864,  439,
      865,  210, 1156, 1156,  953,  953,  157,  441,  158,  158,
      158,  158,  158,  158,  158,  158,  444,  444,  444,  444,
      444,  444,  444,  444, 1398, 1398,  647,  159,  864,  439,
      865,  444,  444,  444,  444,  444,  444,  441,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  491,  491,  491,
      491,  491,  491,  491,  491,  491,  647,  159,  866, 1025,

     1025,  444,  444,  444,  444,  444,  444,  445,  395,  395,
      395,  395,  536,  395,  525,  446,  447, 1026,  446,  446,
      446,  446,  446,  446,  446,  446,  448,  468,  866,  468,
      468,  468,  468,  468,  468,  468,  468,  468,  468,  468,
      468,  468,  516,  516,  516,  516,  516,  516,  516,  516,
      516,  468,  478,  468,  867,  468,  468, 1398, 1398,  450,
      481,  481,  481,  481,  481,  481,  481,  481,  481,  481,
      481,  481,  481,  481,  481,  481,  529,  529,  529,  529,
      530,  531,  531,  532,  867,  421,  468,  767,  767,  767,
      767,  767,  767,  384,  451,  486,  486,  486,  486,  486,

      486,  486,  486,  486,  486,  486,  486,  486,  486,  486,
      486,  499,  499,  499,  499,  468,  499,  372,  326,  452,
      453,  454,  455,  456,  457,  458,  459,  460,  461,  462,
      463,  314,  464,  465,  466,  467,  445,  134,  134,  134,
      134,  134,  134,  302,  446,  447,  299,  446,  446,  446,
      446,  446,  446,  446,  446,  448,  488,  488,  488,  488,
      488,  488,  488,  488,  488,  488,  488,  488,  488,  488,
      488,  488,  488,  488,  488,  546,  546,  546,  546,  546,
      546,  546,  546,  546,  298,  191,  118,   78,  450,  493,
      493,  493,  493,  493,  493,  493,  493,  493,  493,  493,

      493,  493,  493,  493,  493,  495,  495,  495,  495,  495,
      495,  495,  495,  495,  495,  495,  495,  495,  495,  495,
      495,   77, 1398,  451,  528,  528,  528,  528,  528,  528,
      528,  528,  528,  528,  528,  528,  528,  528,  528,  528,
      559,  559,  559,  559,  560,  561,  561,  562,  452,  453,
      454,  455,  456,  457,  458,  459,  460,  461,  462,  463,
     1398,  464,  465,  466,  467,  471,  472,  473,  473,  474,
      475,  475,  475,  475,  475,  475,  475,  475,  475,  475,
      475,  475,  475,  475,  476,  476,  476,  476,  476,  477,
      180,  533,  533,  533,  533,  533,  533,  533,  533,  533,

      533,  533,  533,  533,  533,  533,  533,  535,  535,  535,
      535,  535,  535,  535,  535,  535,  535,  535,  535,  535,
      535,  535,  535,  535,  535,  535,  558,  558,  558,  558,
      558,  558,  558,  558,  558,  558,  558,  558,  558,  558,
      558,  558,  563,  563,  563,  563,  563,  563,  563,  563,
      563,  563,  563,  563,  563,  563,  563,  563, 1398,  650,
      651,  181,  652,  653,  654,  655,  656,  657,  658,  659,
     1398,  660,  661,  662,  663, 1398, 1398,  182, 1398,  183,
      183,  183,  183,  183,  183,  184,  185,  185,  185,  185,
      186,  187,  187,  188,  189,  189,  190,  180,  565,  565,

      565,  565,  565,  565,  565,  565,  565,  565,  565,  565,
      565,  565,  565,  565,  565,  565,  565,  210,  210, 1398,
      210,  210, 1398,  868,  572,  869,  210,  210,  648,  618,
      870,  874,  210,  619,  597,  875,  627,  573, 1398,  574,
      610,  598,  625,  575,  599,  628,  600,  611,  876,  629,
      630,  626,  601,  868,  572,  869, 1398, 1398,  648,  618,
      870,  874, 1398,  619,  597,  875,  627,  573,  181,  574,
      610,  598,  625,  575,  599,  628,  600,  611,  876,  629,
      630,  626,  601, 1398,  182,  877,  183,  183,  183,  183,
      183,  183,  184,  185,  185,  185,  185,  186,  187,  187,

      188,  189,  189,  190,  498,  498,  498,  498,  498,  498,
      498,  498,  210,  210, 1398,  877,  210,  210, 1398,  878,
      633, 1398,  621,  879,  635,  622,  880,  639,  881,  882,
      883,  884,  640,  885,  623,  636,  634,  886,  641, 1398,
      667,  667,  667,  667,  667,  667,  667,  667,  667,  878,
      633,  668,  621,  879,  635,  622,  880,  639,  881,  882,
      883,  884,  640,  885,  623,  636,  634,  886,  641,  674,
      674,  674,  674,  674,  674,  674,  674,  674,  887, 1398,
      500,  792,  792,  792,  792,  449,  792,  888,  675,  675,
      675,  675,  675,  675,  700,  700,  700,  700,  700,  700,

      700,  700,  700, 1398, 1398,  501,  502,  503,  887,  504,
      505,  506,  507,  508,  509,  510,  511,  888,  512,  513,
      514,  515,  518,  519,  520,  520,  521,  522,  522,  522,
      522,  522,  522,  522,  522,  522,  522,  522,  522,  522,
      522,  523,  523,  523,  523,  523,  524,  208,  209, 1398,
      208,  208,  208,  208,  208,  208,  208,  208,  210,  712,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  713,  713,  713,  713,  714,
      715,  715,  716,  717,  717,  717,  717,  717,  717,  717,
      717,  717,  717,  717,  717,  717,  717,  717,  717,  719,

      719,  719,  719,  719,  719,  719,  719,  719,  719,  719,
      719,  719,  719,  719,  719,  719,  719,  719,  759,  759,
      759,  759,  760,  761,  761,  762,  218,  721,  721,  721,
      721,  721,  721,  721,  721,  721,  746,  746,  746,  746,
      746,  746,  746,  746,  746,  814,  814,  814,  814,  814,
      814,  219,  220,  221,  222,  223,  224,  225,  226,  227,
      228,  229,  230, 1398,  231,  232,  233,  234,  208,  209,
     1398,  208,  208,  208,  208,  208,  208,  208,  208, 1398,
      724,  724,  724,  724,  724,  724,  724,  724,  724,  767,
      767,  767,  767,  767,  767,  767,  767,  767, 1398,  725,

      725,  725,  725,  725,  725,  758,  758,  758,  758,  758,
      758,  758,  758,  758,  758,  758,  758,  758,  758,  758,
      758,  763,  763,  763,  763,  763,  763,  763,  763,  763,
      763,  763,  763,  763,  763,  763,  763,  443,  443,  443,
      443,  443,  443,  443,  443, 1398, 1398,  218,  765,  765,
      765,  765,  765,  765,  765,  765,  765,  765,  765,  765,
      765,  765,  765,  765,  765,  765,  765, 1398, 1398,  889,
     1398, 1398,  219,  220,  221,  222,  223,  224,  225,  226,
      227,  228,  229,  230, 1398,  231,  232,  233,  234,  160,
      770,  770,  770,  770,  770,  770,  770,  770,  770,  889,

      161,  161,  161,  161,  161,  161,  161,  161,  161,  771,
      771,  771,  771,  771,  771,  433,  433,  433,  433,  433,
      433,  433,  433,  776,  776,  776,  776,  776,  776,  776,
      776,  890,  891,  892,  775,  893,  894,  895,  778, 1398,
      778,  163,  777,  779,  779,  779,  779,  779,  779,  779,
      779,  436,  436,  436,  436,  436,  436,  436,  436, 1398,
     1398,  890,  891,  892,  775,  893,  894,  895,  896,  783,
      780,  783,  777, 1398,  784,  784,  784,  784,  784,  784,
      784,  784,  785,  897,  785, 1398, 1235,  786,  786,  786,
      786,  786,  786,  786,  786, 1236, 1398, 1398,  896, 1398,

      780, 1398,  164,  165, 1237,  166,  167,  168,  169,  170,
      171,  172,  173,  897,  174,  175,  176,  177,  548,  549,
      550,  550,  551,  552,  552,  552,  552,  552,  552,  552,
      552,  552,  552,  552,  552,  552,  552,  553,  553,  553,
      553,  553,  554,  680,  781,  781,  781,  781,  781,  781,
      781,  781,  440,  440,  440,  440,  440,  440,  440,  440,
      898,  899,  900,  782,  901,  902,  903,  787, 1398,  787,
      904,  441,  788,  788,  788,  788,  788,  788,  788,  788,
      443,  443,  443,  443,  443,  443,  443,  443, 1398, 1398,
      898,  899,  900,  782,  901,  902,  903, 1398,  681, 1398,

      904,  441,  161,  161,  161,  161,  161,  161,  161,  161,
      162,  162,  162,  162,  162,  162, 1398,  161,  161,  161,
      161,  161,  161,  793,  793,  793,  793,  793,  793,  793,
      793,  793,  806,  806,  806,  806,  807,  808,  808,  809,
      682,  847,  847,  847,  847,  847,  847,  161,  161,  161,
      161,  161,  161, 1398, 1398, 1398,  683, 1398,  684,  684,
      684,  684,  684,  684,  685,  686,  686,  686,  686,  687,
      688,  688,  689,  690,  690,  691,  345,  345,  345,  345,
      345,  345,  345,  345,  789,  789,  789,  789,  789,  789,
      789,  789,  192,  192,  192,  192,  192,  192, 1398,  789,

      789,  789,  789,  789,  789,  814,  814,  814,  814,  814,
      814,  814,  814,  814,  790, 1398,  790,  790,  790,  790,
      790,  790,  790,  790,  790,  790,  790,  790,  790,  789,
      789,  789,  789,  789,  789, 1398, 1398, 1398,  790,  905,
      790,  906,  790,  790,  839,  839,  839,  839,  840,  841,
      841,  842,  347,  805,  805,  805,  805,  805,  805,  805,
      805,  805,  805,  805,  805,  805,  805,  805,  805,  905,
     1398,  906, 1398,  790, 1398, 1398, 1398,  348,  349,  350,
     1398,  351,  352,  353,  354,  355,  356,  357,  358, 1398,
      359,  360,  361,  362,  345,  345,  345,  345,  345,  345,

      345,  345,  790,  810,  810,  810,  810,  810,  810,  810,
      810,  810,  810,  810,  810,  810,  810,  810,  810,  812,
      812,  812,  812,  812,  812,  812,  812,  812,  812,  812,
      812,  812,  812,  812,  812,  812,  812,  812,  817,  817,
      817,  817,  817,  817,  817,  817,  817,  826,  826,  826,
      826,  826,  826,  826,  826,  826, 1398,  818,  818,  818,
      818,  818,  818,  856,  856,  856,  856,  856,  856, 1398,
      347,  838,  838,  838,  838,  838,  838,  838,  838,  838,
      838,  838,  838,  838,  838,  838,  838,  211,  211,  211,
      211,  211,  211, 1398, 1398,  348,  349,  350, 1398,  351,

      352,  353,  354,  355,  356,  357,  358, 1398,  359,  360,
      361,  362,  702,  703,  704,  704,  705,  706,  706,  706,
      706,  706,  706,  706,  706,  706,  706,  706,  706,  706,
      706,  707,  707,  707,  707,  707,  708,  730,  843,  843,
      843,  843,  843,  843,  843,  843,  843,  843,  843,  843,
      843,  843,  843,  843,  845,  845,  845,  845,  845,  845,
      845,  845,  845,  845,  845,  845,  845,  845,  845,  845,
      845,  845,  845,  847,  847,  847,  847,  847,  847,  847,
      847,  847, 1398, 1398, 1398, 1398, 1398,  731,  850,  850,
      850,  850,  850,  850,  850,  850,  850,  856,  856,  856,

      856,  856,  856,  856,  856,  856, 1398,  851,  851,  851,
      851,  851,  851,  859,  859,  859,  859,  859,  859,  859,
      859,  859,  649,  649,  649,  649, 1398,  649, 1398,  732,
     1398, 1398,  860,  860,  860,  860,  860,  860, 1007, 1007,
     1007, 1007, 1007, 1007,  907,  733,  908,  734,  734,  734,
      734,  734,  734,  735,  736,  736,  736,  736,  737,  738,
      738,  739,  740,  740,  741,  394,  394,  394,  394,  394,
      394,  394,  394,  871,  907,  909,  908,  910,  911,  912,
      913,  914,  915,  916,  917,  918,  919,  920,  872,  873,
      922,  923,  924,  925,  930,  931,  939,  940,  921,  941,

      942,  943,  944,  871,  945,  909,  946,  910,  911,  912,
      913,  914,  915,  916,  917,  918,  919,  920,  872,  873,
      922,  923,  924,  925,  930,  931,  939,  940,  921,  941,
      942,  943,  944,  947,  945,  948,  946, 1398, 1398,  949,
     1398,  396,  346,  346,  346,  346,  346,  346,  950,  971,
      971,  971,  971,  971,  971,  971,  971,  971, 1398, 1398,
     1398, 1398, 1398,  947, 1398,  948,  397,  398,  399,  949,
      400,  401,  402,  403,  404,  405,  406,  407,  950,  408,
      409,  410,  411,  394,  394,  394,  394,  394,  394,  394,
      394,  932,  933, 1398,  934,  935, 1027, 1027, 1027, 1027,

     1027, 1027,  936, 1061, 1062,  792,  792, 1398,  937, 1063,
      938,  984,  984,  984,  984,  985,  986,  986,  987, 1051,
     1051,  932,  933,  791,  934,  935,  395,  395,  395,  395,
      395,  395,  936, 1061, 1062, 1398, 1398, 1052,  937, 1063,
      938,  983,  983,  983,  983,  983,  983,  983,  983,  983,
      983,  983,  983,  983,  983,  983,  983, 1064, 1398,  396,
      988,  988,  988,  988,  988,  988,  988,  988,  988,  988,
      988,  988,  988,  988,  988,  988, 1004, 1004, 1004, 1004,
     1004, 1004, 1004, 1004,  397,  398,  399, 1064,  400,  401,
      402,  403,  404,  405,  406,  407, 1398,  408,  409,  410,

      411,  748,  749,  750,  750,  751,  752,  752,  752,  752,
      752,  752,  752,  752,  752,  752,  752,  752,  752,  752,
      753,  753,  753,  753,  753,  754,  445,  679,  729, 1398,
     1398, 1398,  679,  729,  446,  447, 1398,  446,  446,  446,
      446,  446,  446,  446,  446,  448,  990,  990,  990,  990,
      990,  990,  990,  990,  990,  990,  990,  990,  990,  990,
      990,  990,  990,  990,  990,  998,  998,  998,  998,  998,
      998,  998,  998,  998, 1398, 1398, 1398, 1398,  450, 1398,
     1398, 1398,  679,  729, 1398, 1398, 1398,  679,  729, 1398,
     1398,  679,  729, 1043, 1043, 1043, 1043, 1043, 1043,  679,

      729, 1398,  679,  729,  679,  729,  449,  449,  449,  449,
      449,  449, 1398,  451, 1000, 1000, 1000, 1000, 1000, 1000,
     1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
     1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,  452,  453,
      454,  455,  456,  457,  458,  459,  460,  461,  462,  463,
     1398,  464,  465,  466,  467,  445, 1053, 1053, 1053, 1053,
     1053, 1053, 1398,  446,  447, 1398,  446,  446,  446,  446,
      446,  446,  446,  446,  448, 1002, 1002, 1002, 1002, 1002,
     1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002,
     1002, 1398,   93, 1007, 1007, 1007, 1007, 1007, 1007, 1007,

     1007, 1007, 1398, 1398, 1398, 1398, 1398,  450,   94, 1065,
       95,   95,   95,   95,   95,   95,   96,   97,   97,   97,
       97,   98,   99,   99,  100,  101,  101,  102, 1010, 1010,
     1010, 1010, 1010, 1010, 1010, 1010, 1010, 1398, 1398, 1065,
     1398, 1398,  451, 1398, 1135, 1135, 1398, 1011, 1011, 1011,
     1011, 1011, 1011, 1018, 1018, 1018, 1018, 1018, 1018, 1018,
     1018, 1018, 1134, 1398, 1398, 1398, 1398,  452,  453,  454,
      455,  456,  457,  458,  459,  460,  461,  462,  463, 1398,
      464,  465,  466,  467,  795,  796,  797,  797,  798,  799,
      799,  799,  799,  799,  799,  799,  799,  799,  799,  799,

      799,  799,  799,  800,  800,  800,  800,  800,  801,  498,
      498,  498,  498,  498,  498,  498,  498, 1020, 1020, 1020,
     1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020,
     1020, 1020, 1020, 1022, 1022, 1022, 1022, 1022, 1022, 1022,
     1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1027,
     1027, 1027, 1027, 1027, 1027, 1027, 1027, 1027, 1030, 1030,
     1030, 1030, 1030, 1030, 1030, 1030, 1030,  779,  779,  779,
      779,  779,  779,  779,  779, 1398, 1398, 1031, 1031, 1031,
     1031, 1031, 1031, 1066, 1035,  500, 1035, 1398, 1398, 1036,
     1036, 1036, 1036, 1036, 1036, 1036, 1036, 1037, 1398, 1037,

     1398, 1398, 1038, 1038, 1038, 1038, 1038, 1038, 1038, 1038,
      501,  502,  503, 1066,  504,  505,  506,  507,  508,  509,
      510,  511, 1067,  512,  513,  514,  515,  498,  498,  498,
      498,  498,  498,  498,  498,  776,  776,  776,  776,  776,
      776,  776,  776,  779,  779,  779,  779,  779,  779,  779,
      779, 1039, 1067, 1039,  777, 1398, 1040, 1040, 1040, 1040,
     1040, 1040, 1040, 1040,  781,  781,  781,  781,  781,  781,
      781,  781,  784,  784,  784,  784,  784,  784,  784,  784,
     1041, 1398, 1041,  782,  777, 1042, 1042, 1042, 1042, 1042,
     1042, 1042, 1042,  784,  784,  784,  784,  784,  784,  784,

      784, 1068, 1398,  500,  786,  786,  786,  786,  786,  786,
      786,  786, 1398,  782,  786,  786,  786,  786,  786,  786,
      786,  786,  499,  499,  499,  499,  499,  499,  501,  502,
      503, 1068,  504,  505,  506,  507,  508,  509,  510,  511,
     1398,  512,  513,  514,  515,  828,  829,  830,  830,  831,
      832,  832,  832,  832,  832,  832,  832,  832,  832,  832,
      832,  832,  832,  832,  833,  833,  833,  833,  833,  834,
      208,  209, 1398,  208,  208,  208,  208,  208,  208,  208,
      208,  210,  788,  788,  788,  788,  788,  788,  788,  788,
      788,  788,  788,  788,  788,  788,  788,  788,  448,  448,

      448,  448,  448,  448,  448,  448, 1398, 1398, 1398, 1398,
     1069, 1070, 1071,  448,  448,  448,  448,  448,  448, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1398, 1398,
     1398, 1046, 1046, 1046, 1046, 1046, 1046, 1046, 1046, 1046,
     1069, 1070, 1071,  448,  448,  448,  448,  448,  448,  218,
     1047, 1047, 1047, 1047, 1047, 1047, 1053, 1053, 1053, 1053,
     1053, 1053, 1053, 1053, 1053, 1135, 1135, 1135, 1135,  953,
     1135, 1398, 1398, 1398,  219,  220,  221,  222,  223,  224,
      225,  226,  227,  228,  229,  230, 1072,  231,  232,  233,
      234,  208,  209, 1398,  208,  208,  208,  208,  208,  208,

      208,  208,  210, 1056, 1056, 1056, 1056, 1056, 1056, 1056,
     1056, 1056, 1073, 1074, 1075, 1076, 1072, 1077, 1078, 1079,
     1080, 1081, 1057, 1057, 1057, 1057, 1057, 1057, 1082, 1083,
     1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1095,
     1398, 1096, 1073, 1074, 1075, 1076, 1097, 1077, 1078, 1079,
     1080, 1081, 1093, 1094, 1098, 1099, 1100, 1101, 1082, 1083,
     1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1095,
      218, 1096, 1361, 1398, 1398, 1398, 1097, 1102, 1398, 1398,
     1398, 1236, 1093, 1094, 1098, 1099, 1100, 1101, 1398, 1398,
     1237, 1398, 1398, 1103, 1104,  219,  220,  221,  222,  223,

      224,  225,  226,  227,  228,  229,  230, 1102,  231,  232,
      233,  234,  951,  952, 1105,  951,  951,  951,  951,  951,
      951,  951,  951, 1103, 1104, 1106, 1107, 1108, 1109, 1110,
     1111, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124,
     1125, 1122, 1126, 1127, 1105, 1128, 1129, 1130, 1131, 1132,
     1133, 1398, 1398, 1398, 1398, 1106, 1107, 1108, 1109, 1110,
     1111, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124,
     1125, 1122, 1126, 1127, 1398, 1128, 1129, 1130, 1131, 1132,
     1133, 1136, 1136, 1136, 1136, 1136, 1136, 1136, 1136, 1136,
     1398,  954, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148,

     1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1149, 1149,
     1149, 1149, 1150, 1151, 1151, 1152,  955,  956,  957,  958,
      959,  960,  961,  962,  963,  964,  965,  966, 1398,  967,
      968,  969,  970,  973,  974,  975,  975,  976,  977,  977,
      977,  977,  977,  977,  977,  977,  977,  977,  977,  977,
      977,  977,  978,  978,  978,  978,  978,  979,  680, 1153,
     1153, 1153, 1153, 1153, 1153, 1153, 1153, 1153, 1153, 1153,
     1153, 1153, 1153, 1153, 1153, 1155, 1155, 1155, 1155, 1155,
     1155, 1155, 1155, 1155, 1155, 1155, 1155, 1155, 1155, 1155,
     1155, 1155, 1155, 1155, 1157, 1157, 1157, 1157, 1157, 1157,

     1157, 1157, 1157, 1157, 1157, 1157, 1157, 1157, 1157, 1398,
     1398, 1398, 1398,  681,  649,  649,  649,  649,  649,  649,
     1160, 1160, 1160, 1160, 1160, 1160, 1160, 1160, 1160, 1036,
     1036, 1036, 1036, 1036, 1036, 1036, 1036, 1178, 1179, 1161,
     1161, 1161, 1161, 1161, 1161, 1036, 1036, 1036, 1036, 1036,
     1036, 1036, 1036, 1398, 1398,  682, 1038, 1038, 1038, 1038,
     1038, 1038, 1038, 1038, 1398, 1398, 1398, 1178, 1179, 1398,
     1398,  683, 1398,  684,  684,  684,  684,  684,  684,  685,
      686,  686,  686,  686,  687,  688,  688,  689,  690,  690,
      691,  995, 1038, 1038, 1038, 1038, 1038, 1038, 1038, 1038,

     1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040,
     1040, 1040, 1040, 1040, 1040, 1040, 1042, 1042, 1042, 1042,
     1042, 1042, 1042, 1042, 1042, 1042, 1042, 1042, 1042, 1042,
     1042, 1042, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187,
     1188, 1189, 1190, 1192, 1193, 1194,  681, 1195, 1196, 1197,
     1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1398, 1206,
     1207, 1208, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187,
     1188, 1189, 1190, 1192, 1193, 1194, 1398, 1195, 1196, 1197,
     1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205,  682, 1206,
     1207, 1208, 1398, 1398, 1398, 1209, 1210, 1214, 1215, 1216,

     1217, 1218, 1219, 1220,  683, 1221,  684,  684,  684,  684,
      684,  684,  685,  686,  686,  686,  686,  687,  688,  688,
      689,  690,  690,  691,  325, 1209, 1210, 1214, 1215, 1216,
     1217, 1218, 1219, 1220, 1222, 1221, 1223, 1224, 1225, 1226,
     1227, 1227, 1227, 1227, 1227, 1227, 1227, 1227, 1227, 1227,
     1227, 1227, 1227, 1227, 1227,  953,  953,  953,  953,  953,
      953, 1398, 1398, 1398, 1222, 1398, 1223, 1224, 1225, 1226,
     1230, 1230, 1230, 1230, 1230, 1230, 1230, 1230, 1230,   81,
      211, 1238,  211,  211,  211,  211,  211, 1248,  211, 1231,
     1231, 1231, 1231, 1231, 1231, 1239, 1243, 1244, 1249, 1242,

     1398, 1240, 1245,  211,  211,  211, 1251, 1398,  211, 1398,
      211, 1362,  211,  211,  211,  211,  211, 1248,  211, 1398,
     1398,   82, 1398, 1398, 1398, 1239, 1243, 1244, 1249, 1242,
     1250, 1240, 1245,  211,  211,  211, 1251,   83,  211,   84,
       84,   84,   84,   84,   84,   85,   86,   86,   86,   86,
       87,   88,   88,   89,   90,   90,   91,  345,  345,  345,
      345,  345,  345,  345,  345, 1246, 1246, 1246, 1246,  211,
      211, 1247, 1252, 1252, 1252, 1252,  211, 1254, 1253,  211,
      211,  211,  211, 1260, 1255,  211,  211,  211, 1261,  211,
     1256, 1262,  211,  211,  211, 1257, 1258, 1259,  211,  211,

      211,  211,  211, 1398, 1266,  211,  211, 1254,  211,  211,
      211,  211,  211, 1260, 1255,  211,  211,  211, 1261,  211,
     1256, 1262,  211,  211,  211, 1257, 1258, 1259,  211, 1398,
     1398,  211,  211,  347, 1266,  211, 1398, 1398,  211, 1398,
      211, 1332, 1332, 1332, 1332, 1332, 1332, 1332, 1332, 1332,
     1398, 1398, 1398, 1398, 1263, 1398,  211,  211,  348,  349,
      350, 1398,  351,  352,  353,  354,  355,  356,  357,  358,
      211,  359,  360,  361,  362,  345,  345,  345,  345,  345,
      345,  345,  345,  211, 1263,  211,  211,  211,  211,  211,
     1267,  211,  211,  211,  211,  211, 1270,  211, 1264,  211,

     1272, 1265,  211, 1268, 1269,  211,  211,  211, 1271,  211,
      211, 1274,  211,  211,  211,  211, 1273, 1278,  211,  211,
     1267,  211,  211,  211,  211,  211, 1270,  211, 1264,  211,
     1272, 1265,  211, 1268, 1269,  211,  211,  211, 1271,  211,
      211, 1274,  211,  211,  211, 1277, 1273, 1278, 1398,  211,
     1398,  347, 1398, 1398, 1398, 1398, 1398, 1398,  211, 1398,
     1398, 1398, 1398, 1398, 1279,  211, 1398, 1280, 1246, 1246,
     1246, 1246, 1398,  211, 1247, 1277,  348,  349,  350,  211,
      351,  352,  353,  354,  355,  356,  357,  358,  211,  359,
      360,  361,  362,  730, 1279,  211,  211, 1280,  993,  211,

      211, 1275,  994, 1296,  211, 1281, 1276,  211, 1310, 1294,
      211, 1297, 1295, 1252, 1252, 1252, 1252, 1312,  211, 1253,
     1398, 1398, 1398, 1282, 1398, 1398,  211, 1398, 1398,  211,
      211, 1398, 1398, 1296,  211, 1281, 1284,  211, 1310, 1294,
      211, 1297, 1295,  731,  211,  211,  211, 1312,  211,  211,
     1298, 1311, 1285, 1282, 1286, 1286, 1286, 1286, 1286, 1286,
     1287, 1288, 1288, 1288, 1288, 1289, 1290, 1290, 1291, 1292,
     1292, 1293, 1398, 1398,  211,  211,  211, 1398, 1398,  211,
     1298, 1311, 1398, 1398, 1398,  732, 1398, 1398, 1398, 1398,
     1398, 1398, 1398,  211,  211,  211,  211,  211,  211, 1398,

      211,  733, 1313,  734,  734,  734,  734,  734,  734,  735,
      736,  736,  736,  736,  737,  738,  738,  739,  740,  740,
      741, 1015, 1300,  211,  211,  211,  211,  211,  211,  211,
      211, 1398, 1313,  211,  211, 1319, 1320,  211, 1301, 1314,
     1302, 1302, 1302, 1302, 1302, 1302, 1303, 1304, 1304, 1304,
     1304, 1305, 1306, 1306, 1307, 1308, 1308, 1309,  211,  211,
      211,  211,  211,  211,  211, 1319, 1320,  211,  211, 1314,
     1315,  731,  211, 1324, 1316, 1317, 1325,  211, 1318,  211,
     1341,  211, 1355, 1398, 1323, 1398, 1398, 1398,  211, 1398,
      211,  211,  211, 1339,  211,  211,  211,  211,  211, 1398,

     1315, 1398,  211, 1324, 1316, 1317, 1325,  211, 1318,  211,
     1341,  211, 1355,  732, 1323, 1338, 1338, 1338, 1338, 1338,
     1338, 1338, 1338, 1339,  211,  211,  211,  211, 1398,  733,
     1398,  734,  734,  734,  734,  734,  734,  735,  736,  736,
      736,  736,  737,  738,  738,  739,  740,  740,  741,  383,
     1334, 1334, 1334, 1334, 1334, 1334, 1334, 1334, 1334, 1334,
     1334, 1334, 1334, 1334, 1334, 1334, 1336, 1336, 1336, 1336,
     1336, 1336, 1336, 1336, 1336, 1336, 1336, 1336, 1336, 1336,
     1336, 1336,  211, 1347, 1347, 1347, 1347, 1347, 1347, 1347,
     1347, 1347,  211, 1340, 1398, 1398, 1398, 1398, 1398,  121,

     1353, 1353, 1353, 1353, 1353, 1353, 1353, 1353, 1398, 1398,
      211, 1398,  211,  211,  211, 1363, 1358, 1364, 1356, 1354,
      211, 1360,  211, 1340, 1349, 1349, 1349, 1349, 1349, 1349,
     1349, 1349, 1349, 1349, 1349, 1349, 1349, 1349, 1349, 1349,
      211,  122, 1398,  211,  211, 1363, 1358, 1364, 1356, 1354,
      211, 1360, 1398, 1398, 1398, 1398, 1398,  123, 1398,  124,
      124,  124,  124,  124,  124,  125,  126,  126,  126,  126,
      127,  128,  128,  129,  130,  130,  131,  394,  394,  394,
      394,  394,  394,  394,  394, 1351, 1351, 1351, 1351, 1351,
     1351, 1351, 1351, 1351, 1351, 1351, 1351, 1351, 1351, 1351,

     1351,  211,  211, 1365, 1366,  211, 1372, 1373, 1374,  211,
      211,  211,  211, 1379,  211, 1357,  211, 1359,  211, 1371,
      211,  211, 1380, 1398, 1381, 1283, 1398, 1386, 1385,  211,
      211,  211,  211, 1365, 1366,  211, 1372, 1373, 1374,  211,
      211,  211,  211, 1379,  211, 1357,  211, 1359,  211, 1371,
      211,  211, 1380,  396, 1381, 1283, 1384, 1386, 1385,  211,
      211, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1387, 1389,  211, 1398, 1390,  397,  398,
      399, 1283,  400,  401,  402,  403,  404,  405,  406,  407,
     1388,  408,  409,  410,  411,  394,  394,  394,  394,  394,

      394,  394,  394, 1387, 1389,  211, 1283, 1390,  211, 1394,
      211, 1283, 1275, 1276,  211, 1283, 1395,  211, 1391,  211,
     1388, 1283,  211,  211, 1398, 1392, 1393, 1398, 1397, 1398,
     1398, 1396, 1398, 1398, 1398, 1398, 1283, 1398,  211, 1394,
      211, 1398, 1398, 1398,  211, 1283, 1395,  211, 1391,  211,
     1398, 1283,  211,  211, 1398, 1392, 1393, 1398, 1397, 1398,
     1398, 1396, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398,  396, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398,  397,  398,  399, 1398,

      400,  401,  402,  403,  404,  405,  406,  407, 1398,  408,
      409,  410,  411,  445, 1398, 1398, 1398, 1398, 1398, 1398,
     1398,  446,  447, 1398,  446,  446,  446,  446,  446,  446,
      446,  446,  448, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398,  450, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

      451, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398,  452,  453,  454,  455,  456,
      457,  458,  459,  460,  461,  462,  463, 1398,  464,  465,
      466,  467,  445, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
      446,  447, 1398,  446,  446,  446,  446,  446,  446,  446,
      446,  448, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398,  450, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,  451,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398,  452,  453,  454,  455,  456,  457,
      458,  459,  460,  461,  462,  463, 1398,  464,  465,  466,
      467,  180, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398,  181, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,  182, 1398,
      183,  183,  183,  183,  183,  183,  184,  185,  185,  185,
      185,  186,  187,  187,  188,  189,  189,  190,  498,  498,
      498,  498,  498,  498,  498,  498, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398,  500, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,  501,
      502,  503, 1398,  504,  505,  506,  507,  508,  509,  510,
      511, 1398,  512,  513,  514,  515,  498,  498,  498,  498,

      498,  498,  498,  498, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398,  500, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398,  501,  502,  503,

     1398,  504,  505,  506,  507,  508,  509,  510,  511, 1398,
      512,  513,  514,  515,  208,  209, 1398,  208,  208,  208,
      208,  208,  208,  208,  208,  210, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398,  218, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,  219,  220,
      221,  222,  223,  224,  225,  226,  227,  228,  229,  230,
     1398,  231,  232,  233,  234,  208,  209, 1398,  208,  208,
      208,  208,  208,  208,  208,  208,  210, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398,  218, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,  219,
      220,  221,  222,  223,  224,  225,  226,  227,  228,  229,
      230, 1398,  231,  232,  233,  234,  951,  952, 1398,  951,
      951,  951,  951,  951,  951,  951,  951, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398,  954, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
      955,  956,  957,  958,  959,  960,  961,  962,  963,  964,
      965,  966, 1398,  967,  968,  969,  970,  951,  952, 1398,
      951,  951,  951,  951,  951,  951,  951,  951, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398,  954, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398,  955,  956,  957,  958,  959,  960,  961,  962,  963,
      964,  965,  966, 1398,  967,  968,  969,  970, 1138, 1139,

     1140, 1140, 1141, 1142, 1142, 1142, 1142, 1142, 1142, 1142,
     1142, 1142, 1142, 1142, 1142, 1142, 1142, 1143, 1143, 1143,
     1143, 1143, 1144,  208,  209, 1398,  208,  208,  208,  208,
      208,  208,  208,  208,  210, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1165, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398,  218, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398,  219,  220,  221,
      222,  223,  224,  225,  226,  227,  228,  229,  230, 1398,
      231,  232,  233,  234,  208,  209, 1398,  208,  208,  208,
      208,  208,  208,  208,  208,  210, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398,  218, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,  219,  220,
      221,  222,  223,  224,  225,  226,  227,  228,  229,  230,
     1398,  231,  232,  233,  234,  548,  549,  550,  550,  551,
      552,  552,  552,  552,  552,  552,  552, 1166,  552,  552,
      552,  552,  552,  552,  553,  553,  553,  553,  553,  554,
     1168, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398,  681, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398,  682, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398,  683, 1398,  684,  684,  684,  684,  684,
      684,  685,  686,  686,  686,  686,  687,  688,  688,  689,
      690,  690,  691,  345,  345,  345,  345,  345,  345,  345,
      345, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,  347,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398,  348,  349,  350, 1398,  351,  352,
      353,  354,  355,  356,  357,  358, 1398,  359,  360,  361,
      362,  345,  345,  345,  345,  345,  345,  345,  345, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398,  347, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398,  348,  349,  350, 1398,  351,  352,  353,  354,
      355,  356,  357,  358, 1398,  359,  360,  361,  362, 1173,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,  731,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398,  732, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398,  733, 1398,  734,
      734,  734,  734,  734,  734,  735,  736,  736,  736,  736,
      737,  738,  738,  739,  740,  740,  741,  394,  394,  394,
      394,  394,  394,  394,  394, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398,  396, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,  397,  398,
      399, 1398,  400,  401,  402,  403,  404,  405,  406,  407,

     1398,  408,  409,  410,  411,  394,  394,  394,  394,  394,
      394,  394,  394, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398,  396, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398,  397,  398,  399, 1398,
      400,  401,  402,  403,  404,  405,  406,  407, 1398,  408,
      409,  410,  411,  445, 1398, 1398, 1398, 1398, 1398, 1398,
     1398,  446,  447, 1398,  446,  446,  446,  446,  446,  446,
      446,  446,  448, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398,  450, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
      451, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398,  452,  453,  454,  455,  456,
      457,  458,  459,  460,  461,  462,  463, 1398,  464,  465,
      466,  467,  445, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
      446,  447, 1398,  446,  446,  446,  446,  446,  446,  446,
      446,  448, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398,  450, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,  451,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398,  452,  453,  454,  455,  456,  457,
      458,  459,  460,  461,  462,  463, 1398,  464,  465,  466,
      467,  498,  498,  498,  498,  498,  498,  498,  498, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398,  500, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398,  501,  502,  503, 1398,  504,  505,  506,  507,
      508,  509,  510,  511, 1398,  512,  513,  514,  515,  498,

      498,  498,  498,  498,  498,  498,  498, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398,  500, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

      501,  502,  503, 1398,  504,  505,  506,  507,  508,  509,
      510,  511, 1398,  512,  513,  514,  515,  208,  209, 1398,
      208,  208,  208,  208,  208,  208,  208,  208,  210, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398,  218, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398,  219,  220,  221,  222,  223,  224,  225,  226,  227,
      228,  229,  230, 1398,  231,  232,  233,  234,  208,  209,
     1398,  208,  208,  208,  208,  208,  208,  208,  208,  210,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398,  218, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398,  219,  220,  221,  222,  223,  224,  225,  226,
      227,  228,  229,  230, 1398,  231,  232,  233,  234,  951,
      952, 1398,  951,  951,  951,  951,  951,  951,  951,  951,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,  954, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398,  955,  956,  957,  958,  959,  960,  961,
      962,  963,  964,  965,  966, 1398,  967,  968,  969,  970,
      951,  952, 1398,  951,  951,  951,  951,  951,  951,  951,
      951, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,  954,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398,  955,  956,  957,  958,  959,  960,
      961,  962,  963,  964,  965,  966, 1398,  967,  968,  969,

      970,  951,  952, 1398,  951,  951,  951,  951,  951,  951,
      951,  951, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
      954, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398,  955,  956,  957,  958,  959,
      960,  961,  962,  963,  964,  965,  966, 1398,  967,  968,
      969,  970,  208,  209, 1398,  208,  208,  208,  208,  208,
      208,  208,  208,  210, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398,  218, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398,  219,  220,  221,  222,
      223,  224,  225,  226,  227,  228,  229,  230, 1398,  231,
      232,  233,  234,  680, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,  681, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
      682, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398,  683, 1398,  684,  684,
      684,  684,  684,  684,  685,  686,  686,  686,  686,  687,
      688,  688,  689,  690,  690,  691,  730, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398,  731, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,  732, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398,  733, 1398,  734,  734,  734,  734,
      734,  734,  735,  736,  736,  736,  736,  737,  738,  738,

      739,  740,  740,  741,  208,  209, 1398,  208,  208,  208,
      208,  208,  208,  208,  208,  210, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1241, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1241, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398,  218, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,  219,  220,
      221,  222,  223,  224,  225,  226,  227,  228,  229,  230,
     1398,  231,  232,  233,  234,  548,  549,  550,  550,  551,
      552,  552,  552,  552,  552,  552,  552, 1321,  552,  552,
      552,  552,  552,  552,  553,  553,  553,  553,  553,  554,
     1326, 1246, 1246, 1326, 1398, 1398, 1327, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1328, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1329, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1328, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1329, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1284, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1285, 1398,
     1286, 1286, 1286, 1286, 1286, 1286, 1287, 1288, 1288, 1288,
     1288, 1289, 1290, 1290, 1291, 1292, 1292, 1293, 1342, 1252,
     1252, 1342, 1398, 1398, 1343, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1344, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1344, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1300, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1301, 1398, 1302, 1302,
     1302, 1302, 1302, 1302, 1303, 1304, 1304, 1304, 1304, 1305,
     1306, 1306, 1307, 1308, 1308, 1309, 1326, 1246, 1246, 1326,
     1398, 1398, 1327, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1328, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1329, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1328, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1329, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1284, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1285, 1398, 1286, 1286, 1286, 1286,
     1286, 1286, 1287, 1288, 1288, 1288, 1288, 1289, 1290, 1290,
     1291, 1292, 1292, 1293, 1326, 1246, 1246, 1326, 1398, 1398,
     1327, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1328, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1329,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1328, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1329,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1284, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1285, 1398, 1286, 1286, 1286, 1286, 1286, 1286,
     1287, 1288, 1288, 1288, 1288, 1289, 1290, 1290, 1291, 1292,

     1292, 1293, 1342, 1252, 1252, 1342, 1398, 1398, 1343, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1344,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1344,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1300, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1301, 1398, 1302, 1302, 1302, 1302, 1302, 1302, 1303, 1304,
     1304, 1304, 1304, 1305, 1306, 1306, 1307, 1308, 1308, 1309,
     1342, 1252, 1252, 1342, 1398, 1398, 1343, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1344, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1344, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1300, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1301, 1398,
     1302, 1302, 1302, 1302, 1302, 1302, 1303, 1304, 1304, 1304,
     1304, 1305, 1306, 1306, 1307, 1308, 1308, 1309, 1326, 1246,
     1246, 1326, 1398, 1398, 1327, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1328, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1382, 1398, 1398, 1329, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1328, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1382, 1398, 1398, 1329, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1284, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1285, 1398, 1286, 1286,

     1286, 1286, 1286, 1286, 1287, 1288, 1288, 1288, 1288, 1289,
     1290, 1290, 1291, 1292, 1292, 1293, 1326, 1246, 1246, 1326,
     1398, 1398, 1327, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1328, 1383, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1329, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1328, 1383, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1329, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1284, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1285, 1398, 1286, 1286, 1286, 1286,
     1286, 1286, 1287, 1288, 1288, 1288, 1288, 1289, 1290, 1290,
     1291, 1292, 1292, 1293,   79, 1398,   79,   79,   79,   79,
       79,   79,   79,   79,   79, 1398, 1398,   79, 1398, 1398,
       79, 1398,   79,   92, 1398,   92,   92,   92,   92,   92,
       92,   92,   92,   92, 1398, 1398,   92, 1398, 1398,   92,
     1398,   92,  103, 1398,  103, 1398,  103,  119, 1398,  119,

      119,  119,  119,  119,  119,  119,  119,  119, 1398, 1398,
      119, 1398, 1398,  119, 1398,  119,  134, 1398,  134, 1398,
      134,  162, 1398, 1398,  162,  162,  162,  162,  162,  178,
      178,  178,  178,  178,  178,  178, 1398,  178, 1398, 1398,
      178, 1398, 1398,  178, 1398,  178,  192, 1398,  192, 1398,
      192,  303,  303,  303, 1398,  303,  303,  305,  305,  305,
      305,  305,  305,  315,  315,  315,  315,  315,  315,  316,
      316,  316,  316,  316,  316,  323,  323,  323,  323,  323,
      323,   79, 1398,   79,   79,   79,   79,   79,   79,   79,
       79,   79, 1398, 1398,   79, 1398, 1398,   79, 1398,   79,

      327,  327,  327,  327,  327,  328,  328,  328,  328,   79,
       79,   79,   79,   79,   79,  330,  330,  330,  330,  330,
      330,  332,  332,  332,  332,  332,  332,  334,  334,  334,
      334,  334,  334,   92, 1398,   92,   92,   92,   92,   92,
       92,   92,   92,   92, 1398, 1398,   92, 1398, 1398,   92,
     1398,   92,  336,  336,  336,  336,  336,  337,  337,  337,
      337,   92,   92,   92,   92,   92,   92,  339,  339,  339,
      339,  339,  339,  341,  341,  341,  341,  341,  341,  343,
      343,  343,  343,  343,  343,  346, 1398,  346, 1398,  346,
     1398,  346, 1398, 1398, 1398, 1398, 1398,  346,  103,  103,

      103, 1398,  103,  103,  364,  364,  364,  364,  364,  364,
      373,  373,  373,  373,  373,  373,  374,  374,  374,  374,
      374,  374,  381,  381,  381,  381,  381,  381,  119, 1398,
      119,  119,  119,  119,  119,  119,  119,  119,  119, 1398,
     1398,  119, 1398, 1398,  119, 1398,  119,  385,  385,  385,
      385,  385,  386,  386,  386,  386,  119,  119,  119,  119,
      119,  119,  388,  388,  388,  388,  388,  388,  390,  390,
      390,  390,  390,  390,  392,  392,  392,  392,  392,  392,
      395, 1398,  395, 1398,  395, 1398,  395, 1398, 1398, 1398,
     1398, 1398,  395,  134,  134,  134, 1398,  134,  134,  413,

      413,  413,  413,  413,  413,  422,  422,  422,  422,  422,
      422,  423,  423,  423,  423,  423,  423,  430,  430,  430,
      430,  430,  430,  449,  449,  449,  449,  449,  449,  449,
      449, 1398,  449, 1398, 1398, 1398, 1398, 1398,  449,  162,
      162,  162, 1398,  162,  162,  470,  470,  470,  470,  470,
      470,  479,  479,  479,  479,  479,  479,  480,  480,  480,
      480,  480,  480,  487,  487,  487,  487,  487,  487,  178,
      178,  178,  178,  178,  178,  178, 1398,  178, 1398, 1398,
      178, 1398, 1398,  178, 1398,  178,  489,  489,  489,  489,
      489,  490,  490,  490,  490,  178,  178,  178,  178,  178,

      178,  492,  492,  492,  492,  492,  492,  494,  494,  494,
      494,  494,  494,  496,  496,  496,  496,  496,  496,  499,
     1398,  499, 1398,  499, 1398,  499, 1398, 1398, 1398, 1398,
     1398,  499,  192,  192,  192, 1398,  192,  192,  517,  517,
      517,  517,  517,  517,  526,  526,  526,  526,  526,  526,
      527,  527,  527,  527,  527,  527,  534,  534,  534,  534,
      534,  534,  211,  211,  211,  211,  211, 1398,  211, 1398,
      211, 1398, 1398, 1398, 1398, 1398,  211,  162, 1398, 1398,
      162,  162,  162,  162,  162,  211,  211,  211, 1398,  211,
      211,  544,  544,  544,  544,  544,  544,  547,  547,  547,

      547,  547,  547,  556,  556,  556,  556,  556,  556,  557,
      557,  557,  557,  557,  557,  564,  564,  564,  564,  564,
      564,  649, 1398,  649, 1398,  649,  303,  303,  303,  303,
      303,  303,  666,  666,  666,  666,  666,  666,  667,  667,
      667,  667,  667,  667,  672,  672,  672,  672,  672,  672,
      673,  673,  673,  673,  673,  673,  674,  674,  674,  674,
      674,  674,  675,  675,  675,  675,  675,  675,  676,  676,
      676,  676,  676,  676,  677,  677,  677,  677,  677,  677,
      678,  678,  678,  678,  678,  678,  679,  679,  679,  679,
      679,  679,  679,  679,  679,  679,  679, 1398, 1398,  679,

     1398, 1398,  679, 1398,  679,  328,  328,  328,  328,  328,
      328,   79,   79,   79,   79,   79,   79,  692,  692,  692,
      692,  692,  692,  693,  693,  693,  693,  693,  693,  694,
      694,  694,  694,  694,  694,  695,  695,  695,  695,  695,
      695,  337,  337,  337,  337,  337,  337,   92,   92,   92,
       92,   92,   92,  696,  696,  696,  696,  696,  696,  697,
      697,  697,  697,  697,  697,  698,  698,  698,  698,  698,
      698,  699,  699,  699,  699,  699,  699,  346, 1398,  346,
     1398,  346, 1398,  346, 1398, 1398, 1398, 1398, 1398,  346,
      346,  346,  346, 1398,  346,  346,  345,  345,  345,  345,

     1398,  345,  701,  701,  701,  701,  701,  701,  710,  710,
      710,  710,  710,  710,  711,  711,  711,  711,  711,  711,
      718,  718,  718,  718,  718,  718,  103,  103,  103,  103,
      103,  103,  720,  720,  720,  720,  720,  720,  721,  721,
      721,  721,  721,  721,  722,  722,  722,  722,  722,  722,
      723,  723,  723,  723,  723,  723,  724,  724,  724,  724,
      724,  724,  725,  725,  725,  725,  725,  725,  726,  726,
      726,  726,  726,  726,  727,  727,  727,  727,  727,  727,
      728,  728,  728,  728,  728,  728,  729,  729,  729,  729,
      729,  729,  729,  729,  729,  729,  729, 1398, 1398,  729,

     1398, 1398,  729, 1398,  729,  386,  386,  386,  386,  386,
      386,  119,  119,  119,  119,  119,  119,  742,  742,  742,
      742,  742,  742,  743,  743,  743,  743,  743,  743,  744,
      744,  744,  744,  744,  744,  745,  745,  745,  745,  745,
      745,  395, 1398,  395, 1398,  395, 1398,  395, 1398, 1398,
     1398, 1398, 1398,  395,  395,  395,  395, 1398,  395,  395,
      394,  394,  394,  394, 1398,  394,  747,  747,  747,  747,
      747,  747,  756,  756,  756,  756,  756,  756,  757,  757,
      757,  757,  757,  757,  764,  764,  764,  764,  764,  764,
      134,  134,  134,  134,  134,  134,  766,  766,  766,  766,

      766,  766,  767,  767,  767,  767,  767,  767,  768,  768,
      768,  768,  768,  768,  769,  769,  769,  769,  769,  769,
      770,  770,  770,  770,  770,  770,  771,  771,  771,  771,
      771,  771,  772,  772,  772,  772,  772,  772,  773,  773,
      773,  773,  773,  773,  774,  774,  774,  774,  774,  774,
      449,  449,  449,  449,  449,  449,  449,  449, 1398,  449,
     1398, 1398, 1398, 1398, 1398,  449,  449,  449,  449, 1398,
      449,  449,  791,  791,  791,  791,  791,  791,  794,  794,
      794,  794,  794,  794,  803,  803,  803,  803,  803,  803,
      804,  804,  804,  804,  804,  804,  811,  811,  811,  811,

      811,  811,  162,  162,  162,  162,  162,  162,  813,  813,
      813,  813,  813,  813,  814,  814,  814,  814,  814,  814,
      815,  815,  815,  815,  815,  815,  816,  816,  816,  816,
      816,  816,  817,  817,  817,  817,  817,  817,  818,  818,
      818,  818,  818,  818,  819,  819,  819,  819,  819,  819,
      820,  820,  820,  820,  820,  820,  821,  821,  821,  821,
      821,  821,  490,  490,  490,  490,  490,  490,  178,  178,
      178,  178,  178,  178,  822,  822,  822,  822,  822,  822,
      823,  823,  823,  823,  823,  823,  824,  824,  824,  824,
      824,  824,  825,  825,  825,  825,  825,  825,  499, 1398,

      499, 1398,  499, 1398,  499, 1398, 1398, 1398, 1398, 1398,
      499,  499,  499,  499, 1398,  499,  499,  498,  498,  498,
      498, 1398,  498,  827,  827,  827,  827,  827,  827,  836,
      836,  836,  836,  836,  836,  837,  837,  837,  837,  837,
      837,  844,  844,  844,  844,  844,  844,  192,  192,  192,
      192,  192,  192,  846,  846,  846,  846,  846,  846,  847,
      847,  847,  847,  847,  847,  848,  848,  848,  848,  848,
      848,  849,  849,  849,  849,  849,  849,  850,  850,  850,
      850,  850,  850,  851,  851,  851,  851,  851,  851,  852,
      852,  852,  852,  852,  852,  853,  853,  853,  853,  853,

      853,  854,  854,  854,  854,  854,  854,  211,  211,  211,
      211,  211, 1398,  211, 1398,  211, 1398, 1398, 1398, 1398,
     1398,  211,  211,  211,  211,  211,  211,  211,  545,  545,
      545,  545,  545,  545,  856,  856,  856,  856,  856,  856,
      857,  857,  857,  857,  857,  857,  858,  858,  858,  858,
      858,  858,  859,  859,  859,  859,  859,  859,  860,  860,
      860,  860,  860,  860,  861,  861,  861,  861,  861,  861,
      862,  862,  862,  862,  862,  862,  863,  863,  863,  863,
      863,  863,  953,  953,  953, 1398,  953, 1398,  953, 1398,
      953, 1398, 1398, 1398, 1398, 1398,  953,  649,  649,  649,

     1398,  649,  649,  972,  972,  972,  972,  972,  972,  981,
      981,  981,  981,  981,  981,  982,  982,  982,  982,  982,
      982,  989,  989,  989,  989,  989,  989,  303,  303,  303,
      303,  303,  303,  679,  679,  679,  679,  679,  679,  679,
      679,  679,  679,  679, 1398, 1398,  679, 1398, 1398,  679,
     1398,  679,  996,  996,  996,  996,  996,  997,  997,  997,
      997,  679,  679,  679,  679,  679,  679,  999,  999,  999,
      999,  999,  999, 1001, 1001, 1001, 1001, 1001, 1001, 1003,
     1003, 1003, 1003, 1003, 1003,   79, 1398,   79,   79,   79,
       79,   79,   79,   79,   79,   79, 1398, 1398,   79, 1398,

     1398,   79, 1398,   79,   79,   79,   79,   79,   79,   79,
      328,  328,  328,  328,  328,  328,   92, 1398,   92,   92,
       92,   92,   92,   92,   92,   92,   92, 1398, 1398,   92,
     1398, 1398,   92, 1398,   92,   92,   92,   92,   92,   92,
       92,  337,  337,  337,  337,  337,  337,  346,  346,  346,
      346,  346,  346, 1005, 1005, 1005, 1005, 1005, 1005, 1007,
     1007, 1007, 1007, 1007, 1007, 1008, 1008, 1008, 1008, 1008,
     1008, 1009, 1009, 1009, 1009, 1009, 1009, 1010, 1010, 1010,
     1010, 1010, 1010, 1011, 1011, 1011, 1011, 1011, 1011, 1012,
     1012, 1012, 1012, 1012, 1012, 1013, 1013, 1013, 1013, 1013,

     1013, 1014, 1014, 1014, 1014, 1014, 1014,  346, 1398,  346,
     1398,  346, 1398,  346, 1398, 1398, 1398, 1398, 1398,  346,
      103,  103,  103,  103,  103,  103,  729,  729,  729,  729,
      729,  729,  729,  729,  729,  729,  729, 1398, 1398,  729,
     1398, 1398,  729, 1398,  729, 1016, 1016, 1016, 1016, 1016,
     1017, 1017, 1017, 1017,  729,  729,  729,  729,  729,  729,
     1019, 1019, 1019, 1019, 1019, 1019, 1021, 1021, 1021, 1021,
     1021, 1021, 1023, 1023, 1023, 1023, 1023, 1023,  119, 1398,
      119,  119,  119,  119,  119,  119,  119,  119,  119, 1398,
     1398,  119, 1398, 1398,  119, 1398,  119,  119,  119,  119,

      119,  119,  119,  386,  386,  386,  386,  386,  386,  395,
      395,  395,  395,  395,  395, 1025, 1025, 1025, 1025, 1025,
     1025, 1027, 1027, 1027, 1027, 1027, 1027, 1028, 1028, 1028,
     1028, 1028, 1028, 1029, 1029, 1029, 1029, 1029, 1029, 1030,
     1030, 1030, 1030, 1030, 1030, 1031, 1031, 1031, 1031, 1031,
     1031, 1032, 1032, 1032, 1032, 1032, 1032, 1033, 1033, 1033,
     1033, 1033, 1033, 1034, 1034, 1034, 1034, 1034, 1034,  395,
     1398,  395, 1398,  395, 1398,  395, 1398, 1398, 1398, 1398,
     1398,  395,  134,  134,  134,  134,  134,  134,  449,  449,
      449,  449,  449,  449,  449,  449, 1398,  449, 1398, 1398,

     1398, 1398, 1398,  449,  449,  449,  449,  449,  449,  449,
      792,  792,  792,  792,  792,  792, 1043, 1043, 1043, 1043,
     1043, 1043, 1044, 1044, 1044, 1044, 1044, 1044, 1045, 1045,
     1045, 1045, 1045, 1045, 1046, 1046, 1046, 1046, 1046, 1046,
     1047, 1047, 1047, 1047, 1047, 1047, 1048, 1048, 1048, 1048,
     1048, 1048, 1049, 1049, 1049, 1049, 1049, 1049, 1050, 1050,
     1050, 1050, 1050, 1050,  162,  162,  162,  162,  162,  162,
      178,  178,  178,  178,  178,  178,  178, 1398,  178, 1398,
     1398,  178, 1398, 1398,  178, 1398,  178,  178,  178,  178,
      178,  178,  178,  490,  490,  490,  490,  490,  490,  499,

      499,  499,  499,  499,  499, 1051, 1051, 1051, 1051, 1051,
     1051, 1053, 1053, 1053, 1053, 1053, 1053, 1054, 1054, 1054,
     1054, 1054, 1054, 1055, 1055, 1055, 1055, 1055, 1055, 1056,
     1056, 1056, 1056, 1056, 1056, 1057, 1057, 1057, 1057, 1057,
     1057, 1058, 1058, 1058, 1058, 1058, 1058, 1059, 1059, 1059,
     1059, 1059, 1059, 1060, 1060, 1060, 1060, 1060, 1060,  499,
     1398,  499, 1398,  499, 1398,  499, 1398, 1398, 1398, 1398,
     1398,  499,  192,  192,  192,  192,  192,  192,  855, 1398,
      855, 1398,  855,  211,  211,  211,  211,  211, 1398,  211,
     1398,  211, 1398, 1398, 1398, 1398, 1398,  211,  211,  211,

      211,  211,  211,  211,  953,  953,  953, 1398,  953, 1398,
      953, 1398,  953, 1398, 1398, 1398, 1398, 1398,  953,  953,
      953,  953, 1398,  953,  953, 1134, 1134, 1134, 1134, 1134,
     1134, 1137, 1137, 1137, 1137, 1137, 1137, 1146, 1146, 1146,
     1146, 1146, 1146, 1147, 1147, 1147, 1147, 1147, 1147, 1154,
     1154, 1154, 1154, 1154, 1154,  649,  649,  649,  649,  649,
      649, 1156, 1156, 1156, 1156, 1156, 1156, 1157, 1157, 1157,
     1157, 1157, 1157, 1158, 1158, 1158, 1158, 1158, 1158, 1159,
     1159, 1159, 1159, 1159, 1159, 1160, 1160, 1160, 1160, 1160,
     1160, 1161, 1161, 1161, 1161, 1161, 1161, 1162, 1162, 1162,

     1162, 1162, 1162, 1163, 1163, 1163, 1163, 1163, 1163, 1164,
     1164, 1164, 1164, 1164, 1164,  211,  211,  211,  211,  211,
     1398,  211, 1398,  211, 1398, 1398, 1398, 1398, 1398,  211,
      679,  679,  679,  679,  679,  679,  679,  679,  679,  679,
      679, 1398, 1398,  679, 1398, 1398,  679, 1398,  679,  997,
      997,  997,  997,  997,  997,  679,  679,  679,  679,  679,
      679, 1169, 1169, 1169, 1169, 1169, 1169, 1170, 1170, 1170,
     1170, 1170, 1170, 1171, 1171, 1171, 1171, 1171, 1171, 1172,
     1172, 1172, 1172, 1172, 1172,  346, 1398,  346, 1398,  346,
     1398,  346, 1398, 1398, 1398, 1398, 1398,  346,  346,  346,

      346,  346,  346,  346,  729,  729,  729,  729,  729,  729,
      729,  729,  729,  729,  729, 1398, 1398,  729, 1398, 1398,
      729, 1398,  729, 1017, 1017, 1017, 1017, 1017, 1017,  729,
      729,  729,  729,  729,  729, 1174, 1174, 1174, 1174, 1174,
     1174, 1175, 1175, 1175, 1175, 1175, 1175, 1176, 1176, 1176,
     1176, 1176, 1176, 1177, 1177, 1177, 1177, 1177, 1177,  395,
     1398,  395, 1398,  395, 1398,  395, 1398, 1398, 1398, 1398,
     1398,  395,  395,  395,  395,  395,  395,  395,  449,  449,
      449,  449,  449,  449,  449,  449, 1398,  449, 1398, 1398,
     1398, 1398, 1398,  449,  449,  449,  449,  449,  449,  449,

      499, 1398,  499, 1398,  499, 1398,  499, 1398, 1398, 1398,
     1398, 1398,  499,  499,  499,  499,  499,  499,  499,  211,
      211,  211,  211,  211, 1398,  211, 1398,  211, 1398, 1398,
     1398, 1398, 1398,  211,  953,  953,  953, 1398,  953, 1398,
      953, 1398,  953, 1398, 1398, 1398, 1398, 1398,  953,  953,
      953,  953,  953,  953,  953, 1135, 1135, 1135, 1135, 1135,
     1135, 1227, 1227, 1227, 1227, 1227, 1227, 1228, 1228, 1228,
     1228, 1228, 1228, 1229, 1229, 1229, 1229, 1229, 1229, 1230,
     1230, 1230, 1230, 1230, 1230, 1231, 1231, 1231, 1231, 1231,
     1231, 1232, 1232, 1232, 1232, 1232, 1232, 1233, 1233, 1233,

     1233, 1233, 1233, 1234, 1234, 1234, 1234, 1234, 1234,  649,
      649,  649,  649,  649,  649,  211,  211,  211,  211,  211,
     1398,  211, 1398,  211, 1398, 1398, 1398, 1398, 1398,  211,
      211,  211,  211,  211,  211,  211,  679,  679,  679,  679,
      679,  679,  679,  679,  679,  679,  679, 1398, 1398,  679,
     1398, 1398,  679, 1398,  679,  679,  679,  679,  679,  679,
      679,  997,  997,  997,  997,  997,  997,  729,  729,  729,
      729,  729,  729,  729,  729,  729,  729,  729, 1398, 1398,
      729, 1398, 1398,  729, 1398,  729,  729,  729,  729,  729,
      729,  729, 1017, 1017, 1017, 1017, 1017, 1017,  953,  953,

      953,  953,  953,  953, 1283, 1398, 1283, 1283, 1283, 1283,
     1283, 1283, 1283, 1283, 1283, 1398, 1398, 1283, 1398, 1398,
     1283, 1398, 1283, 1299, 1398, 1299, 1299, 1299, 1299, 1299,
     1299, 1299, 1299, 1299, 1398, 1398, 1299, 1398, 1398, 1299,
     1398, 1299, 1330, 1330, 1330, 1330, 1330, 1331, 1331, 1331,
     1331, 1283, 1283, 1283, 1283, 1283, 1283, 1333, 1333, 1333,
     1333, 1333, 1333, 1335, 1335, 1335, 1335, 1335, 1335, 1337,
     1337, 1337, 1337, 1337, 1337, 1345, 1345, 1345, 1345, 1345,
     1346, 1346, 1346, 1346, 1299, 1299, 1299, 1299, 1299, 1299,
     1348, 1348, 1348, 1348, 1348, 1348, 1350, 1350, 1350, 1350,

     1350, 1350, 1352, 1352, 1352, 1352, 1352, 1352,  211,  211,
      211,  211,  211,  211, 1283, 1283, 1283, 1283, 1283, 1283,
     1283, 1283, 1283, 1283, 1283, 1398, 1398, 1283, 1398, 1398,
     1283, 1398, 1283, 1331, 1331, 1331, 1331, 1331, 1331, 1283,
     1283, 1283, 1283, 1283, 1283, 1367, 1367, 1367, 1367, 1367,
     1367, 1368, 1368, 1368, 1368, 1368, 1368, 1369, 1369, 1369,
     1369, 1369, 1369, 1370, 1370, 1370, 1370, 1370, 1370, 1299,
     1299, 1299, 1299, 1299, 1299, 1299, 1299, 1299, 1299, 1299,
     1398, 1398, 1299, 1398, 1398, 1299, 1398, 1299, 1346, 1346,
     1346, 1346, 1346, 1346, 1299, 1299, 1299, 1299, 1299, 1299,

     1375, 1375, 1375, 1375, 1375, 1375, 1376, 1376, 1376, 1376,
     1376, 1376, 1377, 1377, 1377, 1377, 1377, 1377, 1378, 1378,
     1378, 1378, 1378, 1378, 1283, 1283, 1283, 1283, 1283, 1283,
     1283, 1283, 1283, 1283, 1283, 1398, 1398, 1283, 1398, 1398,
     1283, 1398, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 1331,
     1331, 1331, 1331, 1331, 1331,    3, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398

    } ;

static yyconst flex_int16_t yy_chk[13496] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    5,
       10,   63,    5,    9, 1407,   14,   14,   14,   14,   63,
       64,   64,   64,   64, 1346,   64,   10,   14,   10,   10,
       10,   10,   10,   10,   10,   10,   10,   10,   10,   10,
       10,   10,   10,   10,   10,   10,   11,   11, 1331,   11,
       11,   11,   11,   11,   11,   11,   11,  300,   11,   11,
       11,   11,   52,   52,   52,   52,   16,   16,    9,   16,

       16,   16,   16,   16,   16,   16,   16,  214,   16,   16,
       16,   16,   17,   17, 1276,   17,   17,   17,   17,   17,
       17,   17,   17,   19,   19,  214,   19,   19,   19,   19,
       19,   19,   19,   19,   76,  300,  265,   76,   19,  265,
        9,   20,   20,   20,   20,   20,   20,   20,   20,   65,
      149, 1145,  149,   52,  301,  214,    9,   65,    9,    9,
        9,    9,    9,    9,    9,    9,    9,    9,    9,    9,
        9,    9,    9,    9,    9,    9,   13,   22, 1114,   22,
       22,   22,   22,   22,   22,   22,   22,   28,   28,  212,
       28,   28,   28,   28,   28,   28,   28,   28,   22,   28,

       28,   28,   28,  105,   31,   31,  107,   31,  136,  213,
      301,  105,   31,  212,  107,   31,  136,   31,   31,  213,
     1113,   31,  138,  165,   31,   33,   13,   31,   22,   33,
      138,  165,  167,   33,   31,   31,   33,   31,  194,   33,
      167,   33,   31,  212,  196,   31,  194,   31,   31,  213,
      221,   31,  196,  215,   31,   33,  222,   31,  221,   33,
      306,  306,  224,   33,  222, 1579,   33, 1579,   13,   33,
      224,   33,   66,   66,   66,   66,   66,   66,   66,   66,
       66,  321,  321,  215,   13, 1112,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,

       13,   13,   13,   13,   23,   72,   72,   72,   72,   72,
       72,   72,   72,  215,  217,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   32,  236,  261,  217,   32,  263,
     1080,  241,   32,  261,   34,   32,  263,   32,   32, 1017,
       32,   34,  241,   34,   34,  236,   34,   32,  106,  106,
      106,  106,   34,  106,   32,  997,   23,  217,   32,  365,
      365,  350,   32,  261,   34,   32,  263,   32,   32,  350,
       32,   34,  241,   34,   34,  236,   34,   32,  379,  379,
      414,  414,   34,   71,   71,   71,   71,   71,   71,   71,
       71,   71,   71,   71,   71,   71,   71,   71,   71,   73,

       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,  238,  237,   23,   23,  994,
       23,   23,   23,   23,   23,   23,   23,   23,  235,   23,
       23,   23,   23,   25,   25,   35,   36,  237,  240,   35,
       37,  238,   35,   36,   37,   35,   36,   35,   36,  271,
       39,   37,  235,  240,   37,  352,   37,   39,  428,  428,
       39,  271,   39,  352,  246,   35,   36,  237,  980,   35,
       37,  238,   35,   36,   37,   35,   36,   35,   36,  964,
       39,   37,  235,  240,   37, 1465,   37,   39,  246, 1465,
       39,  271,   39,   85,   85,   85,   85,   85,   85,   85,

       85,   85,  471,  471,  955,   25,   91,   91,   91,   91,
       91,   91,   91,   91,  137,  137,  137,  137,  246,  137,
      954,   25,  929,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   30,   30,  928,   30,   30,   30,   30,   30,   30,
       30,   30,   30,  166,  166,  166,  166,  927,  166,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,  485,  485,  518,  518,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,

       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,  195,  195,  195,  195,  855,  195,
       30,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
      255,  532,  532,  247,  835,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,  243,   30,   30,
       30,   30,   38,   38,  247,   40,  255,   40,  243,   38,
      262,   38,   38,   40,   38,   38,  280,   41,   40,   40,
       41,   41,  802,  280,  755,   41,  562,  562,   40,  262,
       41,   41,   38,   38,  247,   40,  255,   40,  243,   38,

       41,   38,   38,   40,   38,   38,  251,   41,   40,   40,
       41,   41,   42,  280,  244,   41,   42,  249,   40,  262,
       41,   41,  709,   42,   43,   43,   42,  251,   42,  399,
       41,   43,  249,   44,   43,   43,   43,  399,  671,  244,
       44,  266,   42,   44,  244,   44,   42,  132,  132,  132,
      132,  252,  254,   42,   43,   43,   42,  251,   42,  132,
      266,   43,  249,   44,   43,   43,   43,   45,  250,  244,
       44,   45,  252,   44,  244,   44,  670,  401,   45,  254,
       46,   45,  665,   45,   46,  401,  250,   46,   46,  664,
      266,   46,  454,  273,   46,  216,   46,   45,   46,   46,

      454,   45,  252,  273,  216,  657,  257,  264,   45,  254,
       46,   45,  216,   45,   46,   47,  250,   46,   46,   47,
      245,   46,   47,  555,   46,   47,   46,   47,   46,   46,
      257,  257,  245,  273,  216,   47,  264,  248,  245,   48,
      525,   48,  216,  258,  245,   47,  248,  248,   48,   47,
       48,   48,   47,   48,   48,   47,   48,   47,  258,   49,
      257,  257,  245,   49,  509,   47,  264,  501,  245,   48,
       49,   48,  260,   49,  245,   49,  248,  248,   48,  500,
       48,   48,  272,   48,   48,  269,   48,   50,  258,   49,
       50,   50,  260,   49,   50,  490,  267,   50,  478,   50,

       49,   51,   57,   49,  269,   49,   57,  272,   51,   57,
      455,   51,   57,   51,   57,  461,  267,   50,  455,  253,
       50,   50,  260,  270,   50,  457,  253,   50,   57,   50,
      275,   51,   57,  457,  269,  281,   57,  272,   51,   57,
      253,   51,   57,   51,   57,   58,  267,  287,  270,   58,
      275,  270,   58,  281,  287,   58,  253,   58,  223,  223,
      223,  223,  223,  223,  452,   58,  451,   81,  277,  503,
      253,  432,   81,  421,  284,   58,  405,  503,  270,   58,
      275,  270,   58,  281,  287,   58,  397,   58,  631,  631,
      631,  396,  631,  284,  277,   58,   68,   68,   68,   68,

       68,   68,   68,   68,   68,   68,   68,   68,   68,   68,
       68,   68,   68,   68,   68,   68,   68,   68,   68,   68,
       68,   79,   81,  284,  277,  289,  290,   81,  291,  386,
      505,   81,  307,  307,  307,  307,  307,  307,  505,   81,
      289,  290,   81,  291,   81,   87,   87,   87,   87,   87,
       87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
       87,   96,   96,   96,   96,   96,   96,   96,   96,   96,
      289,  290,  372,  291,  716,  716,   79,   89,   89,   89,
       89,   89,   89,   89,   89,   89,   89,   89,   89,   89,
       89,   89,   89,   98,   98,   98,   98,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,  102,
      102,  102,  102,  102,  102,  102,  102,  292,   79,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  313,  313,
      313,  313,  313,  313,   79,  292,   79,   79,   79,   79,
       79,   79,   79,   79,   79,   79,   79,   79,   79,   79,
       79,   79,   79,   79,   92,  114,  114,  114,  114,  114,
      114,  114,  114,  762,  762,  292,  351,  351,  351,  351,
       92,  351,   92,   92,   92,   92,   92,   92,   92,   92,
       92,   92,   92,   92,   92,   92,   92,   92,   92,   92,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,

      100,  100,  100,  100,  100,  100,  103,  103,  103,  103,
      103,  103,  103,  103,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      115,  115,  115,  115,  115,  115,  115,  115,  115,  115,
      115,  115,  115,  115,  115,  115,  117,  117,  117,  117,
      117,  117,  117,  117,  117,  117,  117,  117,  117,  117,
      117,  117,  117,  117,  117,  125,  125,  125,  125,  125,
      125,  125,  125,  125,  131,  131,  131,  131,  131,  131,
      131,  131,  103,  139,  139,  139,  139,  139,  139,  139,
      139,  139,  548,  548,  356,  121,  348,  651,  653,  347,

      121,  296,  296,  296,  296,  651,  653,  103,  103,  103,
      548,  103,  103,  103,  103,  103,  103,  103,  103,  337,
      103,  103,  103,  103,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  119,
      121,  702,  702,  328,  311,  121,  314,  293,  311,  121,
      809,  809,  296,  957,  311,  842,  842,  121,  293,  702,
      121,  957,  121,  127,  127,  127,  127,  127,  127,  127,
      127,  127,  127,  127,  127,  127,  127,  127,  127,  145,
      145,  145,  145,  145,  145,  145,  145,  303,  293,  119,

      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  144,  144,  144,  144,
      144,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  144,  150,  150,  150,  150,  150,  150,  150,  150,
      286,  119,  153,  153,  153,  153,  153,  153,  153,  153,
      366,  366,  366,  366,  366,  366,  285,  119,  256,  119,
      119,  119,  119,  119,  119,  119,  119,  119,  119,  119,
      119,  119,  119,  119,  119,  119,  119,  134,  134,  134,
      134,  134,  134,  134,  134,  146,  146,  146,  146,  146,
      146,  146,  146,  146,  146,  146,  146,  146,  146,  146,

      146,  148,  148,  148,  148,  148,  148,  148,  148,  148,
      148,  148,  148,  148,  148,  148,  148,  148,  148,  148,
      151,  239,  151,  151,  151,  151,  151,  151,  151,  151,
      154,  228,  154,  154,  154,  154,  154,  154,  154,  154,
      219,  151,  174,  174,  174,  174,  174,  174,  174,  174,
      159,  154,  159,  134,  218,  159,  159,  159,  159,  159,
      159,  159,  159,  190,  190,  190,  190,  190,  190,  190,
      190,  151,  371,  371,  371,  371,  371,  371,  134,  134,
      134,  154,  134,  134,  134,  134,  134,  134,  134,  134,
      211,  134,  134,  134,  134,  141,  141,  141,  141,  141,

      141,  141,  141,  141,  141,  141,  141,  141,  141,  141,
      141,  141,  141,  141,  141,  141,  141,  141,  141,  141,
      156,  156,  156,  156,  156,  156,  156,  156,  157,  157,
      157,  157,  157,  157,  157,  157,  958,  960,  566,  156,
      567,  294,  973,  973,  958,  960,  158,  157,  158,  158,
      158,  158,  158,  158,  158,  158,  160,  160,  160,  160,
      160,  160,  160,  160,  987,  987,  294,  158,  566,  156,
      567,  160,  160,  160,  160,  160,  160,  157,  168,  168,
      168,  168,  168,  168,  168,  168,  168,  184,  184,  184,
      184,  184,  184,  184,  184,  184,  294,  158,  568,  748,

      748,  160,  160,  160,  160,  160,  160,  161,  400,  400,
      400,  400,  207,  400,  200,  161,  161,  748,  161,  161,
      161,  161,  161,  161,  161,  161,  161,  163,  568,  163,
      163,  163,  163,  163,  163,  163,  163,  163,  163,  163,
      163,  163,  197,  197,  197,  197,  197,  197,  197,  197,
      197,  163,  171,  163,  569,  163,  163, 1152, 1152,  161,
      173,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      173,  173,  173,  173,  173,  173,  203,  203,  203,  203,
      203,  203,  203,  203,  569,  142,  163,  415,  415,  415,
      415,  415,  415,  120,  161,  175,  175,  175,  175,  175,

      175,  175,  175,  175,  175,  175,  175,  175,  175,  175,
      175,  504,  504,  504,  504,  163,  504,  111,   80,  161,
      161,  161,  161,  161,  161,  161,  161,  161,  161,  161,
      161,   69,  161,  161,  161,  161,  162,  420,  420,  420,
      420,  420,  420,   60,  162,  162,   55,  162,  162,  162,
      162,  162,  162,  162,  162,  162,  177,  177,  177,  177,
      177,  177,  177,  177,  177,  177,  177,  177,  177,  177,
      177,  177,  177,  177,  177,  225,  225,  225,  225,  225,
      225,  225,  225,  225,   54,   27,   12,    8,  162,  186,
      186,  186,  186,  186,  186,  186,  186,  186,  186,  186,

      186,  186,  186,  186,  186,  188,  188,  188,  188,  188,
      188,  188,  188,  188,  188,  188,  188,  188,  188,  188,
      188,    7,    3,  162,  202,  202,  202,  202,  202,  202,
      202,  202,  202,  202,  202,  202,  202,  202,  202,  202,
      231,  231,  231,  231,  231,  231,  231,  231,  162,  162,
      162,  162,  162,  162,  162,  162,  162,  162,  162,  162,
        0,  162,  162,  162,  162,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      178,  204,  204,  204,  204,  204,  204,  204,  204,  204,

      204,  204,  204,  204,  204,  204,  204,  206,  206,  206,
      206,  206,  206,  206,  206,  206,  206,  206,  206,  206,
      206,  206,  206,  206,  206,  206,  230,  230,  230,  230,
      230,  230,  230,  230,  230,  230,  230,  230,  230,  230,
      230,  230,  232,  232,  232,  232,  232,  232,  232,  232,
      232,  232,  232,  232,  232,  232,  232,  232,    0,  299,
      299,  178,  299,  299,  299,  299,  299,  299,  299,  299,
        0,  299,  299,  299,  299,    0,    0,  178,    0,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  179,  234,  234,

      234,  234,  234,  234,  234,  234,  234,  234,  234,  234,
      234,  234,  234,  234,  234,  234,  234,  242,  274,    0,
      268,  295,    0,  570,  242,  571,  259,  279,  295,  274,
      572,  574,  278,  274,  259,  575,  279,  242,    0,  242,
      268,  259,  278,  242,  259,  279,  259,  268,  576,  279,
      279,  278,  259,  570,  242,  571,    0,    0,  295,  274,
      572,  574,    0,  274,  259,  575,  279,  242,  179,  242,
      268,  259,  278,  242,  259,  279,  259,  268,  576,  279,
      279,  278,  259,    0,  179,  577,  179,  179,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,

      179,  179,  179,  179,  192,  192,  192,  192,  192,  192,
      192,  192,  276,  282,    0,  577,  283,  288,    0,  579,
      282,    0,  276,  580,  283,  276,  581,  288,  582,  583,
      584,  585,  288,  586,  276,  283,  282,  587,  288,    0,
      309,  309,  309,  309,  309,  309,  309,  309,  309,  579,
      282,  309,  276,  580,  283,  276,  581,  288,  582,  583,
      584,  585,  288,  586,  276,  283,  282,  587,  288,  319,
      319,  319,  319,  319,  319,  319,  319,  319,  588,    0,
      192,  456,  456,  456,  456,  456,  456,  589,  319,  319,
      319,  319,  319,  319,  353,  353,  353,  353,  353,  353,

      353,  353,  353,    0,    0,  192,  192,  192,  588,  192,
      192,  192,  192,  192,  192,  192,  192,  589,  192,  192,
      192,  192,  199,  199,  199,  199,  199,  199,  199,  199,
      199,  199,  199,  199,  199,  199,  199,  199,  199,  199,
      199,  199,  199,  199,  199,  199,  199,  208,  208,    0,
      208,  208,  208,  208,  208,  208,  208,  208,  208,  358,
      358,  358,  358,  358,  358,  358,  358,  358,  358,  358,
      358,  358,  358,  358,  358,  359,  359,  359,  359,  359,
      359,  359,  359,  360,  360,  360,  360,  360,  360,  360,
      360,  360,  360,  360,  360,  360,  360,  360,  360,  362,

      362,  362,  362,  362,  362,  362,  362,  362,  362,  362,
      362,  362,  362,  362,  362,  362,  362,  362,  408,  408,
      408,  408,  408,  408,  408,  408,  208,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  402,  402,  402,  402,
      402,  402,  402,  402,  402,  472,  472,  472,  472,  472,
      472,  208,  208,  208,  208,  208,  208,  208,  208,  208,
      208,  208,  208,    0,  208,  208,  208,  208,  209,  209,
        0,  209,  209,  209,  209,  209,  209,  209,  209,  209,
      377,  377,  377,  377,  377,  377,  377,  377,  377,  417,
      417,  417,  417,  417,  417,  417,  417,  417,    0,  377,

      377,  377,  377,  377,  377,  407,  407,  407,  407,  407,
      407,  407,  407,  407,  407,  407,  407,  407,  407,  407,
      407,  409,  409,  409,  409,  409,  409,  409,  409,  409,
      409,  409,  409,  409,  409,  409,  409,  442,  442,  442,
      442,  442,  442,  442,  442,    0,    0,  209,  411,  411,
      411,  411,  411,  411,  411,  411,  411,  411,  411,  411,
      411,  411,  411,  411,  411,  411,  411,    0,    0,  590,
        0,    0,  209,  209,  209,  209,  209,  209,  209,  209,
      209,  209,  209,  209,    0,  209,  209,  209,  209,  210,
      426,  426,  426,  426,  426,  426,  426,  426,  426,  590,

      210,  210,  210,  210,  210,  210,  210,  210,  210,  426,
      426,  426,  426,  426,  426,  433,  433,  433,  433,  433,
      433,  433,  433,  434,  434,  434,  434,  434,  434,  434,
      434,  591,  592,  593,  433,  594,  595,  597,  435,    0,
      435,  210,  434,  435,  435,  435,  435,  435,  435,  435,
      435,  436,  436,  436,  436,  436,  436,  436,  436,    0,
        0,  591,  592,  593,  433,  594,  595,  597,  598,  438,
      436,  438,  434,    0,  438,  438,  438,  438,  438,  438,
      438,  438,  439,  599,  439,    0, 1166,  439,  439,  439,
      439,  439,  439,  439,  439, 1166,    0,    0,  598,    0,

      436,    0,  210,  210, 1166,  210,  210,  210,  210,  210,
      210,  210,  210,  599,  210,  210,  210,  210,  227,  227,
      227,  227,  227,  227,  227,  227,  227,  227,  227,  227,
      227,  227,  227,  227,  227,  227,  227,  227,  227,  227,
      227,  227,  227,  326,  437,  437,  437,  437,  437,  437,
      437,  437,  440,  440,  440,  440,  440,  440,  440,  440,
      600,  601,  602,  437,  603,  604,  605,  441,    0,  441,
      608,  440,  441,  441,  441,  441,  441,  441,  441,  441,
      443,  443,  443,  443,  443,  443,  443,  443,    0,    0,
      600,  601,  602,  437,  603,  604,  605,    0,  326,    0,

      608,  440,  444,  444,  444,  444,  444,  444,  444,  444,
      477,  477,  477,  477,  477,  477,    0,  444,  444,  444,
      444,  444,  444,  458,  458,  458,  458,  458,  458,  458,
      458,  458,  464,  464,  464,  464,  464,  464,  464,  464,
      326,  519,  519,  519,  519,  519,  519,  444,  444,  444,
      444,  444,  444,    0,    0,    0,  326,    0,  326,  326,
      326,  326,  326,  326,  326,  326,  326,  326,  326,  326,
      326,  326,  326,  326,  326,  326,  345,  345,  345,  345,
      345,  345,  345,  345,  445,  445,  445,  445,  445,  445,
      445,  445,  524,  524,  524,  524,  524,  524,    0,  445,

      445,  445,  445,  445,  445,  474,  474,  474,  474,  474,
      474,  474,  474,  474,  450,    0,  450,  450,  450,  450,
      450,  450,  450,  450,  450,  450,  450,  450,  450,  445,
      445,  445,  445,  445,  445,    0,    0,    0,  450,  609,
      450,  610,  450,  450,  512,  512,  512,  512,  512,  512,
      512,  512,  345,  463,  463,  463,  463,  463,  463,  463,
      463,  463,  463,  463,  463,  463,  463,  463,  463,  609,
        0,  610,    0,  450,    0,    0,    0,  345,  345,  345,
        0,  345,  345,  345,  345,  345,  345,  345,  345,    0,
      345,  345,  345,  345,  346,  346,  346,  346,  346,  346,

      346,  346,  450,  465,  465,  465,  465,  465,  465,  465,
      465,  465,  465,  465,  465,  465,  465,  465,  465,  467,
      467,  467,  467,  467,  467,  467,  467,  467,  467,  467,
      467,  467,  467,  467,  467,  467,  467,  467,  483,  483,
      483,  483,  483,  483,  483,  483,  483,  506,  506,  506,
      506,  506,  506,  506,  506,  506,    0,  483,  483,  483,
      483,  483,  483,  549,  549,  549,  549,  549,  549,    0,
      346,  511,  511,  511,  511,  511,  511,  511,  511,  511,
      511,  511,  511,  511,  511,  511,  511,  554,  554,  554,
      554,  554,  554,    0,    0,  346,  346,  346,    0,  346,

      346,  346,  346,  346,  346,  346,  346,    0,  346,  346,
      346,  346,  355,  355,  355,  355,  355,  355,  355,  355,
      355,  355,  355,  355,  355,  355,  355,  355,  355,  355,
      355,  355,  355,  355,  355,  355,  355,  384,  513,  513,
      513,  513,  513,  513,  513,  513,  513,  513,  513,  513,
      513,  513,  513,  513,  515,  515,  515,  515,  515,  515,
      515,  515,  515,  515,  515,  515,  515,  515,  515,  515,
      515,  515,  515,  521,  521,  521,  521,  521,  521,  521,
      521,  521,    0,    0,    0,    0,    0,  384,  530,  530,
      530,  530,  530,  530,  530,  530,  530,  551,  551,  551,

      551,  551,  551,  551,  551,  551,    0,  530,  530,  530,
      530,  530,  530,  560,  560,  560,  560,  560,  560,  560,
      560,  560,  652,  652,  652,  652,    0,  652,    0,  384,
        0,    0,  560,  560,  560,  560,  560,  560,  703,  703,
      703,  703,  703,  703,  611,  384,  612,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  394,  394,  394,  394,  394,
      394,  394,  394,  573,  611,  615,  612,  616,  617,  618,
      619,  620,  621,  622,  623,  624,  625,  626,  573,  573,
      627,  628,  629,  630,  632,  633,  635,  637,  626,  638,

      639,  640,  641,  573,  643,  615,  644,  616,  617,  618,
      619,  620,  621,  622,  623,  624,  625,  626,  573,  573,
      627,  628,  629,  630,  632,  633,  635,  637,  626,  638,
      639,  640,  641,  645,  643,  646,  644,    0,    0,  647,
        0,  394,  708,  708,  708,  708,  708,  708,  648,  654,
      654,  654,  654,  654,  654,  654,  654,  654,    0,    0,
        0,    0,    0,  645,    0,  646,  394,  394,  394,  647,
      394,  394,  394,  394,  394,  394,  394,  394,  648,  394,
      394,  394,  394,  395,  395,  395,  395,  395,  395,  395,
      395,  634,  634,    0,  634,  634,  749,  749,  749,  749,

      749,  749,  634,  866,  867,  795,  795,    0,  634,  869,
      634,  660,  660,  660,  660,  660,  660,  660,  660,  828,
      828,  634,  634,  795,  634,  634,  754,  754,  754,  754,
      754,  754,  634,  866,  867,    0,    0,  828,  634,  869,
      634,  659,  659,  659,  659,  659,  659,  659,  659,  659,
      659,  659,  659,  659,  659,  659,  659,  870,    0,  395,
      661,  661,  661,  661,  661,  661,  661,  661,  661,  661,
      661,  661,  661,  661,  661,  661,  691,  691,  691,  691,
      691,  691,  691,  691,  395,  395,  395,  870,  395,  395,
      395,  395,  395,  395,  395,  395,    0,  395,  395,  395,

      395,  404,  404,  404,  404,  404,  404,  404,  404,  404,
      404,  404,  404,  404,  404,  404,  404,  404,  404,  404,
      404,  404,  404,  404,  404,  404,  446,  681,  731,    0,
        0,    0,  681,  731,  446,  446,    0,  446,  446,  446,
      446,  446,  446,  446,  446,  446,  663,  663,  663,  663,
      663,  663,  663,  663,  663,  663,  663,  663,  663,  663,
      663,  663,  663,  663,  663,  685,  685,  685,  685,  685,
      685,  685,  685,  685,    0,    0,    0,    0,  446,    0,
        0,    0,  681,  731,    0,    0,    0,  681,  731,    0,
        0,  681,  731,  796,  796,  796,  796,  796,  796,  681,

      731,    0,  681,  731,  681,  731,  801,  801,  801,  801,
      801,  801,    0,  446,  687,  687,  687,  687,  687,  687,
      687,  687,  687,  687,  687,  687,  687,  687,  687,  687,
      741,  741,  741,  741,  741,  741,  741,  741,  446,  446,
      446,  446,  446,  446,  446,  446,  446,  446,  446,  446,
        0,  446,  446,  446,  446,  447,  829,  829,  829,  829,
      829,  829,    0,  447,  447,    0,  447,  447,  447,  447,
      447,  447,  447,  447,  447,  689,  689,  689,  689,  689,
      689,  689,  689,  689,  689,  689,  689,  689,  689,  689,
      689,    0,  696,  705,  705,  705,  705,  705,  705,  705,

      705,  705,    0,    0,    0,    0,    0,  447,  696,  871,
      696,  696,  696,  696,  696,  696,  696,  696,  696,  696,
      696,  696,  696,  696,  696,  696,  696,  696,  714,  714,
      714,  714,  714,  714,  714,  714,  714,    0,    0,  871,
        0,    0,  447,    0, 1138, 1138,    0,  714,  714,  714,
      714,  714,  714,  735,  735,  735,  735,  735,  735,  735,
      735,  735, 1138,    0,    0,    0,    0,  447,  447,  447,
      447,  447,  447,  447,  447,  447,  447,  447,  447,    0,
      447,  447,  447,  447,  460,  460,  460,  460,  460,  460,
      460,  460,  460,  460,  460,  460,  460,  460,  460,  460,

      460,  460,  460,  460,  460,  460,  460,  460,  460,  498,
      498,  498,  498,  498,  498,  498,  498,  737,  737,  737,
      737,  737,  737,  737,  737,  737,  737,  737,  737,  737,
      737,  737,  737,  739,  739,  739,  739,  739,  739,  739,
      739,  739,  739,  739,  739,  739,  739,  739,  739,  751,
      751,  751,  751,  751,  751,  751,  751,  751,  760,  760,
      760,  760,  760,  760,  760,  760,  760,  778,  778,  778,
      778,  778,  778,  778,  778,    0,    0,  760,  760,  760,
      760,  760,  760,  872,  775,  498,  775,    0,    0,  775,
      775,  775,  775,  775,  775,  775,  775,  777,    0,  777,

        0,    0,  777,  777,  777,  777,  777,  777,  777,  777,
      498,  498,  498,  872,  498,  498,  498,  498,  498,  498,
      498,  498,  873,  498,  498,  498,  498,  499,  499,  499,
      499,  499,  499,  499,  499,  776,  776,  776,  776,  776,
      776,  776,  776,  779,  779,  779,  779,  779,  779,  779,
      779,  780,  873,  780,  776,    0,  780,  780,  780,  780,
      780,  780,  780,  780,  781,  781,  781,  781,  781,  781,
      781,  781,  783,  783,  783,  783,  783,  783,  783,  783,
      782,    0,  782,  781,  776,  782,  782,  782,  782,  782,
      782,  782,  782,  784,  784,  784,  784,  784,  784,  784,

      784,  875,    0,  499,  785,  785,  785,  785,  785,  785,
      785,  785,    0,  781,  786,  786,  786,  786,  786,  786,
      786,  786,  834,  834,  834,  834,  834,  834,  499,  499,
      499,  875,  499,  499,  499,  499,  499,  499,  499,  499,
        0,  499,  499,  499,  499,  508,  508,  508,  508,  508,
      508,  508,  508,  508,  508,  508,  508,  508,  508,  508,
      508,  508,  508,  508,  508,  508,  508,  508,  508,  508,
      537,  537,    0,  537,  537,  537,  537,  537,  537,  537,
      537,  537,  787,  787,  787,  787,  787,  787,  787,  787,
      788,  788,  788,  788,  788,  788,  788,  788,  789,  789,

      789,  789,  789,  789,  789,  789,    0,    0,    0,    0,
      876,  877,  878,  789,  789,  789,  789,  789,  789,  798,
      798,  798,  798,  798,  798,  798,  798,  798,    0,    0,
        0,  807,  807,  807,  807,  807,  807,  807,  807,  807,
      876,  877,  878,  789,  789,  789,  789,  789,  789,  537,
      807,  807,  807,  807,  807,  807,  831,  831,  831,  831,
      831,  831,  831,  831,  831,  959,  959,  959,  959,  959,
      959,    0,    0,    0,  537,  537,  537,  537,  537,  537,
      537,  537,  537,  537,  537,  537,  879,  537,  537,  537,
      537,  538,  538,    0,  538,  538,  538,  538,  538,  538,

      538,  538,  538,  840,  840,  840,  840,  840,  840,  840,
      840,  840,  880,  881,  883,  885,  879,  886,  887,  889,
      890,  891,  840,  840,  840,  840,  840,  840,  892,  893,
      895,  896,  897,  898,  899,  900,  901,  902,  904,  906,
        0,  908,  880,  881,  883,  885,  909,  886,  887,  889,
      890,  891,  905,  905,  910,  911,  912,  913,  892,  893,
      895,  896,  897,  898,  899,  900,  901,  902,  904,  906,
      538,  908, 1321,    0,    0,    0,  909,  915,    0,    0,
        0, 1321,  905,  905,  910,  911,  912,  913,    0,    0,
     1321,    0,    0,  916,  917,  538,  538,  538,  538,  538,

      538,  538,  538,  538,  538,  538,  538,  915,  538,  538,
      538,  538,  649,  649,  918,  649,  649,  649,  649,  649,
      649,  649,  649,  916,  917,  920,  921,  922,  923,  924,
      925,  930,  931,  932,  933,  934,  935,  936,  937,  938,
      939,  936,  940,  941,  918,  942,  943,  944,  945,  947,
      948,    0,    0,    0,    0,  920,  921,  922,  923,  924,
      925,  930,  931,  932,  933,  934,  935,  936,  937,  938,
      939,  936,  940,  941,    0,  942,  943,  944,  945,  947,
      948,  961,  961,  961,  961,  961,  961,  961,  961,  961,
        0,  649,  966,  966,  966,  966,  966,  966,  966,  966,

      966,  966,  966,  966,  966,  966,  966,  966,  967,  967,
      967,  967,  967,  967,  967,  967,  649,  649,  649,  649,
      649,  649,  649,  649,  649,  649,  649,  649,    0,  649,
      649,  649,  649,  656,  656,  656,  656,  656,  656,  656,
      656,  656,  656,  656,  656,  656,  656,  656,  656,  656,
      656,  656,  656,  656,  656,  656,  656,  656,  679,  968,
      968,  968,  968,  968,  968,  968,  968,  968,  968,  968,
      968,  968,  968,  968,  968,  970,  970,  970,  970,  970,
      970,  970,  970,  970,  970,  970,  970,  970,  970,  970,
      970,  970,  970,  970,  974,  974,  974,  974,  974,  974,

      976,  976,  976,  976,  976,  976,  976,  976,  976,    0,
        0,    0,    0,  679,  979,  979,  979,  979,  979,  979,
      985,  985,  985,  985,  985,  985,  985,  985,  985, 1035,
     1035, 1035, 1035, 1035, 1035, 1035, 1035, 1064, 1065,  985,
      985,  985,  985,  985,  985, 1036, 1036, 1036, 1036, 1036,
     1036, 1036, 1036,    0,    0,  679, 1037, 1037, 1037, 1037,
     1037, 1037, 1037, 1037,    0,    0,    0, 1064, 1065,    0,
        0,  679,    0,  679,  679,  679,  679,  679,  679,  679,
      679,  679,  679,  679,  679,  679,  679,  679,  679,  679,
      679,  680, 1038, 1038, 1038, 1038, 1038, 1038, 1038, 1038,

     1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1040, 1040,
     1040, 1040, 1040, 1040, 1040, 1040, 1041, 1041, 1041, 1041,
     1041, 1041, 1041, 1041, 1042, 1042, 1042, 1042, 1042, 1042,
     1042, 1042, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1074,
     1075, 1076, 1077, 1081, 1083, 1084,  680, 1086, 1087, 1089,
     1092, 1094, 1097, 1098, 1100, 1102, 1104, 1106,    0, 1107,
     1108, 1109, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1074,
     1075, 1076, 1077, 1081, 1083, 1084,    0, 1086, 1087, 1089,
     1092, 1094, 1097, 1098, 1100, 1102, 1104, 1106,  680, 1107,
     1108, 1109,    0,    0,    0, 1110, 1111, 1115, 1116, 1117,

     1118, 1120, 1121, 1122,  680, 1123,  680,  680,  680,  680,
      680,  680,  680,  680,  680,  680,  680,  680,  680,  680,
      680,  680,  680,  680,  692, 1110, 1111, 1115, 1116, 1117,
     1118, 1120, 1121, 1122, 1124, 1123, 1125, 1126, 1130, 1132,
     1139, 1139, 1139, 1139, 1139, 1139, 1141, 1141, 1141, 1141,
     1141, 1141, 1141, 1141, 1141, 1144, 1144, 1144, 1144, 1144,
     1144,    0,    0,    0, 1124,    0, 1125, 1126, 1130, 1132,
     1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150,  692,
     1179, 1167, 1180, 1182, 1183, 1181, 1184, 1186, 1186, 1150,
     1150, 1150, 1150, 1150, 1150, 1167, 1181, 1183, 1187, 1180,

        0, 1167, 1184, 1188, 1189, 1190, 1191,    0, 1192,    0,
     1179, 1322, 1180, 1182, 1183, 1181, 1184, 1186, 1186,    0,
        0,  692,    0,    0,    0, 1322, 1181, 1183, 1187, 1180,
     1188, 1322, 1184, 1188, 1189, 1190, 1191,  692, 1192,  692,
      692,  692,  692,  692,  692,  692,  692,  692,  692,  692,
      692,  692,  692,  692,  692,  692,  692,  720,  720,  720,
      720,  720,  720,  720,  720, 1185, 1185, 1185, 1185, 1194,
     1195, 1185, 1193, 1193, 1193, 1193, 1196, 1194, 1193, 1197,
     1200, 1198, 1199, 1201, 1195, 1201, 1202, 1203, 1203, 1204,
     1196, 1204, 1206, 1208, 1211, 1197, 1198, 1199, 1212, 1194,

     1195, 1185, 1210,    0, 1210, 1213, 1196, 1194, 1193, 1197,
     1200, 1198, 1199, 1201, 1195, 1201, 1202, 1203, 1203, 1204,
     1196, 1204, 1206, 1208, 1211, 1197, 1198, 1199, 1212,    0,
        0, 1185, 1210,  720, 1210, 1213,    0,    0, 1193,    0,
     1205, 1287, 1287, 1287, 1287, 1287, 1287, 1287, 1287, 1287,
        0,    0,    0,    0, 1205,    0, 1214, 1215,  720,  720,
      720,    0,  720,  720,  720,  720,  720,  720,  720,  720,
     1205,  720,  720,  720,  720,  721,  721,  721,  721,  721,
      721,  721,  721, 1207, 1205, 1209, 1214, 1215, 1216, 1218,
     1216, 1217, 1219, 1220, 1221, 1223, 1219, 1225, 1207, 1222,

     1222, 1209, 1226, 1217, 1218, 1224, 1235, 1236, 1221, 1237,
     1238, 1225, 1239, 1207, 1240, 1209, 1224, 1242, 1216, 1218,
     1216, 1217, 1219, 1220, 1221, 1223, 1219, 1225, 1207, 1222,
     1222, 1209, 1226, 1217, 1218, 1224, 1235, 1236, 1221, 1237,
     1238, 1225, 1239, 1241, 1240, 1241, 1224, 1242,    0, 1243,
        0,  721,    0,    0,    0,    0,    0,    0, 1245,    0,
        0,    0,    0,    0, 1243, 1244,    0, 1244, 1246, 1246,
     1246, 1246,    0, 1241, 1246, 1241,  721,  721,  721, 1243,
      721,  721,  721,  721,  721,  721,  721,  721, 1245,  721,
      721,  721,  721,  729, 1243, 1244, 1249, 1244, 1235, 1251,

     1250, 1237, 1238, 1250, 1254, 1246, 1240, 1248, 1255, 1248,
     1255, 1251, 1249, 1252, 1252, 1252, 1252, 1257, 1258, 1252,
        0,    0,    0, 1246,    0,    0, 1249,    0,    0, 1251,
     1250,    0,    0, 1250, 1254, 1246, 1247, 1248, 1255, 1248,
     1255, 1251, 1249,  729, 1259, 1256, 1261, 1257, 1258, 1262,
     1252, 1256, 1247, 1246, 1247, 1247, 1247, 1247, 1247, 1247,
     1247, 1247, 1247, 1247, 1247, 1247, 1247, 1247, 1247, 1247,
     1247, 1247,    0,    0, 1259, 1256, 1261,    0,    0, 1262,
     1252, 1256,    0,    0,    0,  729,    0,    0,    0,    0,
        0,    0,    0, 1260, 1264, 1266, 1269, 1270, 1272,    0,

     1277,  729, 1260,  729,  729,  729,  729,  729,  729,  729,
      729,  729,  729,  729,  729,  729,  729,  729,  729,  729,
      729,  730, 1253, 1260, 1264, 1266, 1269, 1270, 1272, 1263,
     1277,    0, 1260, 1273, 1274, 1273, 1274, 1279, 1253, 1263,
     1253, 1253, 1253, 1253, 1253, 1253, 1253, 1253, 1253, 1253,
     1253, 1253, 1253, 1253, 1253, 1253, 1253, 1253, 1265, 1263,
     1267, 1268, 1271, 1273, 1274, 1273, 1274, 1279, 1278, 1263,
     1265,  730, 1280, 1281, 1267, 1268, 1282, 1294, 1271, 1295,
     1298, 1296, 1311,    0, 1278,    0,    0,    0, 1265,    0,
     1267, 1268, 1271, 1296, 1313, 1314, 1316, 1319, 1278,    0,

     1265,    0, 1280, 1281, 1267, 1268, 1282, 1294, 1271, 1295,
     1298, 1296, 1311,  730, 1278, 1293, 1293, 1293, 1293, 1293,
     1293, 1293, 1293, 1296, 1313, 1314, 1316, 1319,    0,  730,
        0,  730,  730,  730,  730,  730,  730,  730,  730,  730,
      730,  730,  730,  730,  730,  730,  730,  730,  730,  742,
     1289, 1289, 1289, 1289, 1289, 1289, 1289, 1289, 1289, 1289,
     1289, 1289, 1289, 1289, 1289, 1289, 1291, 1291, 1291, 1291,
     1291, 1291, 1291, 1291, 1291, 1291, 1291, 1291, 1291, 1291,
     1291, 1291, 1297, 1303, 1303, 1303, 1303, 1303, 1303, 1303,
     1303, 1303, 1323, 1297,    0,    0,    0,    0,    0,  742,

     1309, 1309, 1309, 1309, 1309, 1309, 1309, 1309,    0,    0,
     1310,    0, 1297, 1312, 1317, 1324, 1317, 1325, 1312, 1310,
     1320, 1320, 1323, 1297, 1305, 1305, 1305, 1305, 1305, 1305,
     1305, 1305, 1305, 1305, 1305, 1305, 1305, 1305, 1305, 1305,
     1310,  742,    0, 1312, 1317, 1324, 1317, 1325, 1312, 1310,
     1320, 1320,    0,    0,    0,    0,    0,  742,    0,  742,
      742,  742,  742,  742,  742,  742,  742,  742,  742,  742,
      742,  742,  742,  742,  742,  742,  742,  766,  766,  766,
      766,  766,  766,  766,  766, 1307, 1307, 1307, 1307, 1307,
     1307, 1307, 1307, 1307, 1307, 1307, 1307, 1307, 1307, 1307,

     1307, 1315, 1318, 1328, 1329, 1339, 1340, 1341, 1344, 1354,
     1355, 1356, 1357, 1356, 1358, 1315, 1359, 1318, 1360, 1339,
     1361, 1362, 1363,    0, 1364, 1367,    0, 1373, 1372, 1371,
     1372, 1315, 1318, 1328, 1329, 1339, 1340, 1341, 1344, 1354,
     1355, 1356, 1357, 1356, 1358, 1315, 1359, 1318, 1360, 1339,
     1361, 1362, 1363,  766, 1364, 1367, 1371, 1373, 1372, 1371,
     1372,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 1374, 1381, 1379,    0, 1382,  766,  766,
      766, 1382,  766,  766,  766,  766,  766,  766,  766,  766,
     1379,  766,  766,  766,  766,  767,  767,  767,  767,  767,

      767,  767,  767, 1374, 1381, 1379, 1383, 1382, 1384, 1387,
     1385, 1382, 1361, 1362, 1388, 1390, 1391, 1392, 1383, 1393,
     1379, 1395, 1396, 1397,    0, 1384, 1385,    0, 1396,    0,
        0, 1392,    0,    0,    0,    0, 1383,    0, 1384, 1387,
     1385,    0,    0,    0, 1388, 1390, 1391, 1392, 1383, 1393,
        0, 1395, 1396, 1397,    0, 1384, 1385,    0, 1396,    0,
        0, 1392,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  767,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  767,  767,  767,    0,

      767,  767,  767,  767,  767,  767,  767,  767,    0,  767,
      767,  767,  767,  790,    0,    0,    0,    0,    0,    0,
        0,  790,  790,    0,  790,  790,  790,  790,  790,  790,
      790,  790,  790,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  790,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

      790,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  790,  790,  790,  790,  790,
      790,  790,  790,  790,  790,  790,  790,    0,  790,  790,
      790,  790,  791,    0,    0,    0,    0,    0,    0,    0,
      791,  791,    0,  791,  791,  791,  791,  791,  791,  791,
      791,  791,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  791,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  791,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  791,  791,  791,  791,  791,  791,
      791,  791,  791,  791,  791,  791,    0,  791,  791,  791,
      791,  822,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  822,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  822,    0,
      822,  822,  822,  822,  822,  822,  822,  822,  822,  822,
      822,  822,  822,  822,  822,  822,  822,  822,  846,  846,
      846,  846,  846,  846,  846,  846,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  846,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  846,
      846,  846,    0,  846,  846,  846,  846,  846,  846,  846,
      846,    0,  846,  846,  846,  846,  847,  847,  847,  847,

      847,  847,  847,  847,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  847,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  847,  847,  847,

        0,  847,  847,  847,  847,  847,  847,  847,  847,    0,
      847,  847,  847,  847,  856,  856,    0,  856,  856,  856,
      856,  856,  856,  856,  856,  856,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  856,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  856,  856,
      856,  856,  856,  856,  856,  856,  856,  856,  856,  856,
        0,  856,  856,  856,  856,  857,  857,    0,  857,  857,
      857,  857,  857,  857,  857,  857,  857,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  857,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  857,
      857,  857,  857,  857,  857,  857,  857,  857,  857,  857,
      857,    0,  857,  857,  857,  857,  951,  951,    0,  951,
      951,  951,  951,  951,  951,  951,  951,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  951,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      951,  951,  951,  951,  951,  951,  951,  951,  951,  951,
      951,  951,    0,  951,  951,  951,  951,  952,  952,    0,
      952,  952,  952,  952,  952,  952,  952,  952,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  952,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  952,  952,  952,  952,  952,  952,  952,  952,  952,
      952,  952,  952,    0,  952,  952,  952,  952,  963,  963,

      963,  963,  963,  963,  963,  963,  963,  963,  963,  963,
      963,  963,  963,  963,  963,  963,  963,  963,  963,  963,
      963,  963,  963,  991,  991,    0,  991,  991,  991,  991,
      991,  991,  991,  991,  991,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  991,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,  991,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  991,  991,  991,
      991,  991,  991,  991,  991,  991,  991,  991,  991,    0,
      991,  991,  991,  991,  992,  992,    0,  992,  992,  992,
      992,  992,  992,  992,  992,  992,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  992,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  992,  992,
      992,  992,  992,  992,  992,  992,  992,  992,  992,  992,
        0,  992,  992,  992,  992,  993,  993,  993,  993,  993,
      993,  993,  993,  993,  993,  993,  993,  993,  993,  993,
      993,  993,  993,  993,  993,  993,  993,  993,  993,  993,
      995,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  995,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  995,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,  995,    0,  995,  995,  995,  995,  995,
      995,  995,  995,  995,  995,  995,  995,  995,  995,  995,
      995,  995,  995, 1005, 1005, 1005, 1005, 1005, 1005, 1005,
     1005,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 1005,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1005, 1005, 1005,    0, 1005, 1005,
     1005, 1005, 1005, 1005, 1005, 1005,    0, 1005, 1005, 1005,
     1005, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 1006,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 1006, 1006, 1006,    0, 1006, 1006, 1006, 1006,
     1006, 1006, 1006, 1006,    0, 1006, 1006, 1006, 1006, 1015,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0, 1015,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1015,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 1015,    0, 1015,
     1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015,
     1015, 1015, 1015, 1015, 1015, 1015, 1015, 1025, 1025, 1025,
     1025, 1025, 1025, 1025, 1025,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 1025,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1025, 1025,
     1025,    0, 1025, 1025, 1025, 1025, 1025, 1025, 1025, 1025,

        0, 1025, 1025, 1025, 1025, 1026, 1026, 1026, 1026, 1026,
     1026, 1026, 1026,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1026,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0, 1026, 1026, 1026,    0,
     1026, 1026, 1026, 1026, 1026, 1026, 1026, 1026,    0, 1026,
     1026, 1026, 1026, 1043,    0,    0,    0,    0,    0,    0,
        0, 1043, 1043,    0, 1043, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 1043,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     1043,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 1043, 1043, 1043, 1043, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043,    0, 1043, 1043,
     1043, 1043, 1044,    0,    0,    0,    0,    0,    0,    0,
     1044, 1044,    0, 1044, 1044, 1044, 1044, 1044, 1044, 1044,
     1044, 1044,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0, 1044,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 1044,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1044, 1044, 1044, 1044, 1044, 1044,
     1044, 1044, 1044, 1044, 1044, 1044,    0, 1044, 1044, 1044,
     1044, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 1051,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 1051, 1051, 1051,    0, 1051, 1051, 1051, 1051,
     1051, 1051, 1051, 1051,    0, 1051, 1051, 1051, 1051, 1052,

     1052, 1052, 1052, 1052, 1052, 1052, 1052,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 1052,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

     1052, 1052, 1052,    0, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052,    0, 1052, 1052, 1052, 1052, 1061, 1061,    0,
     1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 1061,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061,
     1061, 1061, 1061,    0, 1061, 1061, 1061, 1061, 1062, 1062,
        0, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 1062,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062,    0, 1062, 1062, 1062, 1062, 1134,
     1134,    0, 1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1134,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 1134, 1134, 1134, 1134, 1134, 1134, 1134,
     1134, 1134, 1134, 1134, 1134,    0, 1134, 1134, 1134, 1134,
     1135, 1135,    0, 1135, 1135, 1135, 1135, 1135, 1135, 1135,
     1135,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 1135,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1135, 1135, 1135, 1135, 1135, 1135,
     1135, 1135, 1135, 1135, 1135, 1135,    0, 1135, 1135, 1135,

     1135, 1156, 1156,    0, 1156, 1156, 1156, 1156, 1156, 1156,
     1156, 1156,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     1156,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0, 1156, 1156, 1156, 1156, 1156,
     1156, 1156, 1156, 1156, 1156, 1156, 1156,    0, 1156, 1156,
     1156, 1156, 1165, 1165,    0, 1165, 1165, 1165, 1165, 1165,
     1165, 1165, 1165, 1165,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0, 1165,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 1165, 1165, 1165, 1165,
     1165, 1165, 1165, 1165, 1165, 1165, 1165, 1165,    0, 1165,
     1165, 1165, 1165, 1169,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1169,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     1169,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 1169,    0, 1169, 1169,
     1169, 1169, 1169, 1169, 1169, 1169, 1169, 1169, 1169, 1169,
     1169, 1169, 1169, 1169, 1169, 1169, 1174,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 1174,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1174,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1174,    0, 1174, 1174, 1174, 1174,
     1174, 1174, 1174, 1174, 1174, 1174, 1174, 1174, 1174, 1174,

     1174, 1174, 1174, 1174, 1178, 1178,    0, 1178, 1178, 1178,
     1178, 1178, 1178, 1178, 1178, 1178,    0,    0,    0,    0,
        0,    0,    0,    0, 1178,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1178,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 1178,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0, 1178, 1178,
     1178, 1178, 1178, 1178, 1178, 1178, 1178, 1178, 1178, 1178,
        0, 1178, 1178, 1178, 1178, 1275, 1275, 1275, 1275, 1275,
     1275, 1275, 1275, 1275, 1275, 1275, 1275, 1275, 1275, 1275,
     1275, 1275, 1275, 1275, 1275, 1275, 1275, 1275, 1275, 1275,
     1283, 1283, 1283, 1283,    0,    0, 1283,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 1283,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0, 1283,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 1283,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 1283,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 1283,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1283,    0,
     1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283,
     1283, 1283, 1283, 1283, 1283, 1283, 1283, 1283, 1299, 1299,
     1299, 1299,    0,    0, 1299,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 1299,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 1299,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     1299,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0, 1299,    0, 1299, 1299,
     1299, 1299, 1299, 1299, 1299, 1299, 1299, 1299, 1299, 1299,
     1299, 1299, 1299, 1299, 1299, 1299, 1326, 1326, 1326, 1326,
        0,    0, 1326,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 1326,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1326,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 1326,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1326,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1326,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1326,    0, 1326, 1326, 1326, 1326,
     1326, 1326, 1326, 1326, 1326, 1326, 1326, 1326, 1326, 1326,
     1326, 1326, 1326, 1326, 1327, 1327, 1327, 1327,    0,    0,
     1327,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0, 1327,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 1327,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1327,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 1327,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 1327,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 1327,    0, 1327, 1327, 1327, 1327, 1327, 1327,
     1327, 1327, 1327, 1327, 1327, 1327, 1327, 1327, 1327, 1327,

     1327, 1327, 1342, 1342, 1342, 1342,    0,    0, 1342,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 1342,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0, 1342,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0, 1342,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     1342,    0, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342,
     1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342, 1342,
     1343, 1343, 1343, 1343,    0,    0, 1343,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0, 1343,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0, 1343,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 1343,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1343,    0,
     1343, 1343, 1343, 1343, 1343, 1343, 1343, 1343, 1343, 1343,
     1343, 1343, 1343, 1343, 1343, 1343, 1343, 1343, 1365, 1365,
     1365, 1365,    0,    0, 1365,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 1365,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     1365,    0,    0, 1365,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 1365,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     1365,    0,    0, 1365,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     1365,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 1365,    0, 1365, 1365,

     1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365, 1365,
     1365, 1365, 1365, 1365, 1365, 1365, 1366, 1366, 1366, 1366,
        0,    0, 1366,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 1366, 1366,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1366,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 1366, 1366,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0, 1366,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1366,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1366,    0, 1366, 1366, 1366, 1366,
     1366, 1366, 1366, 1366, 1366, 1366, 1366, 1366, 1366, 1366,
     1366, 1366, 1366, 1366, 1399,    0, 1399, 1399, 1399, 1399,
     1399, 1399, 1399, 1399, 1399,    0,    0, 1399,    0,    0,
     1399,    0, 1399, 1400,    0, 1400, 1400, 1400, 1400, 1400,
     1400, 1400, 1400, 1400,    0,    0, 1400,    0,    0, 1400,
        0, 1400, 1401,    0, 1401,    0, 1401, 1402,    0, 1402,

     1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402,    0,    0,
     1402,    0,    0, 1402,    0, 1402, 1403,    0, 1403,    0,
     1403, 1404,    0,    0, 1404, 1404, 1404, 1404, 1404, 1405,
     1405, 1405, 1405, 1405, 1405, 1405,    0, 1405,    0,    0,
     1405,    0,    0, 1405,    0, 1405, 1406,    0, 1406,    0,
     1406, 1408, 1408, 1408,    0, 1408, 1408, 1409, 1409, 1409,
     1409, 1409, 1409, 1410, 1410, 1410, 1410, 1410, 1410, 1411,
     1411, 1411, 1411, 1411, 1411, 1412, 1412, 1412, 1412, 1412,
     1412, 1413,    0, 1413, 1413, 1413, 1413, 1413, 1413, 1413,
     1413, 1413,    0,    0, 1413,    0,    0, 1413,    0, 1413,

     1414, 1414, 1414, 1414, 1414, 1415, 1415, 1415, 1415, 1416,
     1416, 1416, 1416, 1416, 1416, 1417, 1417, 1417, 1417, 1417,
     1417, 1418, 1418, 1418, 1418, 1418, 1418, 1419, 1419, 1419,
     1419, 1419, 1419, 1420,    0, 1420, 1420, 1420, 1420, 1420,
     1420, 1420, 1420, 1420,    0,    0, 1420,    0,    0, 1420,
        0, 1420, 1421, 1421, 1421, 1421, 1421, 1422, 1422, 1422,
     1422, 1423, 1423, 1423, 1423, 1423, 1423, 1424, 1424, 1424,
     1424, 1424, 1424, 1425, 1425, 1425, 1425, 1425, 1425, 1426,
     1426, 1426, 1426, 1426, 1426, 1427,    0, 1427,    0, 1427,
        0, 1427,    0,    0,    0,    0,    0, 1427, 1428, 1428,

     1428,    0, 1428, 1428, 1429, 1429, 1429, 1429, 1429, 1429,
     1430, 1430, 1430, 1430, 1430, 1430, 1431, 1431, 1431, 1431,
     1431, 1431, 1432, 1432, 1432, 1432, 1432, 1432, 1433,    0,
     1433, 1433, 1433, 1433, 1433, 1433, 1433, 1433, 1433,    0,
        0, 1433,    0,    0, 1433,    0, 1433, 1434, 1434, 1434,
     1434, 1434, 1435, 1435, 1435, 1435, 1436, 1436, 1436, 1436,
     1436, 1436, 1437, 1437, 1437, 1437, 1437, 1437, 1438, 1438,
     1438, 1438, 1438, 1438, 1439, 1439, 1439, 1439, 1439, 1439,
     1440,    0, 1440,    0, 1440,    0, 1440,    0,    0,    0,
        0,    0, 1440, 1441, 1441, 1441,    0, 1441, 1441, 1442,

     1442, 1442, 1442, 1442, 1442, 1443, 1443, 1443, 1443, 1443,
     1443, 1444, 1444, 1444, 1444, 1444, 1444, 1445, 1445, 1445,
     1445, 1445, 1445, 1446, 1446, 1446, 1446, 1446, 1446, 1446,
     1446,    0, 1446,    0,    0,    0,    0,    0, 1446, 1447,
     1447, 1447,    0, 1447, 1447, 1448, 1448, 1448, 1448, 1448,
     1448, 1449, 1449, 1449, 1449, 1449, 1449, 1450, 1450, 1450,
     1450, 1450, 1450, 1451, 1451, 1451, 1451, 1451, 1451, 1452,
     1452, 1452, 1452, 1452, 1452, 1452,    0, 1452,    0,    0,
     1452,    0,    0, 1452,    0, 1452, 1453, 1453, 1453, 1453,
     1453, 1454, 1454, 1454, 1454, 1455, 1455, 1455, 1455, 1455,

     1455, 1456, 1456, 1456, 1456, 1456, 1456, 1457, 1457, 1457,
     1457, 1457, 1457, 1458, 1458, 1458, 1458, 1458, 1458, 1459,
        0, 1459,    0, 1459,    0, 1459,    0,    0,    0,    0,
        0, 1459, 1460, 1460, 1460,    0, 1460, 1460, 1461, 1461,
     1461, 1461, 1461, 1461, 1462, 1462, 1462, 1462, 1462, 1462,
     1463, 1463, 1463, 1463, 1463, 1463, 1464, 1464, 1464, 1464,
     1464, 1464, 1466, 1466, 1466, 1466, 1466,    0, 1466,    0,
     1466,    0,    0,    0,    0,    0, 1466, 1467,    0,    0,
     1467, 1467, 1467, 1467, 1467, 1468, 1468, 1468,    0, 1468,
     1468, 1469, 1469, 1469, 1469, 1469, 1469, 1470, 1470, 1470,

     1470, 1470, 1470, 1471, 1471, 1471, 1471, 1471, 1471, 1472,
     1472, 1472, 1472, 1472, 1472, 1473, 1473, 1473, 1473, 1473,
     1473, 1474,    0, 1474,    0, 1474, 1475, 1475, 1475, 1475,
     1475, 1475, 1476, 1476, 1476, 1476, 1476, 1476, 1477, 1477,
     1477, 1477, 1477, 1477, 1478, 1478, 1478, 1478, 1478, 1478,
     1479, 1479, 1479, 1479, 1479, 1479, 1480, 1480, 1480, 1480,
     1480, 1480, 1481, 1481, 1481, 1481, 1481, 1481, 1482, 1482,
     1482, 1482, 1482, 1482, 1483, 1483, 1483, 1483, 1483, 1483,
     1484, 1484, 1484, 1484, 1484, 1484, 1485, 1485, 1485, 1485,
     1485, 1485, 1485, 1485, 1485, 1485, 1485,    0,    0, 1485,

        0,    0, 1485,    0, 1485, 1486, 1486, 1486, 1486, 1486,
     1486, 1487, 1487, 1487, 1487, 1487, 1487, 1488, 1488, 1488,
     1488, 1488, 1488, 1489, 1489, 1489, 1489, 1489, 1489, 1490,
     1490, 1490, 1490, 1490, 1490, 1491, 1491, 1491, 1491, 1491,
     1491, 1492, 1492, 1492, 1492, 1492, 1492, 1493, 1493, 1493,
     1493, 1493, 1493, 1494, 1494, 1494, 1494, 1494, 1494, 1495,
     1495, 1495, 1495, 1495, 1495, 1496, 1496, 1496, 1496, 1496,
     1496, 1497, 1497, 1497, 1497, 1497, 1497, 1498,    0, 1498,
        0, 1498,    0, 1498,    0,    0,    0,    0,    0, 1498,
     1499, 1499, 1499,    0, 1499, 1499, 1500, 1500, 1500, 1500,

        0, 1500, 1501, 1501, 1501, 1501, 1501, 1501, 1502, 1502,
     1502, 1502, 1502, 1502, 1503, 1503, 1503, 1503, 1503, 1503,
     1504, 1504, 1504, 1504, 1504, 1504, 1505, 1505, 1505, 1505,
     1505, 1505, 1506, 1506, 1506, 1506, 1506, 1506, 1507, 1507,
     1507, 1507, 1507, 1507, 1508, 1508, 1508, 1508, 1508, 1508,
     1509, 1509, 1509, 1509, 1509, 1509, 1510, 1510, 1510, 1510,
     1510, 1510, 1511, 1511, 1511, 1511, 1511, 1511, 1512, 1512,
     1512, 1512, 1512, 1512, 1513, 1513, 1513, 1513, 1513, 1513,
     1514, 1514, 1514, 1514, 1514, 1514, 1515, 1515, 1515, 1515,
     1515, 1515, 1515, 1515, 1515, 1515, 1515,    0,    0, 1515,

        0,    0, 1515,    0, 1515, 1516, 1516, 1516, 1516, 1516,
     1516, 1517, 1517, 1517, 1517, 1517, 1517, 1518, 1518, 1518,
     1518, 1518, 1518, 1519, 1519, 1519, 1519, 1519, 1519, 1520,
     1520, 1520, 1520, 1520, 1520, 1521, 1521, 1521, 1521, 1521,
     1521, 1522,    0, 1522,    0, 1522,    0, 1522,    0,    0,
        0,    0,    0, 1522, 1523, 1523, 1523,    0, 1523, 1523,
     1524, 1524, 1524, 1524,    0, 1524, 1525, 1525, 1525, 1525,
     1525, 1525, 1526, 1526, 1526, 1526, 1526, 1526, 1527, 1527,
     1527, 1527, 1527, 1527, 1528, 1528, 1528, 1528, 1528, 1528,
     1529, 1529, 1529, 1529, 1529, 1529, 1530, 1530, 1530, 1530,

     1530, 1530, 1531, 1531, 1531, 1531, 1531, 1531, 1532, 1532,
     1532, 1532, 1532, 1532, 1533, 1533, 1533, 1533, 1533, 1533,
     1534, 1534, 1534, 1534, 1534, 1534, 1535, 1535, 1535, 1535,
     1535, 1535, 1536, 1536, 1536, 1536, 1536, 1536, 1537, 1537,
     1537, 1537, 1537, 1537, 1538, 1538, 1538, 1538, 1538, 1538,
     1539, 1539, 1539, 1539, 1539, 1539, 1539, 1539,    0, 1539,
        0,    0,    0,    0,    0, 1539, 1540, 1540, 1540,    0,
     1540, 1540, 1541, 1541, 1541, 1541, 1541, 1541, 1542, 1542,
     1542, 1542, 1542, 1542, 1543, 1543, 1543, 1543, 1543, 1543,
     1544, 1544, 1544, 1544, 1544, 1544, 1545, 1545, 1545, 1545,

     1545, 1545, 1546, 1546, 1546, 1546, 1546, 1546, 1547, 1547,
     1547, 1547, 1547, 1547, 1548, 1548, 1548, 1548, 1548, 1548,
     1549, 1549, 1549, 1549, 1549, 1549, 1550, 1550, 1550, 1550,
     1550, 1550, 1551, 1551, 1551, 1551, 1551, 1551, 1552, 1552,
     1552, 1552, 1552, 1552, 1553, 1553, 1553, 1553, 1553, 1553,
     1554, 1554, 1554, 1554, 1554, 1554, 1555, 1555, 1555, 1555,
     1555, 1555, 1556, 1556, 1556, 1556, 1556, 1556, 1557, 1557,
     1557, 1557, 1557, 1557, 1558, 1558, 1558, 1558, 1558, 1558,
     1559, 1559, 1559, 1559, 1559, 1559, 1560, 1560, 1560, 1560,
     1560, 1560, 1561, 1561, 1561, 1561, 1561, 1561, 1562,    0,

     1562,    0, 1562,    0, 1562,    0,    0,    0,    0,    0,
     1562, 1563, 1563, 1563,    0, 1563, 1563, 1564, 1564, 1564,
     1564,    0, 1564, 1565, 1565, 1565, 1565, 1565, 1565, 1566,
     1566, 1566, 1566, 1566, 1566, 1567, 1567, 1567, 1567, 1567,
     1567, 1568, 1568, 1568, 1568, 1568, 1568, 1569, 1569, 1569,
     1569, 1569, 1569, 1570, 1570, 1570, 1570, 1570, 1570, 1571,
     1571, 1571, 1571, 1571, 1571, 1572, 1572, 1572, 1572, 1572,
     1572, 1573, 1573, 1573, 1573, 1573, 1573, 1574, 1574, 1574,
     1574, 1574, 1574, 1575, 1575, 1575, 1575, 1575, 1575, 1576,
     1576, 1576, 1576, 1576, 1576, 1577, 1577, 1577, 1577, 1577,

     1577, 1578, 1578, 1578, 1578, 1578, 1578, 1580, 1580, 1580,
     1580, 1580,    0, 1580,    0, 1580,    0,    0,    0,    0,
        0, 1580, 1581, 1581, 1581, 1581, 1581, 1581, 1582, 1582,
     1582, 1582, 1582, 1582, 1583, 1583, 1583, 1583, 1583, 1583,
     1584, 1584, 1584, 1584, 1584, 1584, 1585, 1585, 1585, 1585,
     1585, 1585, 1586, 1586, 1586, 1586, 1586, 1586, 1587, 1587,
     1587, 1587, 1587, 1587, 1588, 1588, 1588, 1588, 1588, 1588,
     1589, 1589, 1589, 1589, 1589, 1589, 1590, 1590, 1590, 1590,
     1590, 1590, 1591, 1591, 1591,    0, 1591,    0, 1591,    0,
     1591,    0,    0,    0,    0,    0, 1591, 1592, 1592, 1592,

        0, 1592, 1592, 1593, 1593, 1593, 1593, 1593, 1593, 1594,
     1594, 1594, 1594, 1594, 1594, 1595, 1595, 1595, 1595, 1595,
     1595, 1596, 1596, 1596, 1596, 1596, 1596, 1597, 1597, 1597,
     1597, 1597, 1597, 1598, 1598, 1598, 1598, 1598, 1598, 1598,
     1598, 1598, 1598, 1598,    0,    0, 1598,    0,    0, 1598,
        0, 1598, 1599, 1599, 1599, 1599, 1599, 1600, 1600, 1600,
     1600, 1601, 1601, 1601, 1601, 1601, 1601, 1602, 1602, 1602,
     1602, 1602, 1602, 1603, 1603, 1603, 1603, 1603, 1603, 1604,
     1604, 1604, 1604, 1604, 1604, 1605,    0, 1605, 1605, 1605,
     1605, 1605, 1605, 1605, 1605, 1605,    0,    0, 1605,    0,

        0, 1605,    0, 1605, 1606, 1606, 1606, 1606, 1606, 1606,
     1607, 1607, 1607, 1607, 1607, 1607, 1608,    0, 1608, 1608,
     1608, 1608, 1608, 1608, 1608, 1608, 1608,    0,    0, 1608,
        0,    0, 1608,    0, 1608, 1609, 1609, 1609, 1609, 1609,
     1609, 1610, 1610, 1610, 1610, 1610, 1610, 1611, 1611, 1611,
     1611, 1611, 1611, 1612, 1612, 1612, 1612, 1612, 1612, 1613,
     1613, 1613, 1613, 1613, 1613, 1614, 1614, 1614, 1614, 1614,
     1614, 1615, 1615, 1615, 1615, 1615, 1615, 1616, 1616, 1616,
     1616, 1616, 1616, 1617, 1617, 1617, 1617, 1617, 1617, 1618,
     1618, 1618, 1618, 1618, 1618, 1619, 1619, 1619, 1619, 1619,

     1619, 1620, 1620, 1620, 1620, 1620, 1620, 1621,    0, 1621,
        0, 1621,    0, 1621,    0,    0,    0,    0,    0, 1621,
     1622, 1622, 1622, 1622, 1622, 1622, 1623, 1623, 1623, 1623,
     1623, 1623, 1623, 1623, 1623, 1623, 1623,    0,    0, 1623,
        0,    0, 1623,    0, 1623, 1624, 1624, 1624, 1624, 1624,
     1625, 1625, 1625, 1625, 1626, 1626, 1626, 1626, 1626, 1626,
     1627, 1627, 1627, 1627, 1627, 1627, 1628, 1628, 1628, 1628,
     1628, 1628, 1629, 1629, 1629, 1629, 1629, 1629, 1630,    0,
     1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630,    0,
        0, 1630,    0,    0, 1630,    0, 1630, 1631, 1631, 1631,

     1631, 1631, 1631, 1632, 1632, 1632, 1632, 1632, 1632, 1633,
     1633, 1633, 1633, 1633, 1633, 1634, 1634, 1634, 1634, 1634,
     1634, 1635, 1635, 1635, 1635, 1635, 1635, 1636, 1636, 1636,
     1636, 1636, 1636, 1637, 1637, 1637, 1637, 1637, 1637, 1638,
     1638, 1638, 1638, 1638, 1638, 1639, 1639, 1639, 1639, 1639,
     1639, 1640, 1640, 1640, 1640, 1640, 1640, 1641, 1641, 1641,
     1641, 1641, 1641, 1642, 1642, 1642, 1642, 1642, 1642, 1643,
        0, 1643,    0, 1643,    0, 1643,    0,    0,    0,    0,
        0, 1643, 1644, 1644, 1644, 1644, 1644, 1644, 1645, 1645,
     1645, 1645, 1645, 1645, 1645, 1645,    0, 1645,    0,    0,

        0,    0,    0, 1645, 1646, 1646, 1646, 1646, 1646, 1646,
     1647, 1647, 1647, 1647, 1647, 1647, 1648, 1648, 1648, 1648,
     1648, 1648, 1649, 1649, 1649, 1649, 1649, 1649, 1650, 1650,
     1650, 1650, 1650, 1650, 1651, 1651, 1651, 1651, 1651, 1651,
     1652, 1652, 1652, 1652, 1652, 1652, 1653, 1653, 1653, 1653,
     1653, 1653, 1654, 1654, 1654, 1654, 1654, 1654, 1655, 1655,
     1655, 1655, 1655, 1655, 1656, 1656, 1656, 1656, 1656, 1656,
     1657, 1657, 1657, 1657, 1657, 1657, 1657,    0, 1657,    0,
        0, 1657,    0,    0, 1657,    0, 1657, 1658, 1658, 1658,
     1658, 1658, 1658, 1659, 1659, 1659, 1659, 1659, 1659, 1660,

     1660, 1660, 1660, 1660, 1660, 1661, 1661, 1661, 1661, 1661,
     1661, 1662, 1662, 1662, 1662, 1662, 1662, 1663, 1663, 1663,
     1663, 1663, 1663, 1664, 1664, 1664, 1664, 1664, 1664, 1665,
     1665, 1665, 1665, 1665, 1665, 1666, 1666, 1666, 1666, 1666,
     1666, 1667, 1667, 1667, 1667, 1667, 1667, 1668, 1668, 1668,
     1668, 1668, 1668, 1669, 1669, 1669, 1669, 1669, 1669, 1670,
        0, 1670,    0, 1670,    0, 1670,    0,    0,    0,    0,
        0, 1670, 1671, 1671, 1671, 1671, 1671, 1671, 1672,    0,
     1672,    0, 1672, 1673, 1673, 1673, 1673, 1673,    0, 1673,
        0, 1673,    0,    0,    0,    0,    0, 1673, 1674, 1674,

     1674, 1674, 1674, 1674, 1675, 1675, 1675,    0, 1675,    0,
     1675,    0, 1675,    0,    0,    0,    0,    0, 1675, 1676,
     1676, 1676,    0, 1676, 1676, 1677, 1677, 1677, 1677, 1677,
     1677, 1678, 1678, 1678, 1678, 1678, 1678, 1679, 1679, 1679,
     1679, 1679, 1679, 1680, 1680, 1680, 1680, 1680, 1680, 1681,
     1681, 1681, 1681, 1681, 1681, 1682, 1682, 1682, 1682, 1682,
     1682, 1683, 1683, 1683, 1683, 1683, 1683, 1684, 1684, 1684,
     1684, 1684, 1684, 1685, 1685, 1685, 1685, 1685, 1685, 1686,
     1686, 1686, 1686, 1686, 1686, 1687, 1687, 1687, 1687, 1687,
     1687, 1688, 1688, 1688, 1688, 1688, 1688, 1689, 1689, 1689,

     1689, 1689, 1689, 1690, 1690, 1690, 1690, 1690, 1690, 1691,
     1691, 1691, 1691, 1691, 1691, 1692, 1692, 1692, 1692, 1692,
        0, 1692,    0, 1692,    0,    0,    0,    0,    0, 1692,
     1693, 1693, 1693, 1693, 1693, 1693, 1693, 1693, 1693, 1693,
     1693,    0,    0, 1693,    0,    0, 1693,    0, 1693, 1694,
     1694, 1694, 1694, 1694, 1694, 1695, 1695, 1695, 1695, 1695,
     1695, 1696, 1696, 1696, 1696, 1696, 1696, 1697, 1697, 1697,
     1697, 1697, 1697, 1698, 1698, 1698, 1698, 1698, 1698, 1699,
     1699, 1699, 1699, 1699, 1699, 1700,    0, 1700,    0, 1700,
        0, 1700,    0,    0,    0,    0,    0, 1700, 1701, 1701,

     1701, 1701, 1701, 1701, 1702, 1702, 1702, 1702, 1702, 1702,
     1702, 1702, 1702, 1702, 1702,    0,    0, 1702,    0,    0,
     1702,    0, 1702, 1703, 1703, 1703, 1703, 1703, 1703, 1704,
     1704, 1704, 1704, 1704, 1704, 1705, 1705, 1705, 1705, 1705,
     1705, 1706, 1706, 1706, 1706, 1706, 1706, 1707, 1707, 1707,
     1707, 1707, 1707, 1708, 1708, 1708, 1708, 1708, 1708, 1709,
        0, 1709,    0, 1709,    0, 1709,    0,    0,    0,    0,
        0, 1709, 1710, 1710, 1710, 1710, 1710, 1710, 1711, 1711,
     1711, 1711, 1711, 1711, 1711, 1711,    0, 1711,    0,    0,
        0,    0,    0, 1711, 1712, 1712, 1712, 1712, 1712, 1712,

     1713,    0, 1713,    0, 1713,    0, 1713,    0,    0,    0,
        0,    0, 1713, 1714, 1714, 1714, 1714, 1714, 1714, 1715,
     1715, 1715, 1715, 1715,    0, 1715,    0, 1715,    0,    0,
        0,    0,    0, 1715, 1716, 1716, 1716,    0, 1716,    0,
     1716,    0, 1716,    0,    0,    0,    0,    0, 1716, 1717,
     1717, 1717, 1717, 1717, 1717, 1718, 1718, 1718, 1718, 1718,
     1718, 1719, 1719, 1719, 1719, 1719, 1719, 1720, 1720, 1720,
     1720, 1720, 1720, 1721, 1721, 1721, 1721, 1721, 1721, 1722,
     1722, 1722, 1722, 1722, 1722, 1723, 1723, 1723, 1723, 1723,
     1723, 1724, 1724, 1724, 1724, 1724, 1724, 1725, 1725, 1725,

     1725, 1725, 1725, 1726, 1726, 1726, 1726, 1726, 1726, 1727,
     1727, 1727, 1727, 1727, 1727, 1728, 1728, 1728, 1728, 1728,
        0, 1728,    0, 1728,    0,    0,    0,    0,    0, 1728,
     1729, 1729, 1729, 1729, 1729, 1729, 1730, 1730, 1730, 1730,
     1730, 1730, 1730, 1730, 1730, 1730, 1730,    0,    0, 1730,
        0,    0, 1730,    0, 1730, 1731, 1731, 1731, 1731, 1731,
     1731, 1732, 1732, 1732, 1732, 1732, 1732, 1733, 1733, 1733,
     1733, 1733, 1733, 1733, 1733, 1733, 1733, 1733,    0,    0,
     1733,    0,    0, 1733,    0, 1733, 1734, 1734, 1734, 1734,
     1734, 1734, 1735, 1735, 1735, 1735, 1735, 1735, 1736, 1736,

     1736, 1736, 1736, 1736, 1737,    0, 1737, 1737, 1737, 1737,
     1737, 1737, 1737, 1737, 1737,    0,    0, 1737,    0,    0,
     1737,    0, 1737, 1738,    0, 1738, 1738, 1738, 1738, 1738,
     1738, 1738, 1738, 1738,    0,    0, 1738,    0,    0, 1738,
        0, 1738, 1739, 1739, 1739, 1739, 1739, 1740, 1740, 1740,
     1740, 1741, 1741, 1741, 1741, 1741, 1741, 1742, 1742, 1742,
     1742, 1742, 1742, 1743, 1743, 1743, 1743, 1743, 1743, 1744,
     1744, 1744, 1744, 1744, 1744, 1745, 1745, 1745, 1745, 1745,
     1746, 1746, 1746, 1746, 1747, 1747, 1747, 1747, 1747, 1747,
     1748, 1748, 1748, 1748, 1748, 1748, 1749, 1749, 1749, 1749,

     1749, 1749, 1750, 1750, 1750, 1750, 1750, 1750, 1751, 1751,
     1751, 1751, 1751, 1751, 1752, 1752, 1752, 1752, 1752, 1752,
     1752, 1752, 1752, 1752, 1752,    0,    0, 1752,    0,    0,
     1752,    0, 1752, 1753, 1753, 1753, 1753, 1753, 1753, 1754,
     1754, 1754, 1754, 1754, 1754, 1755, 1755, 1755, 1755, 1755,
     1755, 1756, 1756, 1756, 1756, 1756, 1756, 1757, 1757, 1757,
     1757, 1757, 1757, 1758, 1758, 1758, 1758, 1758, 1758, 1759,
     1759, 1759, 1759, 1759, 1759, 1759, 1759, 1759, 1759, 1759,
        0,    0, 1759,    0,    0, 1759,    0, 1759, 1760, 1760,
     1760, 1760, 1760, 1760, 1761, 1761, 1761, 1761, 1761, 1761,

     1762, 1762, 1762, 1762, 1762, 1762, 1763, 1763, 1763, 1763,
     1763, 1763, 1764, 1764, 1764, 1764, 1764, 1764, 1765, 1765,
     1765, 1765, 1765, 1765, 1766, 1766, 1766, 1766, 1766, 1766,
     1766, 1766, 1766, 1766, 1766,    0,    0, 1766,    0,    0,
     1766,    0, 1766, 1767, 1767, 1767, 1767, 1767, 1767, 1768,
     1768, 1768, 1768, 1768, 1768, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,

     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398, 1398,
     1398, 1398, 1398, 1398, 1398

    } ;

static yyconst flex_int16_t yy_rule_linenum[181] =
    {   0,
      267,  268,  269,  270,  271,  272,  273,  274,  275,  276,
      277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
      287,  288,  289,  290,  291,  292,  293,  294,  295,  296,
      297,  298,  299,  300,  301,  302,  303,  304,  305,  306,
      307,  308,  309,  310,  311,  312,  313,  314,  315,  316,
      317,  318,  319,  320,  321,  322,  323,  324,  325,  326,
      327,  328,  329,  330,  331,  332,  333,  334,  335,  336,
      337,  338,  339,  340,  341,  342,  343,  344,  345,  346,
      347,  348,  349,  350,  351,  352,  353,  354,  355,  356,
      357,  358,  359,  360,  361,  362,  363,  364,  365,  366,

      367,  368,  369,  370,  371,  372,  373,  374,  375,  376,
      377,  378,  379,  380,  381,  382,  383,  384,  385,  386,
      387,  388,  389,  390,  391,  392,  393,  394,  395,  396,
      397,  398,  399,  400,  401,  402,  403,  404,  405,  406,
      407,  408,  409,  410,  411,  412,  413,  414,  415,  416,
      417,  418,  419,  420,  421,  422,  423,  424,  425,  426,
      427,  428,  429,  430,  431,  432,  433,  434,  435,  436,
      437,  438,  439,  440,  441,  442,  443,  444,  445,  448
    } ;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
#line 1 "lib/SPARQLfedScanner.lpp"
/* $Id: SPARQLfedScanner.lpp,v 1.4 2008-10-03 07:06:03 eric Exp $ -*- mode: c++ -*- */
/* from yacker grammar http://www.w3.org/2005/01/yacker/uploads/SPARUL_EGP/SPARUL_EGPScanner.ll */
/** Flex scanner for SPARQL + SPARUL */
#line 6 "lib/SPARQLfedScanner.lpp"

#include "SPARQLfedParser/SPARQLfedParser.hpp"
#include "SPARQLfedScanner.hpp"

/* import the parser's token type into a local typedef */
typedef w3c_sw::SPARQLfedParser::token token;
typedef w3c_sw::SPARQLfedParser::token_type token_type;

/* Work around an incompatibility in flex (at least versions 2.5.31 through
 * 2.5.33): it generates code that does not conform to C89.  See Debian bug
 * 333231 <http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=333231>.  */
// #undef yywrap	// ##flex2.5
// #define yywrap() 1	// ##flex2.5

/* By default yylex returns int, we use token_type. Unfortunately yyterminate
 * by default returns 0, which is not of token_type. */
#define yyterminate() return token::__EOF__

/* This disables inclusion of unistd.h, which is not available under Visual C++
 * on Win32. The C++ scanner uses STL streams instead. */
#define YY_NO_UNISTD_H

/*** Flex Declarations and Options ***/
/* enable c++ scanner class generation */
/* change the name of the scanner class. results in "SPARQLfedFlexLexer" */
/* consider using class instead
 * %option yyclass="SPARQLfedScanner"
 * void SPARQLfedFlexLexer::LexerError( yyconst char msg[] )
 */
/* the manual says "somewhat more optimized" */
/* enable scanner to generate debug output. disable this for release
 * versions. */
/* no support for include files is planned */
/* enables the use of start condition stacks */
/* The following paragraph suffices to track locations accurately. Each time
 * yylex is invoked, the begin position is moved onto the end position. */
#line 61 "lib/SPARQLfedScanner.lpp"
#define YY_USER_ACTION  yylloc->columns(yyleng);
#define YY_FATAL_ERROR(msg) do {		\
    throw msg;   \
} while(0)
/* START patterns for SPARUL_EGP terminals */
/* <STRING_LITERAL_LONG2> ::= "'''" (( (( "'" | "''" ))? ( [^'\\] | ECHAR ) ))* "'''" */
/* END patterns for SPARUL_EGP terminals */
/* START semantic actions for SPARUL_EGP terminals */
#line 4085 "lib/SPARQLfedScanner.cpp"

#define INITIAL 0

#ifndef YY_NO_UNISTD_H
/* Special case for "unistd.h", since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
#include <unistd.h>
/* %endif */
#endif

#ifndef YY_EXTRA_TYPE
#define YY_EXTRA_TYPE void *
#endif

/* %if-c-only Reentrant structure and macros (non-C++). */
/* %if-reentrant */
/* %if-c-only */
/* %endif */
/* %if-reentrant */
/* %endif */
/* %endif End reentrant structures and macros. */
/* %if-bison-bridge */
/* %endif */
/* %not-for-header */

/* %ok-for-header */

/* %endif */

#ifndef yytext_ptr
static void yy_flex_strncpy (char *,yyconst char *,int );
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * );
#endif

#ifndef YY_NO_INPUT
/* %if-c-only Standard (non-C++) definition */
/* %not-for-header */

/* %ok-for-header */

/* %endif */
#endif

/* %if-c-only */
/* %endif */

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k */
#define YY_READ_BUF_SIZE 16384
#else
#define YY_READ_BUF_SIZE 8192
#endif /* __ia64__ */
#endif

/* Copy whatever the last rule matched to the standard output. */
#ifndef ECHO
/* %if-c-only Standard (non-C++) definition */
/* %endif */
/* %if-c++-only C++ definition */
#define ECHO LexerOutput( yytext, yyleng )
/* %endif */
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
/* %% [5.0] fread()/read() definition of YY_INPUT goes here unless we're doing C++ \ */\
\
/* %if-c++-only C++ definition \ */\
	if ( (result = LexerInput( (char *) buf, max_size )) < 0 ) \
		YY_FATAL_ERROR( "input in flex scanner failed" );
/* %endif */

#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
/* %if-c-only */
/* %endif */
/* %if-c++-only */
#define YY_FATAL_ERROR(msg) LexerError( msg )
/* %endif */
#endif

/* %if-tables-serialization structures and prototypes */
/* %not-for-header */

/* %ok-for-header */

/* %not-for-header */

/* %tables-yydmap generated elements */
/* %endif */
/* end tables serialization structures and prototypes */

/* %ok-for-header */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1
/* %if-c-only Standard (non-C++) definition */
/* %endif */
/* %if-c++-only C++ definition */
#define YY_DECL int yyFlexLexer::yylex()
/* %endif */
#endif /* !YY_DECL */

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK break;
#endif

/* %% [6.0] YY_RULE_SETUP definition goes here */
#define YY_RULE_SETUP \
	YY_USER_ACTION

/* %not-for-header */

/** The main scanner function which does all the work.
 */
YY_DECL
{
	register yy_state_type yy_current_state;
	register char *yy_cp, *yy_bp;
	register int yy_act;
    
/* %% [7.0] user's declarations go here */
#line 266 "lib/SPARQLfedScanner.lpp"

#line 4249 "lib/SPARQLfedScanner.cpp"

	if ( !(yy_init) )
		{
		(yy_init) = 1;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! (yy_start) )
			(yy_start) = 1;	/* first start state */

		if ( ! yyin )
/* %if-c-only */
/* %endif */
/* %if-c++-only */
			yyin = & std::cin;
/* %endif */

		if ( ! yyout )
/* %if-c-only */
/* %endif */
/* %if-c++-only */
			yyout = & std::cout;
/* %endif */

		if ( ! YY_CURRENT_BUFFER ) {
			yyensure_buffer_stack ();
			YY_CURRENT_BUFFER_LVALUE =
				yy_create_buffer( yyin, YY_BUF_SIZE );
		}

		yy_load_buffer_state(  );
		}

	while ( 1 )		/* loops until end-of-file is reached */
		{
/* %% [8.0] yymore()-related code goes here */
		yy_cp = (yy_c_buf_p);

		/* Support of yytext. */
		*yy_cp = (yy_hold_char);

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

/* %% [9.0] code to set up and find next match goes here */
		yy_current_state = (yy_start);
yy_match:
		do
			{
			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
			if ( yy_accept[yy_current_state] )
				{
				(yy_last_accepting_state) = yy_current_state;
				(yy_last_accepting_cpos) = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 1399 )
					yy_c = yy_meta[(unsigned int) yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			++yy_cp;
			}
		while ( yy_current_state != 1398 );
		yy_cp = (yy_last_accepting_cpos);
		yy_current_state = (yy_last_accepting_state);

yy_find_action:
/* %% [10.0] code to find the action number goes here */
		yy_act = yy_accept[yy_current_state];

		YY_DO_BEFORE_ACTION;

/* %% [11.0] code for yylineno update goes here */

do_action:	/* This label is used only to access EOF actions. */

/* %% [12.0] debug code goes here */
		if ( yy_flex_debug )
			{
			if ( yy_act == 0 )
				std::cerr << "--scanner backing up\n";
			else if ( yy_act < 181 )
				std::cerr << "--accepting rule at line " << yy_rule_linenum[yy_act] <<
				         "(\"" << yytext << "\")\n";
			else if ( yy_act == 181 )
				std::cerr << "--accepting default rule (\"" << yytext << "\")\n";
			else if ( yy_act == 182 )
				std::cerr << "--(end of buffer or a NUL)\n";
			else
				std::cerr << "--EOF (start condition " << YY_START << ")\n";
			}

		switch ( yy_act )
	{ /* beginning of action switch */
/* %% [13.0] actions go here */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = (yy_hold_char);
			yy_cp = (yy_last_accepting_cpos);
			yy_current_state = (yy_last_accepting_state);
			goto yy_find_action;

case 1:
/* rule 1 can match eol */
YY_RULE_SETUP
#line 267 "lib/SPARQLfedScanner.lpp"
{ yylloc->end.lines(1); }
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 268 "lib/SPARQLfedScanner.lpp"
{ yylloc->step(); /* @@ needed? useful? */ }
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 269 "lib/SPARQLfedScanner.lpp"
{return token::GT_EQUAL;}
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 270 "lib/SPARQLfedScanner.lpp"
{return token::GT_DOT;}
	YY_BREAK
case 5:
YY_RULE_SETUP
#line 271 "lib/SPARQLfedScanner.lpp"
{return token::GT_PIPE;}
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 272 "lib/SPARQLfedScanner.lpp"
{return token::GT_H_2502_;}
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 273 "lib/SPARQLfedScanner.lpp"
{return token::GT_LCURLEY;}
	YY_BREAK
case 8:
YY_RULE_SETUP
#line 274 "lib/SPARQLfedScanner.lpp"
{return token::GT_RCURLEY;}
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 275 "lib/SPARQLfedScanner.lpp"
{return token::GT_LPAREN;}
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 276 "lib/SPARQLfedScanner.lpp"
{return token::GT_RPAREN;}
	YY_BREAK
case 11:
YY_RULE_SETUP
#line 277 "lib/SPARQLfedScanner.lpp"
{return token::GT_COMMA;}
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 278 "lib/SPARQLfedScanner.lpp"
{return token::GT_MINUS_GT;}
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 279 "lib/SPARQLfedScanner.lpp"
{return token::GT_H_2192_;}
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 280 "lib/SPARQLfedScanner.lpp"
{return token::IT_BASE;}
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 281 "lib/SPARQLfedScanner.lpp"
{return token::IT_PREFIX;}
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 282 "lib/SPARQLfedScanner.lpp"
{return token::IT_SELECT;}
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 283 "lib/SPARQLfedScanner.lpp"
{return token::IT_DISTINCT;}
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 284 "lib/SPARQLfedScanner.lpp"
{return token::IT_REDUCED;}
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 285 "lib/SPARQLfedScanner.lpp"
{return token::IT_AS;}
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 286 "lib/SPARQLfedScanner.lpp"
{return token::GT_TIMES;}
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 287 "lib/SPARQLfedScanner.lpp"
{return token::IT_CONSTRUCT;}
	YY_BREAK
case 22:
YY_RULE_SETUP
#line 288 "lib/SPARQLfedScanner.lpp"
{return token::IT_WHERE;}
	YY_BREAK
case 23:
YY_RULE_SETUP
#line 289 "lib/SPARQLfedScanner.lpp"
{return token::IT_DESCRIBE;}
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 290 "lib/SPARQLfedScanner.lpp"
{return token::IT_ASK;}
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 291 "lib/SPARQLfedScanner.lpp"
{return token::IT_FROM;}
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 292 "lib/SPARQLfedScanner.lpp"
{return token::IT_NAMED;}
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 293 "lib/SPARQLfedScanner.lpp"
{return token::IT_GROUP;}
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 294 "lib/SPARQLfedScanner.lpp"
{return token::IT_BY;}
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 295 "lib/SPARQLfedScanner.lpp"
{return token::IT_HAVING;}
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 296 "lib/SPARQLfedScanner.lpp"
{return token::IT_ORDER;}
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 297 "lib/SPARQLfedScanner.lpp"
{return token::IT_ASC;}
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 298 "lib/SPARQLfedScanner.lpp"
{return token::IT_DESC;}
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 299 "lib/SPARQLfedScanner.lpp"
{return token::IT_LIMIT;}
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 300 "lib/SPARQLfedScanner.lpp"
{return token::IT_OFFSET;}
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 301 "lib/SPARQLfedScanner.lpp"
{return token::IT_VALUES;}
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 302 "lib/SPARQLfedScanner.lpp"
{return token::GT_SEMI;}
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 303 "lib/SPARQLfedScanner.lpp"
{return token::IT_LOAD;}
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 304 "lib/SPARQLfedScanner.lpp"
{return token::IT_SILENT;}
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 305 "lib/SPARQLfedScanner.lpp"
{return token::IT_INTO;}
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 306 "lib/SPARQLfedScanner.lpp"
{return token::IT_CLEAR;}
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 307 "lib/SPARQLfedScanner.lpp"
{return token::IT_DROP;}
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 308 "lib/SPARQLfedScanner.lpp"
{return token::IT_CREATE;}
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 309 "lib/SPARQLfedScanner.lpp"
{return token::IT_ADD;}
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 310 "lib/SPARQLfedScanner.lpp"
{return token::IT_TO;}
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 311 "lib/SPARQLfedScanner.lpp"
{return token::IT_MOVE;}
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 312 "lib/SPARQLfedScanner.lpp"
{return token::IT_COPY;}
	YY_BREAK
case 47:
YY_RULE_SETUP
#line 313 "lib/SPARQLfedScanner.lpp"
{return token::IT_WITH;}
	YY_BREAK
case 48:
YY_RULE_SETUP
#line 314 "lib/SPARQLfedScanner.lpp"
{return token::IT_DELETE;}
	YY_BREAK
case 49:
YY_RULE_SETUP
#line 315 "lib/SPARQLfedScanner.lpp"
{return token::IT_INSERT;}
	YY_BREAK
case 50:
YY_RULE_SETUP
#line 316 "lib/SPARQLfedScanner.lpp"
{return token::IT_USING;}
	YY_BREAK
case 51:
YY_RULE_SETUP
#line 317 "lib/SPARQLfedScanner.lpp"
{return token::IT_DEFAULT;}
	YY_BREAK
case 52:
YY_RULE_SETUP
#line 318 "lib/SPARQLfedScanner.lpp"
{return token::IT_GRAPH;}
	YY_BREAK
case 53:
YY_RULE_SETUP
#line 319 "lib/SPARQLfedScanner.lpp"
{return token::IT_ALL;}
	YY_BREAK
case 54:
YY_RULE_SETUP
#line 320 "lib/SPARQLfedScanner.lpp"
{return token::IT_PRINT;}
	YY_BREAK
case 55:
YY_RULE_SETUP
#line 321 "lib/SPARQLfedScanner.lpp"
{return token::IT_OPTIONAL;}
	YY_BREAK
case 56:
YY_RULE_SETUP
#line 322 "lib/SPARQLfedScanner.lpp"
{return token::IT_SERVICE;}
	YY_BREAK
case 57:
YY_RULE_SETUP
#line 323 "lib/SPARQLfedScanner.lpp"
{return token::IT_SADI;}
	YY_BREAK
case 58:
YY_RULE_SETUP
#line 324 "lib/SPARQLfedScanner.lpp"
{return token::IT_BIND;}
	YY_BREAK
case 59:
YY_RULE_SETUP
#line 325 "lib/SPARQLfedScanner.lpp"
{return token::IT_UNDEF;}
	YY_BREAK
case 60:
YY_RULE_SETUP
#line 326 "lib/SPARQLfedScanner.lpp"
{return token::GT_MINUS_MINUS;}
	YY_BREAK
case 61:
YY_RULE_SETUP
#line 327 "lib/SPARQLfedScanner.lpp"
{return token::IT_MINUS;}
	YY_BREAK
case 62:
YY_RULE_SETUP
#line 328 "lib/SPARQLfedScanner.lpp"
{return token::IT_UNION;}
	YY_BREAK
case 63:
YY_RULE_SETUP
#line 329 "lib/SPARQLfedScanner.lpp"
{return token::IT_FILTER;}
	YY_BREAK
case 64:
YY_RULE_SETUP
#line 330 "lib/SPARQLfedScanner.lpp"
{return token::IT_a;}
	YY_BREAK
case 65:
YY_RULE_SETUP
#line 331 "lib/SPARQLfedScanner.lpp"
{return token::GT_DIVIDE;}
	YY_BREAK
case 66:
YY_RULE_SETUP
#line 332 "lib/SPARQLfedScanner.lpp"
{return token::GT_CARROT;}
	YY_BREAK
case 67:
YY_RULE_SETUP
#line 333 "lib/SPARQLfedScanner.lpp"
{return token::GT_OPT;}
	YY_BREAK
case 68:
YY_RULE_SETUP
#line 334 "lib/SPARQLfedScanner.lpp"
{return token::GT_PLUS;}
	YY_BREAK
case 69:
YY_RULE_SETUP
#line 335 "lib/SPARQLfedScanner.lpp"
{return token::GT_NOT;}
	YY_BREAK
case 70:
YY_RULE_SETUP
#line 336 "lib/SPARQLfedScanner.lpp"
{return token::GT_LBRACKET;}
	YY_BREAK
case 71:
YY_RULE_SETUP
#line 337 "lib/SPARQLfedScanner.lpp"
{return token::GT_RBRACKET;}
	YY_BREAK
case 72:
YY_RULE_SETUP
#line 338 "lib/SPARQLfedScanner.lpp"
{return token::IT_MEMBERS;}
	YY_BREAK
case 73:
YY_RULE_SETUP
#line 339 "lib/SPARQLfedScanner.lpp"
{return token::IT_STARTS;}
	YY_BREAK
case 74:
YY_RULE_SETUP
#line 340 "lib/SPARQLfedScanner.lpp"
{return token::IT_ENDS;}
	YY_BREAK
case 75:
YY_RULE_SETUP
#line 341 "lib/SPARQLfedScanner.lpp"
{return token::IT_ANY;}
	YY_BREAK
case 76:
YY_RULE_SETUP
#line 342 "lib/SPARQLfedScanner.lpp"
{return token::IT_UNORDERED;}
	YY_BREAK
case 77:
YY_RULE_SETUP
#line 343 "lib/SPARQLfedScanner.lpp"
{return token::GT_OR;}
	YY_BREAK
case 78:
YY_RULE_SETUP
#line 344 "lib/SPARQLfedScanner.lpp"
{return token::GT_AND;}
	YY_BREAK
case 79:
YY_RULE_SETUP
#line 345 "lib/SPARQLfedScanner.lpp"
{return token::GT_NEQUAL;}
	YY_BREAK
case 80:
YY_RULE_SETUP
#line 346 "lib/SPARQLfedScanner.lpp"
{return token::GT_LT;}
	YY_BREAK
case 81:
YY_RULE_SETUP
#line 347 "lib/SPARQLfedScanner.lpp"
{return token::GT_GT;}
	YY_BREAK
case 82:
YY_RULE_SETUP
#line 348 "lib/SPARQLfedScanner.lpp"
{return token::GT_LE;}
	YY_BREAK
case 83:
YY_RULE_SETUP
#line 349 "lib/SPARQLfedScanner.lpp"
{return token::GT_GE;}
	YY_BREAK
case 84:
YY_RULE_SETUP
#line 350 "lib/SPARQLfedScanner.lpp"
{return token::IT_IN;}
	YY_BREAK
case 85:
YY_RULE_SETUP
#line 351 "lib/SPARQLfedScanner.lpp"
{return token::IT_NOT;}
	YY_BREAK
case 86:
YY_RULE_SETUP
#line 352 "lib/SPARQLfedScanner.lpp"
{return token::GT_MINUS;}
	YY_BREAK
case 87:
YY_RULE_SETUP
#line 353 "lib/SPARQLfedScanner.lpp"
{return token::IT_STR;}
	YY_BREAK
case 88:
YY_RULE_SETUP
#line 354 "lib/SPARQLfedScanner.lpp"
{return token::IT_LANG;}
	YY_BREAK
case 89:
YY_RULE_SETUP
#line 355 "lib/SPARQLfedScanner.lpp"
{return token::IT_LANGMATCHES;}
	YY_BREAK
case 90:
YY_RULE_SETUP
#line 356 "lib/SPARQLfedScanner.lpp"
{return token::IT_DATATYPE;}
	YY_BREAK
case 91:
YY_RULE_SETUP
#line 357 "lib/SPARQLfedScanner.lpp"
{return token::IT_BOUND;}
	YY_BREAK
case 92:
YY_RULE_SETUP
#line 358 "lib/SPARQLfedScanner.lpp"
{return token::IT_IRI;}
	YY_BREAK
case 93:
YY_RULE_SETUP
#line 359 "lib/SPARQLfedScanner.lpp"
{return token::IT_URI;}
	YY_BREAK
case 94:
YY_RULE_SETUP
#line 360 "lib/SPARQLfedScanner.lpp"
{return token::IT_BNODE;}
	YY_BREAK
case 95:
YY_RULE_SETUP
#line 361 "lib/SPARQLfedScanner.lpp"
{return token::IT_RAND;}
	YY_BREAK
case 96:
YY_RULE_SETUP
#line 362 "lib/SPARQLfedScanner.lpp"
{return token::IT_ABS;}
	YY_BREAK
case 97:
YY_RULE_SETUP
#line 363 "lib/SPARQLfedScanner.lpp"
{return token::IT_CEIL;}
	YY_BREAK
case 98:
YY_RULE_SETUP
#line 364 "lib/SPARQLfedScanner.lpp"
{return token::IT_FLOOR;}
	YY_BREAK
case 99:
YY_RULE_SETUP
#line 365 "lib/SPARQLfedScanner.lpp"
{return token::IT_ROUND;}
	YY_BREAK
case 100:
YY_RULE_SETUP
#line 366 "lib/SPARQLfedScanner.lpp"
{return token::IT_CONCAT;}
	YY_BREAK
case 101:
YY_RULE_SETUP
#line 367 "lib/SPARQLfedScanner.lpp"
{return token::IT_STRLEN;}
	YY_BREAK
case 102:
YY_RULE_SETUP
#line 368 "lib/SPARQLfedScanner.lpp"
{return token::IT_UCASE;}
	YY_BREAK
case 103:
YY_RULE_SETUP
#line 369 "lib/SPARQLfedScanner.lpp"
{return token::IT_LCASE;}
	YY_BREAK
case 104:
YY_RULE_SETUP
#line 370 "lib/SPARQLfedScanner.lpp"
{return token::IT_ENCODE_FOR_URI;}
	YY_BREAK
case 105:
YY_RULE_SETUP
#line 371 "lib/SPARQLfedScanner.lpp"
{return token::IT_CONTAINS;}
	YY_BREAK
case 106:
YY_RULE_SETUP
#line 372 "lib/SPARQLfedScanner.lpp"
{return token::IT_STRSTARTS;}
	YY_BREAK
case 107:
YY_RULE_SETUP
#line 373 "lib/SPARQLfedScanner.lpp"
{return token::IT_STRENDS;}
	YY_BREAK
case 108:
YY_RULE_SETUP
#line 374 "lib/SPARQLfedScanner.lpp"
{return token::IT_STRBEFORE;}
	YY_BREAK
case 109:
YY_RULE_SETUP
#line 375 "lib/SPARQLfedScanner.lpp"
{return token::IT_STRAFTER;}
	YY_BREAK
case 110:
YY_RULE_SETUP
#line 376 "lib/SPARQLfedScanner.lpp"
{return token::IT_YEAR;}
	YY_BREAK
case 111:
YY_RULE_SETUP
#line 377 "lib/SPARQLfedScanner.lpp"
{return token::IT_MONTH;}
	YY_BREAK
case 112:
YY_RULE_SETUP
#line 378 "lib/SPARQLfedScanner.lpp"
{return token::IT_DAY;}
	YY_BREAK
case 113:
YY_RULE_SETUP
#line 379 "lib/SPARQLfedScanner.lpp"
{return token::IT_HOURS;}
	YY_BREAK
case 114:
YY_RULE_SETUP
#line 380 "lib/SPARQLfedScanner.lpp"
{return token::IT_MINUTES;}
	YY_BREAK
case 115:
YY_RULE_SETUP
#line 381 "lib/SPARQLfedScanner.lpp"
{return token::IT_SECONDS;}
	YY_BREAK
case 116:
YY_RULE_SETUP
#line 382 "lib/SPARQLfedScanner.lpp"
{return token::IT_TIMEZONE;}
	YY_BREAK
case 117:
YY_RULE_SETUP
#line 383 "lib/SPARQLfedScanner.lpp"
{return token::IT_TZ;}
	YY_BREAK
case 118:
YY_RULE_SETUP
#line 384 "lib/SPARQLfedScanner.lpp"
{return token::IT_NOW;}
	YY_BREAK
case 119:
YY_RULE_SETUP
#line 385 "lib/SPARQLfedScanner.lpp"
{return token::IT_UUID;}
	YY_BREAK
case 120:
YY_RULE_SETUP
#line 386 "lib/SPARQLfedScanner.lpp"
{return token::IT_STRUUID;}
	YY_BREAK
case 121:
YY_RULE_SETUP
#line 387 "lib/SPARQLfedScanner.lpp"
{return token::IT_MD5;}
	YY_BREAK
case 122:
YY_RULE_SETUP
#line 388 "lib/SPARQLfedScanner.lpp"
{return token::IT_SHA1;}
	YY_BREAK
case 123:
YY_RULE_SETUP
#line 389 "lib/SPARQLfedScanner.lpp"
{return token::IT_SHA256;}
	YY_BREAK
case 124:
YY_RULE_SETUP
#line 390 "lib/SPARQLfedScanner.lpp"
{return token::IT_SHA384;}
	YY_BREAK
case 125:
YY_RULE_SETUP
#line 391 "lib/SPARQLfedScanner.lpp"
{return token::IT_SHA512;}
	YY_BREAK
case 126:
YY_RULE_SETUP
#line 392 "lib/SPARQLfedScanner.lpp"
{return token::IT_COALESCE;}
	YY_BREAK
case 127:
YY_RULE_SETUP
#line 393 "lib/SPARQLfedScanner.lpp"
{return token::IT_IF;}
	YY_BREAK
case 128:
YY_RULE_SETUP
#line 394 "lib/SPARQLfedScanner.lpp"
{return token::IT_STRLANG;}
	YY_BREAK
case 129:
YY_RULE_SETUP
#line 395 "lib/SPARQLfedScanner.lpp"
{return token::IT_STRDT;}
	YY_BREAK
case 130:
YY_RULE_SETUP
#line 396 "lib/SPARQLfedScanner.lpp"
{return token::IT_sameTerm;}
	YY_BREAK
case 131:
YY_RULE_SETUP
#line 397 "lib/SPARQLfedScanner.lpp"
{return token::IT_isIRI;}
	YY_BREAK
case 132:
YY_RULE_SETUP
#line 398 "lib/SPARQLfedScanner.lpp"
{return token::IT_isURI;}
	YY_BREAK
case 133:
YY_RULE_SETUP
#line 399 "lib/SPARQLfedScanner.lpp"
{return token::IT_isBLANK;}
	YY_BREAK
case 134:
YY_RULE_SETUP
#line 400 "lib/SPARQLfedScanner.lpp"
{return token::IT_isLITERAL;}
	YY_BREAK
case 135:
YY_RULE_SETUP
#line 401 "lib/SPARQLfedScanner.lpp"
{return token::IT_isNUMERIC;}
	YY_BREAK
case 136:
YY_RULE_SETUP
#line 402 "lib/SPARQLfedScanner.lpp"
{return token::IT_REGEX;}
	YY_BREAK
case 137:
YY_RULE_SETUP
#line 403 "lib/SPARQLfedScanner.lpp"
{return token::IT_SUBSTR;}
	YY_BREAK
case 138:
YY_RULE_SETUP
#line 404 "lib/SPARQLfedScanner.lpp"
{return token::IT_REPLACE;}
	YY_BREAK
case 139:
YY_RULE_SETUP
#line 405 "lib/SPARQLfedScanner.lpp"
{return token::IT_EXISTS;}
	YY_BREAK
case 140:
YY_RULE_SETUP
#line 406 "lib/SPARQLfedScanner.lpp"
{return token::IT_COUNT;}
	YY_BREAK
case 141:
YY_RULE_SETUP
#line 407 "lib/SPARQLfedScanner.lpp"
{return token::IT_GROUP_CONCAT;}
	YY_BREAK
case 142:
YY_RULE_SETUP
#line 408 "lib/SPARQLfedScanner.lpp"
{return token::IT_SUM;}
	YY_BREAK
case 143:
YY_RULE_SETUP
#line 409 "lib/SPARQLfedScanner.lpp"
{return token::IT_MIN;}
	YY_BREAK
case 144:
YY_RULE_SETUP
#line 410 "lib/SPARQLfedScanner.lpp"
{return token::IT_MAX;}
	YY_BREAK
case 145:
YY_RULE_SETUP
#line 411 "lib/SPARQLfedScanner.lpp"
{return token::IT_AVG;}
	YY_BREAK
case 146:
YY_RULE_SETUP
#line 412 "lib/SPARQLfedScanner.lpp"
{return token::IT_SAMPLE;}
	YY_BREAK
case 147:
YY_RULE_SETUP
#line 413 "lib/SPARQLfedScanner.lpp"
{return token::IT_SEPARATOR;}
	YY_BREAK
case 148:
YY_RULE_SETUP
#line 414 "lib/SPARQLfedScanner.lpp"
{return token::GT_DTYPE;}
	YY_BREAK
case 149:
YY_RULE_SETUP
#line 415 "lib/SPARQLfedScanner.lpp"
{yylval->p_BooleanRDFLiteral = driver->getBooleanRDFLiteral("true", 1); return token::IT_true;}
	YY_BREAK
case 150:
YY_RULE_SETUP
#line 416 "lib/SPARQLfedScanner.lpp"
{yylval->p_BooleanRDFLiteral = driver->getBooleanRDFLiteral("false", 0); return token::IT_false;}
	YY_BREAK
case 151:
YY_RULE_SETUP
#line 417 "lib/SPARQLfedScanner.lpp"
{yylval->p_URI = resolveBase(yytext, true); return token::IRIREF;}
	YY_BREAK
case 152:
YY_RULE_SETUP
#line 418 "lib/SPARQLfedScanner.lpp"
{yylval->p_URI = driver->ignorePrefix() ? driver->getURI(yytext) : resolvePrefix(yytext, yylloc); return token::PNAME_NS;}
	YY_BREAK
case 153:
YY_RULE_SETUP
#line 419 "lib/SPARQLfedScanner.lpp"
{yylval->p_URI = resolvePrefix(yytext, yylloc); return token::PNAME_LN;}
	YY_BREAK
case 154:
YY_RULE_SETUP
#line 420 "lib/SPARQLfedScanner.lpp"
{yylval->p_TTerm = driver->getBNode(yytext+2); return token::BLANK_NODE_LABEL;}
	YY_BREAK
case 155:
YY_RULE_SETUP
#line 421 "lib/SPARQLfedScanner.lpp"
{yylval->p_Variable = driver->getVariable(yytext+1); return token::VAR1;}
	YY_BREAK
case 156:
YY_RULE_SETUP
#line 422 "lib/SPARQLfedScanner.lpp"
{yylval->p_Variable = driver->getVariable(yytext+1); return token::VAR2;}
	YY_BREAK
case 157:
YY_RULE_SETUP
#line 423 "lib/SPARQLfedScanner.lpp"
{yylval->p_LANGTAG = new LANGTAG(yytext+1); return token::LANGTAG;}
	YY_BREAK
case 158:
YY_RULE_SETUP
#line 424 "lib/SPARQLfedScanner.lpp"
{return typedLiteral(yylval, token::INTEGER);}
	YY_BREAK
case 159:
YY_RULE_SETUP
#line 425 "lib/SPARQLfedScanner.lpp"
{return typedLiteral(yylval, token::DECIMAL);}
	YY_BREAK
case 160:
YY_RULE_SETUP
#line 426 "lib/SPARQLfedScanner.lpp"
{return typedLiteral(yylval, token::DOUBLE);}
	YY_BREAK
case 161:
YY_RULE_SETUP
#line 427 "lib/SPARQLfedScanner.lpp"
{return typedLiteral(yylval, token::INTEGER_POSITIVE);}
	YY_BREAK
case 162:
YY_RULE_SETUP
#line 428 "lib/SPARQLfedScanner.lpp"
{return typedLiteral(yylval, token::DECIMAL_POSITIVE);}
	YY_BREAK
case 163:
YY_RULE_SETUP
#line 429 "lib/SPARQLfedScanner.lpp"
{return typedLiteral(yylval, token::DOUBLE_POSITIVE);}
	YY_BREAK
case 164:
YY_RULE_SETUP
#line 430 "lib/SPARQLfedScanner.lpp"
{return typedLiteral(yylval, token::INTEGER_NEGATIVE);}
	YY_BREAK
case 165:
YY_RULE_SETUP
#line 431 "lib/SPARQLfedScanner.lpp"
{return typedLiteral(yylval, token::DECIMAL_NEGATIVE);}
	YY_BREAK
case 166:
YY_RULE_SETUP
#line 432 "lib/SPARQLfedScanner.lpp"
{return typedLiteral(yylval, token::DOUBLE_NEGATIVE);}
	YY_BREAK
case 167:
YY_RULE_SETUP
#line 433 "lib/SPARQLfedScanner.lpp"
{return unescape(yylval, yylloc, 1, token::STRING_LITERAL1);}
	YY_BREAK
case 168:
YY_RULE_SETUP
#line 434 "lib/SPARQLfedScanner.lpp"
{return unescape(yylval, yylloc, 1, token::STRING_LITERAL2);}
	YY_BREAK
case 169:
/* rule 169 can match eol */
YY_RULE_SETUP
#line 435 "lib/SPARQLfedScanner.lpp"
{return unescape(yylval, yylloc, 3, token::STRING_LITERAL_LONG1);}
	YY_BREAK
case 170:
/* rule 170 can match eol */
YY_RULE_SETUP
#line 436 "lib/SPARQLfedScanner.lpp"
{return unescape(yylval, yylloc, 3, token::STRING_LITERAL_LONG2);}
	YY_BREAK
case 171:
/* rule 171 can match eol */
YY_RULE_SETUP
#line 437 "lib/SPARQLfedScanner.lpp"
{return token::NIL;}
	YY_BREAK
case 172:
/* rule 172 can match eol */
YY_RULE_SETUP
#line 438 "lib/SPARQLfedScanner.lpp"
{yylval->p_TTerm = driver->createBNode(); return token::ANON;}
	YY_BREAK
case 173:
YY_RULE_SETUP
#line 439 "lib/SPARQLfedScanner.lpp"
{return token::ABOX_HR;}
	YY_BREAK
case 174:
YY_RULE_SETUP
#line 440 "lib/SPARQLfedScanner.lpp"
{return token::UBOX_UHR;}
	YY_BREAK
case 175:
YY_RULE_SETUP
#line 441 "lib/SPARQLfedScanner.lpp"
{return token::UBOX_LHR;}
	YY_BREAK
case 176:
YY_RULE_SETUP
#line 442 "lib/SPARQLfedScanner.lpp"
{yylval->p_RSName = new RSName(yytext + 1); return token::RSREF;}
	YY_BREAK
case 177:
/* rule 177 can match eol */
YY_RULE_SETUP
#line 443 "lib/SPARQLfedScanner.lpp"
{return token::INSERTDATA;}
	YY_BREAK
case 178:
/* rule 178 can match eol */
YY_RULE_SETUP
#line 444 "lib/SPARQLfedScanner.lpp"
{return token::DELETEDATA;}
	YY_BREAK
case 179:
/* rule 179 can match eol */
YY_RULE_SETUP
#line 445 "lib/SPARQLfedScanner.lpp"
{return token::DELETEWHERE;}
	YY_BREAK
case YY_STATE_EOF(INITIAL):
#line 447 "lib/SPARQLfedScanner.lpp"
{ yyterminate();}
	YY_BREAK
case 180:
YY_RULE_SETUP
#line 448 "lib/SPARQLfedScanner.lpp"
{
    std::stringstream s;
    s << "unexpected input: '" << yytext << "'";
    driver->error(*yylloc, s.str());
}
	YY_BREAK
case 181:
YY_RULE_SETUP
#line 454 "lib/SPARQLfedScanner.lpp"
YY_FATAL_ERROR( "flex scanner jammed" );
	YY_BREAK
#line 5279 "lib/SPARQLfedScanner.cpp"

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = (yy_hold_char);
		YY_RESTORE_YY_MORE_OFFSET

		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state(  );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = (yytext_ptr) + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++(yy_c_buf_p);
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
/* %% [14.0] code to do back-up for compressed tables and set up yy_cp goes here */
				yy_cp = (yy_last_accepting_cpos);
				yy_current_state = (yy_last_accepting_state);
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer(  ) )
			{
			case EOB_ACT_END_OF_FILE:
				{
				(yy_did_buffer_switch_on_eof) = 0;

				if ( yywrap(  ) )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				(yy_c_buf_p) =
					(yytext_ptr) + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				(yy_c_buf_p) =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
} /* end of yylex */
/* %ok-for-header */

/* %if-c++-only */
/* %not-for-header */

/* The contents of this function are C++ specific, so the () macro is not used.
 */
yyFlexLexer::yyFlexLexer( std::istream* arg_yyin, std::ostream* arg_yyout )
{
	yyin = arg_yyin;
	yyout = arg_yyout;
	yy_c_buf_p = 0;
	yy_init = 0;
	yy_start = 0;
	yy_flex_debug = 0;
	yylineno = 1;	// this will only get updated if %option yylineno

	yy_did_buffer_switch_on_eof = 0;

	yy_looking_for_trail_begin = 0;
	yy_more_flag = 0;
	yy_more_len = 0;
	yy_more_offset = yy_prev_more_offset = 0;

	yy_start_stack_ptr = yy_start_stack_depth = 0;
	yy_start_stack = NULL;

	yy_buffer_stack = 0;
	yy_buffer_stack_top = 0;
	yy_buffer_stack_max = 0;

	yy_state_buf = 0;

}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
yyFlexLexer::~yyFlexLexer()
{
	delete [] yy_state_buf;
	SPARQLfedfree(yy_start_stack  );
	yy_delete_buffer( YY_CURRENT_BUFFER );
	SPARQLfedfree(yy_buffer_stack  );
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
void yyFlexLexer::switch_streams( std::istream* new_in, std::ostream* new_out )
{
	if ( new_in )
		{
		yy_delete_buffer( YY_CURRENT_BUFFER );
		yy_switch_to_buffer( yy_create_buffer( new_in, YY_BUF_SIZE  ) );
		}

	if ( new_out )
		yyout = new_out;
}

#ifdef YY_INTERACTIVE
int yyFlexLexer::LexerInput( char* buf, int /* max_size */ )
#else
int yyFlexLexer::LexerInput( char* buf, int max_size )
#endif
{
	if ( yyin->eof() || yyin->fail() )
		return 0;

#ifdef YY_INTERACTIVE
	yyin->get( buf[0] );

	if ( yyin->eof() )
		return 0;

	if ( yyin->bad() )
		return -1;

	return 1;

#else
	(void) yyin->read( buf, max_size );

	if ( yyin->bad() )
		return -1;
	else
		return yyin->gcount();
#endif
}

void yyFlexLexer::LexerOutput( const char* buf, int size )
{
	(void) yyout->write( buf, size );
}
/* %ok-for-header */

/* %endif */

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
int yyFlexLexer::yy_get_next_buffer()
/* %endif */
{
    	register char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
	register char *source = (yytext_ptr);
	register int number_to_move, i;
	int ret_val;

	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr)) - 1;

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;

	else
		{
			int num_to_read =
			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = YY_CURRENT_BUFFER;

			int yy_c_buf_p_offset =
				(int) ((yy_c_buf_p) - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					SPARQLfedrealloc((void *) b->yy_ch_buf,b->yy_buf_size + 2  );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = 0;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			(yy_c_buf_p) = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
						number_to_move - 1;

			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
			(yy_n_chars), (size_t) num_to_read );

		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	if ( (yy_n_chars) == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin  );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	if ((yy_size_t) ((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
		/* Extend the array by 50%, plus the number we really need. */
		yy_size_t new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) SPARQLfedrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size  );
		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
	}

	(yy_n_chars) += number_to_move;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;

	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];

	return ret_val;
}

/* yy_get_previous_state - get the state just before the EOB char was reached */

/* %if-c-only */
/* %not-for-header */

/* %endif */
/* %if-c++-only */
    yy_state_type yyFlexLexer::yy_get_previous_state()
/* %endif */
{
	register yy_state_type yy_current_state;
	register char *yy_cp;
    
/* %% [15.0] code to get the start state into yy_current_state goes here */
	yy_current_state = (yy_start);

	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
		{
/* %% [16.0] code to find the next state goes here */
		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		if ( yy_accept[yy_current_state] )
			{
			(yy_last_accepting_state) = yy_current_state;
			(yy_last_accepting_cpos) = yy_cp;
			}
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 1399 )
				yy_c = yy_meta[(unsigned int) yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
		}

	return yy_current_state;
}

/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    yy_state_type yyFlexLexer::yy_try_NUL_trans( yy_state_type yy_current_state )
/* %endif */
{
	register int yy_is_jam;
    /* %% [17.0] code to find the next state, and perhaps do backing up, goes here */
	register char *yy_cp = (yy_c_buf_p);

	register YY_CHAR yy_c = 1;
	if ( yy_accept[yy_current_state] )
		{
		(yy_last_accepting_state) = yy_current_state;
		(yy_last_accepting_cpos) = yy_cp;
		}
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 1399 )
			yy_c = yy_meta[(unsigned int) yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
	yy_is_jam = (yy_current_state == 1398);

	return yy_is_jam ? 0 : yy_current_state;
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yyunput( int c, register char* yy_bp)
/* %endif */
{
	register char *yy_cp;
    
    yy_cp = (yy_c_buf_p);

	/* undo effects of setting up yytext */
	*yy_cp = (yy_hold_char);

	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		register int number_to_move = (yy_n_chars) + 2;
		register char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
		register char *source =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];

		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;

		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;

/* %% [18.0] update yylineno here */

	(yytext_ptr) = yy_bp;
	(yy_hold_char) = *yy_cp;
	(yy_c_buf_p) = yy_cp;
}
/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    int yyFlexLexer::yyinput()
/* %endif */
{
	int c;
    
	*(yy_c_buf_p) = (yy_hold_char);

	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			/* This was really a NUL. */
			*(yy_c_buf_p) = '\0';

		else
			{ /* need more input */
			int offset = (yy_c_buf_p) - (yytext_ptr);
			++(yy_c_buf_p);

			switch ( yy_get_next_buffer(  ) )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin );

					/*FALLTHROUGH*/

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap(  ) )
						return EOF;

					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					(yy_c_buf_p) = (yytext_ptr) + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
	*(yy_c_buf_p) = '\0';	/* preserve yytext */
	(yy_hold_char) = *++(yy_c_buf_p);

/* %% [19.0] update BOL and yylineno */

	return c;
}
/* %if-c-only */
/* %endif */

/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 * 
 * @note This function does not reset the start condition to @c INITIAL .
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yyrestart( std::istream* input_file )
/* %endif */
{
    
	if ( ! YY_CURRENT_BUFFER ){
        yyensure_buffer_stack ();
		YY_CURRENT_BUFFER_LVALUE =
            yy_create_buffer( yyin, YY_BUF_SIZE );
	}

	yy_init_buffer( YY_CURRENT_BUFFER, input_file );
	yy_load_buffer_state(  );
}

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 * 
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
/* %endif */
{
    
	/* TODO. We should be able to replace this entire function body
	 * with
	 *		yypop_buffer_state();
	 *		yypush_buffer_state(new_buffer);
     */
	yyensure_buffer_stack ();
	if ( YY_CURRENT_BUFFER == new_buffer )
		return;

	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	YY_CURRENT_BUFFER_LVALUE = new_buffer;
	yy_load_buffer_state(  );

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	(yy_did_buffer_switch_on_eof) = 1;
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_load_buffer_state()
/* %endif */
{
    	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
	(yy_hold_char) = *(yy_c_buf_p);
}

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * 
 * @return the allocated buffer state.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    YY_BUFFER_STATE yyFlexLexer::yy_create_buffer( std::istream* file, int size )
/* %endif */
{
	YY_BUFFER_STATE b;
    
	b = (YY_BUFFER_STATE) SPARQLfedalloc(sizeof( struct yy_buffer_state )  );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) SPARQLfedalloc(b->yy_buf_size + 2  );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file );

	return b;
}

/** Destroy the buffer.
 * @param b a buffer created with yy_create_buffer()
 * 
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_delete_buffer( YY_BUFFER_STATE b )
/* %endif */
{
    
	if ( ! b )
		return;

	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		SPARQLfedfree((void *) b->yy_ch_buf  );

	SPARQLfedfree((void *) b  );
}

/* %if-c-only */
/* %endif */

/* %if-c++-only */

extern "C" int isatty (int ) throw();

/* %endif */

/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a yyrestart() or at EOF.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_init_buffer( YY_BUFFER_STATE b, std::istream* file )
/* %endif */

{
	int oerrno = errno;
    
	yy_flush_buffer( b );

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then yy_init_buffer was _probably_
     * called from yyrestart() or through yy_get_next_buffer.
     * In that case, we don't want to reset the lineno or column.
     */
    if (b != YY_CURRENT_BUFFER){
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    }

/* %if-c-only */
/* %endif */
/* %if-c++-only */
	b->yy_is_interactive = 0;
/* %endif */
	errno = oerrno;
}

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * 
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_flush_buffer( YY_BUFFER_STATE b )
/* %endif */
{
    	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == YY_CURRENT_BUFFER )
		yy_load_buffer_state(  );
}

/* %if-c-or-c++ */
/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  if necessary.
 *  @param new_buffer The new state.
 *  
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::yypush_buffer_state (YY_BUFFER_STATE new_buffer)
/* %endif */
{
    	if (new_buffer == NULL)
		return;

	yyensure_buffer_stack();

	/* This block is copied from yy_switch_to_buffer. */
	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	/* Only push if top exists. Otherwise, replace top. */
	if (YY_CURRENT_BUFFER)
		(yy_buffer_stack_top)++;
	YY_CURRENT_BUFFER_LVALUE = new_buffer;

	/* copied from yy_switch_to_buffer. */
	yy_load_buffer_state(  );
	(yy_did_buffer_switch_on_eof) = 1;
}
/* %endif */

/* %if-c-or-c++ */
/** Removes and deletes the top of the stack, if present.
 *  The next element becomes the new top.
 *  
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::yypop_buffer_state (void)
/* %endif */
{
    	if (!YY_CURRENT_BUFFER)
		return;

	yy_delete_buffer(YY_CURRENT_BUFFER );
	YY_CURRENT_BUFFER_LVALUE = NULL;
	if ((yy_buffer_stack_top) > 0)
		--(yy_buffer_stack_top);

	if (YY_CURRENT_BUFFER) {
		yy_load_buffer_state(  );
		(yy_did_buffer_switch_on_eof) = 1;
	}
}
/* %endif */

/* %if-c-or-c++ */
/* Allocates the stack if it does not exist.
 *  Guarantees space for at least one push.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::yyensure_buffer_stack(void)
/* %endif */
{
	int num_to_alloc;
    
	if (!(yy_buffer_stack)) {

		/* First allocation is just for 2 elements, since we don't know if this
		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
		 * immediate realloc on the next call.
         */
		num_to_alloc = 1;
		(yy_buffer_stack) = (struct yy_buffer_state**)SPARQLfedalloc
								(num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
								  
		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
				
		(yy_buffer_stack_max) = num_to_alloc;
		(yy_buffer_stack_top) = 0;
		return;
	}

	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){

		/* Increase the buffer to prepare for a possible push. */
		int grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = (yy_buffer_stack_max) + grow_size;
		(yy_buffer_stack) = (struct yy_buffer_state**)SPARQLfedrealloc
								((yy_buffer_stack),
								num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		/* zero only the new slots.*/
		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
		(yy_buffer_stack_max) = num_to_alloc;
	}
}
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_push_state( int new_state )
/* %endif */
{
    	if ( (yy_start_stack_ptr) >= (yy_start_stack_depth) )
		{
		yy_size_t new_size;

		(yy_start_stack_depth) += YY_START_STACK_INCR;
		new_size = (yy_start_stack_depth) * sizeof( int );

		if ( ! (yy_start_stack) )
			(yy_start_stack) = (int *) SPARQLfedalloc(new_size  );

		else
			(yy_start_stack) = (int *) SPARQLfedrealloc((void *) (yy_start_stack),new_size  );

		if ( ! (yy_start_stack) )
			YY_FATAL_ERROR( "out of memory expanding start-condition stack" );
		}

	(yy_start_stack)[(yy_start_stack_ptr)++] = YY_START;

	BEGIN(new_state);
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_pop_state()
/* %endif */
{
    	if ( --(yy_start_stack_ptr) < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN((yy_start_stack)[(yy_start_stack_ptr)]);
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    int yyFlexLexer::yy_top_state()
/* %endif */
{
    	return (yy_start_stack)[(yy_start_stack_ptr) - 1];
}

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::LexerError( yyconst char msg[] )
{
    	std::cerr << msg << std::endl;
	exit( YY_EXIT_FAILURE );
}
/* %endif */

/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		yytext[yyleng] = (yy_hold_char); \
		(yy_c_buf_p) = yytext + yyless_macro_arg; \
		(yy_hold_char) = *(yy_c_buf_p); \
		*(yy_c_buf_p) = '\0'; \
		yyleng = yyless_macro_arg; \
		} \
	while ( 0 )

/* Accessor  methods (get/set functions) to struct members. */

/* %if-c-only */
/* %if-reentrant */
/* %endif */
/* %if-reentrant */
/* %endif */
/* %endif */

/* %if-reentrant */
/* %if-bison-bridge */
/* %endif */
/* %endif if-c-only */

/* %if-c-only */
/* %endif */

/* %if-c-only SNIP! this currently causes conflicts with the c++ scanner */
/* %if-reentrant */
/* %endif */
/* %endif */

/*
 * Internal utility routines.
 */

#ifndef yytext_ptr
static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )
{
	register int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
}
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * s )
{
	register int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
}
#endif

void *SPARQLfedalloc (yy_size_t  size )
{
	return (void *) malloc( size );
}

void *SPARQLfedrealloc  (void * ptr, yy_size_t  size )
{
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return (void *) realloc( (char *) ptr, size );
}

void SPARQLfedfree (void * ptr )
{
	free( (char *) ptr );	/* see SPARQLfedrealloc() for (char *) cast */
}

/* %if-tables-serialization definitions */
/* %define-yytables   The name for this specific scanner's tables. */
#define YYTABLES_NAME "yytables"
/* %endif */

/* %ok-for-header */

#line 454 "lib/SPARQLfedScanner.lpp"


/* END semantic actions for SPARQLfed terminals */

/* START SPARQLfedScanner */
namespace w3c_sw {

SPARQLfedScanner::SPARQLfedScanner (SPARQLfedDriver* driver, std::istream* in, std::ostream* out) : SPARQLfedFlexLexer(in, out), driver(driver) {  }
SPARQLfedScanner::~SPARQLfedScanner () {  }

SPARQLfedParser::token_type SPARQLfedScanner::typedLiteral (SPARQLfedParser::semantic_type*& yylval, SPARQLfedParser::token_type tok) {
    std::istringstream is(yytext);

    switch (tok) {
    case token::INTEGER:
    case token::INTEGER_POSITIVE:
    case token::INTEGER_NEGATIVE:
	int i;
	is >> i;
	yylval->p_NumericRDFLiteral = driver->getNumericRDFLiteral(yytext, i);
	return tok;
    case token::DECIMAL:
    case token::DECIMAL_POSITIVE:
    case token::DECIMAL_NEGATIVE:
	float f;
	is >> f;
	yylval->p_NumericRDFLiteral = driver->getNumericRDFLiteral(yytext, f);
	return tok;
    case token::DOUBLE:
    case token::DOUBLE_POSITIVE:
    case token::DOUBLE_NEGATIVE:
	double d;
	is >> d;
	yylval->p_NumericRDFLiteral = driver->getNumericRDFLiteral(yytext, d);
	return tok;
    default: throw(new std::runtime_error("program flow exception -- imroper call to SPARQLfedScanner::typedLiteral"));
    }
}

SPARQLfedParser::token_type SPARQLfedScanner::unescape (SPARQLfedParser::semantic_type*& yylval, SPARQLfedParser::location_type*& yylloc, size_t skip, SPARQLfedParser::token_type tok){
    std::string* space = new std::string;
    YaccDriver::unescapeString(yytext+skip, yyleng-skip-skip, space, yylloc);
    yylval->p_string = space;
    return tok;
}


const URI* SPARQLfedScanner::resolvePrefix (const char* yytext, SPARQLfedParser::location_type*& yylloc){
    std::string ret(yytext);
    size_t index = ret.find(':');
    if (index == std::string::npos)
	driver->error(*yylloc, std::string() + "Inexplicable lack of ':' in prefix: \"" + yytext + "\"");
    const URI* nspace = driver->getNamespace(ret.substr(0, index), true);
    if (nspace == NULL)
	driver->error(*yylloc, std::string() + "Unknown prefix: \"" + ret.substr(0, index) + "\"");

    ret.replace(0, index+1, nspace->getLexicalValue());
    return resolveBase(ret.c_str(), false);
}

void SPARQLfedScanner::set_debug(bool b)
{
    yy_flex_debug = b;
}

/* END SPARQLfedScanner */

const URI* SPARQLfedScanner::resolveBase (const char* p_rel, bool stripDelims) {
    std::string stripped(p_rel);
    if (stripDelims) {
	stripped.replace(0, 1, "");
	stripped.replace(stripped.size()-1, 1, "");
    }
    return driver->getAbsoluteURI(stripped.c_str());

#if 0
    // was a transliteration of _generic.pm
    static const boost::regex re_scheme("^([a-zA-Z][a-zA-Z0-9.+-]*):");
    static const boost::regex re_authority("^((?:[a-zA-Z][a-zA-Z0-9.+-]*)?)(?://([^/?\\#]*))?(.*)$");
    static const boost::regex re_path("^((?:[^:/?\\#]+:)?(?://[^/?\\#]*)?)([^?\\#]*)(.*)$");

    boost::smatch what;
    URI* baseURI = driver->getBase();
    std::string base;
    if (baseURI != NULL)
	std::string base = baseURI->getLexicalValue();
    std::string base_scheme;
    if (base.size() > 0 && boost::regex_search(base, what, re_scheme))
	base_scheme = what[1];
    if (boost::regex_search(self, what, re_scheme) &&
	what[1] != base_schema)
	return driver->getURI(self.c_str());
    if (base.size() == 0)
	throw(std::runtime_error(((std::string)"no base declared while resolving relative URI ").append(abs)));

    std::string abs(self);
    if (!boost::regex_search(base, what, re_scheme))
	throw(std::runtime_error(((std::string)"resolving against base URI with no scheme ").append(base)));
    // !!! abs->scheme = base_scheme
    if (false) ; // ...

    if (!boost::regex_search(base, what, re_authority))
	throw(std::runtime_error(((std::string)"resolving against base URI with no authority ").append(base)));
    std::string base_authority(what[2]);

    if (!boost::regex_search(rel, what, re_path))
	throw(std::runtime_error(((std::string)"oddly failed to match re_path on ").append(rel)));
    std::string rel_path(what[2]);
    if (rel_path.find("/") == 0) return driver->getURI(abs.c_str());

#endif
}
} // END namespace w3c_sw

/* This implementation of SPARQLfedFlexLexer::yylex() is required to fill the
 * vtable of the class SPARQLfedFlexLexer. We define the scanner's main yylex
 * function via YY_DECL to reside in the SPARQLfedScanner class instead. */

#ifdef yylex
#undef yylex
#endif

int SPARQLfedFlexLexer::yylex()
{
    std::cerr << "in SPARQLfedFlexLexer::yylex() !" << std::endl;
    return 0;
}



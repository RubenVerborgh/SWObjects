#line 2 "lib/SPARQLfedScanner.cpp"

#line 4 "lib/SPARQLfedScanner.cpp"

#define  YY_INT_ALIGNED short int

/* A lexical scanner generated by flex */

/* %not-for-header */

/* %if-c-only */
/* %if-not-reentrant */
/* %endif */
/* %endif */
/* %ok-for-header */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 5
#define YY_FLEX_SUBMINOR_VERSION 35
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

/* %if-c++-only */
    /* The c++ scanner is a mess. The FlexLexer.h header file relies on the
     * following macro. This is required in order to pass the c++-multiple-scanners
     * test in the regression suite. We get reports that it breaks inheritance.
     * We will address this in a future release of flex, or omit the C++ scanner
     * altogether.
     */
    #define yyFlexLexer SPARQLfedFlexLexer
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */
/* %if-c-only */
/* %endif */

/* %if-tables-serialization */
/* %endif */
/* end standard C headers. */

/* %if-c-or-c++ */
/* flex integer type definitions */

#ifndef FLEXINT_H
#define FLEXINT_H

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L

/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
 * if you want the limit (max/min) macros for int types. 
 */
#ifndef __STDC_LIMIT_MACROS
#define __STDC_LIMIT_MACROS 1
#endif

#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t; 
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;

/* Limits of integral types. */
#ifndef INT8_MIN
#define INT8_MIN               (-128)
#endif
#ifndef INT16_MIN
#define INT16_MIN              (-32767-1)
#endif
#ifndef INT32_MIN
#define INT32_MIN              (-2147483647-1)
#endif
#ifndef INT8_MAX
#define INT8_MAX               (127)
#endif
#ifndef INT16_MAX
#define INT16_MAX              (32767)
#endif
#ifndef INT32_MAX
#define INT32_MAX              (2147483647)
#endif
#ifndef UINT8_MAX
#define UINT8_MAX              (255U)
#endif
#ifndef UINT16_MAX
#define UINT16_MAX             (65535U)
#endif
#ifndef UINT32_MAX
#define UINT32_MAX             (4294967295U)
#endif

#endif /* ! C99 */

#endif /* ! FLEXINT_H */

/* %endif */

/* %if-c++-only */
/* begin standard C++ headers. */
#include <iostream> 
#include <errno.h>
#include <cstdlib>
#include <cstdio>
#include <cstring>
/* end standard C++ headers. */
/* %endif */

#ifdef __cplusplus

/* The "const" storage-class-modifier is valid. */
#define YY_USE_CONST

#else	/* ! __cplusplus */

/* C99 requires __STDC__ to be defined as 1. */
#if defined (__STDC__)

#define YY_USE_CONST

#endif	/* defined (__STDC__) */
#endif	/* ! __cplusplus */

#ifdef YY_USE_CONST
#define yyconst const
#else
#define yyconst
#endif

/* %not-for-header */

/* Returned upon end-of-file. */
#define YY_NULL 0
/* %ok-for-header */

/* %not-for-header */

/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index.  If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */
#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)
/* %ok-for-header */

/* %if-reentrant */
/* %endif */

/* %if-not-reentrant */

/* %endif */

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN (yy_start) = 1 + 2 *

/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START (((yy_start) - 1) / 2)
#define YYSTATE YY_START

/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)

/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin  )

#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#ifndef YY_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k.
 * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
 * Ditto for the __ia64__ case accordingly.
 */
#define YY_BUF_SIZE 32768
#else
#define YY_BUF_SIZE 16384
#endif /* __ia64__ */
#endif

/* The state buf must be large enough to hold one state per character in the main buffer.
 */
#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

/* %if-not-reentrant */
extern int yyleng;
/* %endif */

/* %if-c-only */
/* %if-not-reentrant */
/* %endif */
/* %endif */

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2

    #define YY_LESS_LINENO(n)
    
/* Return all but the first "n" matched characters back to the input stream. */
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		*yy_cp = (yy_hold_char); \
		YY_RESTORE_YY_MORE_OFFSET \
		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )

#define unput(c) yyunput( c, (yytext_ptr)  )

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef size_t yy_size_t;
#endif

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{
/* %if-c-only */
/* %endif */

/* %if-c++-only */
	std::istream* yy_input_file;
/* %endif */

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	yy_size_t yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */
    
	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

/* %if-c-only Standard (non-C++) definition */
/* %not-for-header */

/* %if-not-reentrant */
/* %endif */
/* %ok-for-header */

/* %endif */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or NULL.
 */
#define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
                          : NULL)

/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */
#define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]

/* %if-c-only Standard (non-C++) definition */
/* %if-not-reentrant */
/* %not-for-header */

/* %ok-for-header */

/* %endif */
/* %endif */

void *SPARQLfedalloc (yy_size_t  );
void *SPARQLfedrealloc (void *,yy_size_t  );
void SPARQLfedfree (void *  );

#define yy_new_buffer yy_create_buffer

#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){ \
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
	}

#define yy_set_bol(at_bol) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){\
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
	}

#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)

/* %% [1.0] yytext/yyin/yyout/yy_state_type/yylineno etc. def's & init go here */
/* Begin user sect3 */
#define YY_SKIP_YYWRAP

#define FLEX_DEBUG

typedef unsigned char YY_CHAR;

#define yytext_ptr yytext

#include <FlexLexer.h>

int yyFlexLexer::yywrap() { return 1; }

/* %if-c-only Standard (non-C++) definition */
/* %endif */

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	(yytext_ptr) = yy_bp; \
/* %% [2.0] code to fiddle yytext and yyleng for yymore() goes here \ */\
	yyleng = (size_t) (yy_cp - yy_bp); \
	(yy_hold_char) = *yy_cp; \
	*yy_cp = '\0'; \
/* %% [3.0] code to copy yytext_ptr to yytext[] goes here, if %array \ */\
	(yy_c_buf_p) = yy_cp;

/* %% [4.0] data tables for the DFA and the user's section 1 definitions go here */
#define YY_NUM_RULES 167
#define YY_END_OF_BUFFER 168
/* This struct is not used in this scanner,
   but its presence is necessary. */
struct yy_trans_info
	{
	flex_int32_t yy_verify;
	flex_int32_t yy_nxt;
	};
static yyconst flex_int16_t yy_accept[1227] =
    {   0,
        0,    0,  168,  166,    2,    1,    1,   66,  166,    2,
      166,  166,  166,    9,   10,   11,   65,   59,   84,   51,
       62,  151,  145,   30,   78,   76,   79,   64,  166,  166,
      166,  166,  166,  166,  166,  166,  166,  166,  166,  166,
      166,  166,  166,  166,  166,  166,  166,  166,  166,  166,
       67,   68,   63,  166,   60,  166,  166,   27,   61,   28,
      166,  166,  166,  166,  166,  166,  166,  166,  166,  166,
      166,  166,  166,  166,  166,  166,  166,  166,  166,    2,
        1,   77,    0,  161,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    2,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,  149,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,   75,    0,  160,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  164,    0,  154,    0,  157,  152,  152,  151,    0,
      146,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   80,  144,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,   81,  148,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,  150,    0,    0,  145,    0,    0,
        0,    0,    0,    8,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   19,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  121,   82,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,   38,    0,    0,
        0,    0,    0,    0,    0,    0,  165,  141,    0,    0,

        0,   74,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  161,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  149,  149,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  149,  149,  149,  149,  149,
      149,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  160,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  155,  155,    0,  158,  158,

        0,    0,  152,    0,    0,  153,  146,    0,  146,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  146,  146,  146,  146,  146,  146,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  148,
      148,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  148,  148,  148,  148,  148,  148,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,   94,   37,   50,   72,   22,   14,  138,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  108,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   90,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  137,    0,    0,  136,    0,    0,    0,   83,  113,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,   85,    0,  135,

        0,    0,    0,    0,    0,   91,    0,    0,    0,    0,
      147,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    2,    0,    0,    0,
      149,  149,  149,  149,  149,  149,  149,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      149,  149,  149,  149,  149,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,  155,    0,    0,  156,    0,
      158,    0,    0,  159,    0,  153,    0,  153,  146,  146,
      146,  146,  146,  146,  146,  146,  146,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      146,  146,  146,  146,  146,    0,    0,    0,    0,    0,
        0,  148,  148,  148,  148,  148,  148,  148,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  148,  148,  148,  148,  148,    0,    0,  150,    0,
        0,    0,    0,    0,    0,    0,    3,   55,    0,    0,
       95,    0,    0,    0,    0,    0,   40,    0,    0,    0,

        0,    0,   23,    0,   35,    0,   71,    0,    0,    0,
       15,    0,    0,    0,    0,    0,   32,    0,    0,    0,
        0,    0,   86,    0,    0,   31,    0,    0,    0,    0,
       39,    0,    0,    0,    0,    0,    0,   93,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   44,  106,  147,    0,  147,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  147,
      147,  147,  147,  147,  147,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,  142,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  149,  149,  149,  149,  149,    0,    0,  149,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      156,    0,  156,    0,  159,    0,  159,  146,  146,  146,
      146,  146,    0,    0,  146,  148,  148,  148,  148,  148,
        0,    0,  148,    0,    0,   92,   89,   33,    0,    0,
        0,    0,  133,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   96,   49,   18,    0,  109,    0,    0,  125,
        0,    0,  126,    0,  101,   24,  114,    0,   56,    0,

      107,   16,    0,    0,   21,    0,   52,    0,  130,   97,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  123,    0,    0,    0,    0,    0,    0,  100,
       29,   57,    0,   47,   17,  147,  147,  147,  147,  147,
      147,  147,  147,  147,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  147,  147,  147,
      147,  147,    0,    0,  143,  163,    0,    0,    0,    0,
      149,  162,    0,    0,    0,    0,  146,  148,    0,    0,
       98,    0,    0,   36,    0,    0,   45,    0,    0,    0,
      132,   58,    0,   20,   46,    0,    0,    0,    0,    0,

        0,   25,    0,    4,    0,    0,  139,    0,    5,    0,
        0,  115,    0,    0,    0,    0,   34,   70,    0,    0,
       99,    0,  131,    0,    0,  147,  147,  147,  147,  147,
        0,    0,  147,    0,    0,    0,    0,    0,   48,    0,
        0,    0,    0,    0,    0,  127,    0,    0,    0,   69,
      110,    0,    7,    0,  111,    0,   54,    0,    0,    0,
        0,  105,  122,    0,    0,    0,  147,   26,  120,    0,
      103,   88,    0,    0,   13,    6,    0,    0,    0,    0,
        0,    0,   53,  124,    0,  116,  117,  118,  119,    0,
      112,    0,   12,    0,    0,    0,    0,    0,  128,  129,

        0,  140,  104,   73,    0,    0,    0,    0,    0,    0,
       42,    0,    0,    0,   41,   87,   43,    0,  134,    0,
        0,    0,    0,    0,  102,    0
    } ;

static yyconst flex_int32_t yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    4,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    5,    6,    7,    8,    9,   10,   11,   12,   13,
       14,   15,   16,   17,   18,   19,   20,   21,   22,   23,
       24,   25,   26,   27,   21,   28,   21,   29,   30,   31,
       32,   33,   34,   35,   36,   37,   38,   39,   40,   41,
       42,   43,   44,   45,   46,   47,   48,   49,   50,   51,
       45,   52,   53,   54,   55,   56,   57,   58,   59,   60,
       61,   62,   63,   64,   65,    1,   66,   67,   68,   69,

       70,   71,   72,   73,   74,   75,   76,   77,   78,   79,
       80,   81,   75,   82,   83,   84,   85,   86,   87,   88,
       89,   90,   91,   92,   93,   10,   10,   94,   95,   96,
       96,   96,   96,   97,   98,   98,   98,   98,   98,   99,
       99,   98,  100,  101,  101,  101,  101,  101,  101,  101,
      102,  103,  103,  103,  103,  103,  103,  103,  103,  104,
      104,  104,  104,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,  105,  106,  106,  106,  106,  106,
      106,  106,  107,  108,  108,  108,  108,  108,  108,  109,
      110,  111,  111,  112,  113,  114,  114,  114,  114,  114,

      114,  114,  114,  115,  116,  117,  117,  117,  117,  117,
      117,  117,  117,  117,  117,  117,  117,  117,  117,  117,
      117,  117,  117,  118,  119,  120,  121,  122,  122,  122,
      122,  122,  122,  122,  122,  122,  123,  124,  125,  126,
      127,  127,  127,  128,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111
    } ;

static yyconst flex_int32_t yy_meta[129] =
    {   0,
        1,    1,    2,    2,    1,    1,    1,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        4,    4,    4,    4,    4,    4,    4,    4,    3,    3,
        1,    3,    3,    3,    3,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        3,    1,    3,    1,    6,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        1,    1,    1,    7,    8,    8,    8,    8,    8,    6,

        8,    8,    8,    8,    8,    8,    8,    8,    8,    6,
        7,    3,    6,    6,    3,    6,    6,    6,    6,    6,
        6,    6,    6,    3,    6,    6,    6,    3
    } ;

static yyconst flex_int16_t yy_base[1243] =
    {   0,
        0,    0,  703,18832,  127,18832,  697,  667,  126,   30,
      160,  685,  276,  157,18832,18832,  151,18832,  168,  176,
    18832,  270,  310,18832,  406,18832,  662,  440,    0,  550,
      642,  265,  404,  422,  638,  277,  688,  699,  725,  751,
      784,  802,  834,  852,  889,  907,  935,  967,  963, 1004,
      161,18832,  629,  632,    0, 1045, 1041,18832,  522,18832,
      111, 1041, 1058, 1075, 1092, 1109,  274, 1126,   28, 1143,
       76, 1160, 1177, 1194, 1211, 1228,   62, 1231, 1248,  220,
    18832,18832, 1352,  563,  795, 1266, 1282, 1297,  123, 1321,
     1338, 1387, 1341, 1404,  266, 1415, 1450, 1466, 1481, 1349,

     1498, 1515, 1525, 1535, 1552,  486, 1642, 1676, 1693, 1710,
     1727, 1744, 1761, 1778, 1795,  196, 1812, 1412, 1829, 1846,
     1863, 1880, 1897,  213, 1900, 1917,18832, 2016,  552, 2022,
     1941, 1957, 2051, 1567, 2068, 1972, 2085, 2095, 2112,  963,
      447,18832, 2086, 2204, 2096, 2214, 2224, 2235, 2264, 2285,
     2317, 2220, 2351, 2368, 2385, 2402, 2419, 2436, 2453,  242,
     2470, 1990, 2487, 2504, 2521, 2538, 2555,  227, 2558, 2575,
     2653,    0,18832, 2593, 2609, 2624, 2161, 2641, 2688, 2698,
     2708, 2725,  970,18832, 2815, 2849, 2866, 2883, 2900, 2917,
     2934, 2951, 2968,  335, 2985, 2172, 3002, 3019, 3036, 3053,

     3070,  362, 3073, 3090,  537, 3165, 3176, 3171, 3259, 3263,
     3291, 3309, 3328, 3346, 3374, 3370, 3387, 3404, 3421, 3438,
     3455, 3472,  445, 3489, 3506, 3523, 3540, 3557, 2242, 3574,
     3591, 3608, 3625, 3642,  370, 3645, 3662, 3737, 3739, 3765,
     3791, 3793, 3819, 3847, 3865, 3893, 3911, 3927, 3174, 3943,
     3976, 3980, 4017, 4013, 4054, 4065, 4091, 4117, 4119, 4151,
     4177, 4205, 4179, 4237, 4256, 4274, 4293, 4320, 4339, 4357,
     4376, 4404, 4422, 4454, 4472, 4491, 4509, 4528, 4561, 4579,
     4607, 4625, 4659, 4677, 4709, 4728, 4761, 4779, 4798, 4816,
     4844, 4848, 4876, 4894, 4913,  639,18832,18832, 4908, 4996,

     5008,18832, 5042, 5045, 5079, 5091, 5125, 5128, 5162, 5158,
     5175, 5192, 5209, 5226, 5243, 5260, 5277, 5294, 5311, 1302,
     5328, 5345,18832, 5449, 5363,  488, 5380, 5397, 5418, 5435,
     5484, 5501, 5518, 5535,  437, 5552, 5569, 5586, 5603, 5620,
     5637, 5654,    0,    0, 5671, 5688, 5705, 5722, 5739, 5756,
     5773,  387, 5790, 5807, 5824, 5841, 2650, 5858, 5875, 5892,
     5909, 5926,  384, 5929, 5946,    0,    0,    0,    0,    0,
        0, 5963, 5980, 5997, 6014, 6031, 6048, 6065, 6082, 6099,
     6116, 1973, 6133, 6150,18832, 6249, 6168,  422, 6185, 6218,
     6235, 6284, 6301, 6318, 6335, 6425, 6433, 3434, 6453, 6461,

     4973, 5222, 6484, 5530, 6275, 6329,    0,    0,    0, 6438,
     6461, 6478, 6495, 6512, 6529, 6546,  372, 6563, 6580, 6597,
     6614, 6631, 2740, 6648, 6665, 6682, 6699, 6419,  392, 6709,
     6726,    0,    0,    0,    0,    0,    0, 6743, 6760, 6777,
     6794, 6811, 6828, 6845, 6862, 6879, 6896, 2189, 6913, 6930,
     6947,  410, 6964, 6981, 6998, 7015, 7032, 7049, 7066,    0,
        0, 7083, 7100, 7117, 7134, 7151, 7168, 7185,  353, 7202,
     7219, 7236, 7253, 5125, 7270, 7287, 7304, 7321, 7338,  398,
     7341, 7358,    0,    0,    0,    0,    0,    0, 7375, 7392,
     7409, 7426, 7443, 7460, 7477, 7494, 7511, 7528, 3321, 7545,

     7562,    0, 7637, 7639, 7641, 7687, 7689, 7691, 7737, 7739,
     7741, 7787, 7789, 7791, 7837, 7839, 7841, 7887, 7883, 7900,
     7917, 7934, 7951, 7968, 7985, 8002, 8019, 8036, 3335, 8053,
     8070, 8145, 8147, 8173, 8199, 8210, 8236, 8247, 8284, 8295,
     8321, 8347, 8349, 8375, 8401, 8403, 8449, 8452, 8498, 8501,
     8547, 8549, 8595, 8597, 8644, 8646, 8692, 8694, 8696, 8744,
     8746, 8772, 8798, 8824, 8835, 8861, 8893, 8889, 8921, 8940,
     8958, 8986,  433, 9004, 9032, 9036, 9064, 9082, 9101, 9119,
     9138, 9156, 9184, 9203, 9221, 9240, 9258, 9286, 9304, 9336,
     9354, 9382, 9400, 9419, 9452, 9470, 9502, 7885, 9486, 9530,

     9557, 9576, 9594, 9613, 9645, 9641, 9673, 9692, 9720, 9739,
     9811, 9845, 9862, 9879, 9896, 9913, 9930, 9947, 9964,  407,
     9981, 6200, 9998,10015,10032,10049,10066,  402,10069,10086,
    10161,10163,10209,10211,10213,10259,10261,10257,10274,10378,
    10500, 3252,10292,10308,10323, 6362,10347,10364,10414,10367,
    10431, 5128,10622,10448,10469,10486,10530,10565,10591,10608,
        0,    0,    0,    0,    0,    0,    0,10657,10674,10691,
    10708,10725,10742,10759,10776,10793,10810, 3670,10827,10844,
        0,    0,    0,    0,    0,10861,10878,10977,11094, 9433,
    10896,10912,10927, 9736,10946,10963,11013,10966,11030, 6431,

    11211,11063,11080,11130,10581,11220,10703,10458,10610,11125,
    11228,11175,10655,11057,11253,11261,11278,11291,    0,    0,
        0,    0,    0,    0,    0,    0,    0,11246,11263,11280,
    11297,11314,11331,11348,11365,11382,11399, 3685,11416,11433,
        0,    0,    0,    0,    0,11450,11467,11545,11485,11502,
    11519,    0,    0,    0,    0,    0,    0,    0,11580,11597,
    11614,11631,11648,11665,11682,11699,11716,11733, 4168,11750,
    11767,    0,    0,    0,    0,    0,11784,11801,  429,11876,
    11878,11880,11926,11928,11924,11941,12016,12018,12064,12067,
    12101,12113,12160,12162,12208,12210,12236,12264,12283,12310,

    12337,12364,12383,12401,12420,12438,12466,12470,12498,12517,
    12535,12567,12569,12595,12623,12641,12660,12678,12697,12715,
    12734,12752,12771,12789,12808,12835,  434,12862,12881,12909,
    12913,12941,12959,12978,13010,13006,13047,13058,13084,13110,
    13112,13158,13169,13195,13221,13247,13258,  733,13284,13295,
    13332,13321,13369,13387,13406,13433,13460,13488,13492,13525,
    13543,13576,13594,13613,    0,    0,    0,13609,13626,13643,
    13660,13677,13694,13711,  315,11538,13728,13745,13762,13779,
    11157,13796,13813,13830,13847,13864,  506,13867,13884,    0,
        0,    0,    0,    0,    0,13901,13918,13935,13952,13969,

    13986,14003,14020,14037,14054, 4622,14071,14088,14163,14165,
    14191,14274,14188,  358,14205,14222,14243,14260,14309,14326,
    14343,    0,    0,    0,    0,    0,14360,14377,    0,14476,
    14395,  324,14412,14445,14462,14511,14528,14545,14562,13673,
    14251,14354,14502,14556,14652,14660,14668,    0,    0,    0,
        0,    0,14603,14620,    0,    0,    0,    0,    0,    0,
    14637,14654,    0,14729,14731,14733,14779,14781,14783,14829,
    14840,14866,14892,14894,14926,14944,14976,14978,15004,15032,
    15050,15082,15078,15110,15129,15156,15175,15193,15212,15230,
    15258,15276,15295,15313,15332,15350,18832,15382,15378,15410,

    15429,15447,15466,15493,15512,15530,15549,15567,15586,15604,
    15632,15650,15669,15687,15706,15724,  373,  211,  353,  345,
    15752,15771,15789,15808,15826,15845,15863,15895,15891,15923,
    15942,15960,15988,16006,16025,    0,    0,    0,    0,    0,
        0,    0,    0,    0,16021,16038,16055,16072,16089,16106,
    16123,16140,16157,16174, 4941,16191,16208,    0,    0,    0,
        0,    0,16225,16242,16317,18832,16400,16314,16331,16348,
        0,18832,16517,16369,16386,16436,    0,    0,16511,16514,
    16610,16612,16614,16660,16662,16708,16720,16754,16757,16803,
    16791,16837,16840,16874,16932,16920,16966,16978,17015,17026,

    17067,17078,17104,17115,17141,17167,17178,17215,17204,17252,
    17263,18832,  297,  281,  274,  267,17304,17315,17352,17364,
    17398,17410,17444,17447,17493,    0,    0,    0,    0,    0,
    17489,17506,    0,17481,17581,17584,17618,17636,17655, 4897,
    17673,17692,  219,17719, 4777,17738,17756,17775,17793,17821,
    17839,17867,17871,17904,17922,17941,17959,  263,  260,  259,
      223,17978,17996,18015,18042,18069,    0,18088,18106,18125,
    18152,18171,  264,  264,18189,18208,  211,18226,  275,18254,
    18258,18286,18304,18332,18336,18832,18832,18832,18832,18364,
    18383,18401,18429,  262,  283,  284,18433,  274,18461,18479,

    18507,18525,18544,18562,  389,  382,  407,18581,  426,18599,
    18832,  425,  430,18618,18832,18645,18832,  129,18664,   74,
      125,  625,  631,  640,18832,18832,18753,18759,18762,18770,
    18773,18779,18782,  126,18787,18795,18801,18804,18809,18815,
    18821,18825
    } ;

static yyconst flex_int16_t yy_def[1243] =
    {   0,
     1226,    1, 1226, 1226, 1226, 1226, 1226, 1226, 1227, 1228,
     1229, 1226, 1230, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1231, 1226, 1232, 1226, 1226, 1233, 1234, 1226,
       30,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
     1226, 1226, 1226, 1226,   30,   31,   31, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1227, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1228, 1226, 1226, 1226, 1226,

     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1230, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1232,  171, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,

     1226, 1226, 1226, 1226, 1234,   31,   31, 1231,   31,   31,
       31,   31,   31,   31,   31, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   30,   30,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31, 1226, 1226, 1226, 1235,   31,

       31, 1226,   31,   31,   31,   31,   31,   31,   31, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1236, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226,  107,  107, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226,  107,  107,  107,  107,  107,
      107, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1237, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,

     1226, 1226, 1226, 1226, 1226, 1226,  151,  151,  151, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226,  151,  151,  151,  151,  151,  151, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,  185,
      185, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226,  185,  185,  185,  185,  185,  185, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,

     1226, 1238,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31, 1226,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   30,   30,   31,

       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
       31,   31,   31,   31,   31,   31,   31, 1226, 1226, 1236,
     1236, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1239, 1226, 1226, 1226, 1240, 1226, 1226, 1226,
      107,  107,  107,  107,  107,  107,  107, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
      107,  107,  107,  107,  107, 1226, 1226, 1237, 1237, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,

     1241, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,  151,  151,
      151,  151,  151,  151,  151,  151,  151, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
      151,  151,  151,  151,  151, 1226, 1226, 1242, 1226, 1226,
     1226,  185,  185,  185,  185,  185,  185,  185, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226,  185,  185,  185,  185,  185, 1226, 1226, 1238,   31,
       31,   31,   31,   31, 1226, 1226,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,

       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31, 1226,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31, 1226,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,  611,  611,  611, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,  611,
      611,  611,  611,  611,  611, 1226, 1226, 1226, 1226, 1226,

     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,   31,   31,
       31, 1236, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226,  107,  107,  107,  107,  107, 1226, 1226,  107, 1237,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226,  151,  151,  151,
      151,  151, 1226, 1226,  151,  185,  185,  185,  185,  185,
     1226, 1226,  185,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31, 1226,   31,   31,   31,

       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31, 1226, 1226, 1226, 1226,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,  611,  611,  611,  611,  611,
      611,  611,  611,  611, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226,  611,  611,  611,
      611,  611, 1226, 1226,   31, 1226, 1236, 1226, 1226, 1226,
      107, 1226, 1237, 1226, 1226, 1226,  151,  185,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,

       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31, 1226, 1226, 1226, 1226, 1226,   31,   31,   31,   31,
       31,   31,   31,   31,   31,  611,  611,  611,  611,  611,
     1226, 1226,  611,   31,   31,   31,   31,   31,   31, 1226,
       31,   31, 1226,   31, 1226,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31, 1226, 1226, 1226,
     1226,   31,   31,   31,   31,   31,  611,   31,   31,   31,
       31,   31, 1226, 1226,   31,   31, 1226,   31, 1226,   31,
       31,   31,   31,   31,   31, 1226, 1226, 1226, 1226,   31,
       31,   31,   31, 1226, 1226, 1226,   31, 1226,   31,   31,

       31,   31,   31,   31, 1226, 1226, 1226,   31, 1226,   31,
     1226, 1226, 1226,   31, 1226,   31, 1226, 1226,   31, 1226,
     1226, 1226, 1226, 1226, 1226,    0, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226
    } ;

static yyconst flex_int16_t yy_nxt[18961] =
    {   0,
        4,    5,    6,    7,    5,    8,    9,   10,   11,    4,
       12,   13,   14,   15,   16,   17,   18,   19,   20,   21,
       22,   22,   22,   22,   22,   22,   22,   22,   23,   24,
       25,   26,   27,   28,   29,   30,   31,   32,   33,   34,
       35,   36,   37,   38,   39,   39,   40,   41,   42,   43,
       44,   45,   46,   47,   48,   39,   49,   39,   50,   39,
       51,    4,   52,   53,   54,   55,   31,   32,   33,   34,
       56,   36,   37,   38,   39,   39,   40,   41,   42,   43,
       44,   45,   46,   57,   48,   39,   49,   39,   50,   39,
       58,   59,   60,    4,   61,   62,   63,   61,   61,   61,

       61,   61,   61,   61,   61,   61,   64,   65,   65,   66,
        4,    4,   67,   68,    4,   69,   70,   71,   72,   73,
       74,   75,   76,    4,   77,   78,   79,    4,   80,   97,
      205,   80,   84,  309,  309,  309, 1222,  309, 1221,   98,
     1220,   99,   99,   99,   99,   99,   99,  100,  101,  101,
      101,  101,  102,  103,  103,  104,  105,  106,  141,  141,
      141,  141,  296,  296,  296,  296,  319,  319,  320,  143,
      142,  144,  144,  144,  144,  144,  144,  144,  144,  310,
      310,  310,  310,  310,  310,  310,  145,   85,  146,  146,
      146,  146,  146,  146,  146,  146,  147,  147,  147,  147,

      147,  147,  147,  147,  303,  303,  303,  303,  303,  303,
      303,  303,  303,  303,  303,  303,  303,  303,  303,  303,
      303,   80, 1196,  297,   80,   86,  327,  327,  327,  327,
      327,  327,  327, 1113, 1189,   87, 1114,   88,   88,   88,
       88,   88,   88,   89,   90,   90,   90,   90,   91,   92,
       92,   93,   94,   95,  108,  109,  110,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  111,  112,  112,  113,
     1188, 1187,  114,  115, 1186,  116,  117,  118,  119,  120,
      121,  122,  123, 1177,  124,  125,  126,  129,  148, 1161,
      149,  149,  149,  149,  149,  149,  149,  149, 1160, 1194,

      209,  371,  371,  371,  243,  371, 1195, 1159,  209,  150,
     1198,  244,  209,  209,  245, 1205,  246,  381,  381,  382,
      209, 1158, 1206,  209, 1207,  209,  209, 1209,  256, 1194,
      209,  447,  447,  448,  243,  209, 1195,  130,  209,  150,
     1198,  244,  209,  209,  245, 1205,  246,  437,  437,  437,
      209,  437, 1206,  209, 1207,  209,  209, 1209,  256,  333,
      333,  333,  333,  333,  333,  209, 1116,  308,  308,  308,
      308,  308,  308,  308,  308,  131,  308,  308,  308,  308,
     1115,  308,  308,  308, 1112,  132,  688,  133,  133,  133,
      133,  133,  133,  134,  135,  135,  135,  135,  136,  137,

      137,  138,  139,  140,  152,  153,  154,  152,  152,  152,
      152,  152,  152,  152,  152,  152,  155,  156,  156,  157,
      640,  865,  158,  159, 1211,  160,  161,  162,  163,  164,
      165,  166,  167, 1212,  168,  169,  170,  172,  173,  247,
      488,  488,  488,  248,  488,  997,  502,  249,  141,  141,
      141,  141,  209,  209, 1211,  250, 1213,  209,  827,  460,
      142, 1215,  209, 1212, 1217,  209,  498,  498,  499,  247,
      251,  209,  171,  248,  528,  528,  529,  249,  407,  252,
      209, 1218,  209,  209,  128,  250, 1213,  209,  677,  677,
      678, 1215,  209,  343, 1217,  209,  737,  737,  738,   96,

      251,  209,  768,  768,  769,  174,  905,  905,  906,  252,
      209, 1218,  895,  895,  895,  175,  895,  176,  176,  176,
      176,  176,  176,  177,  178,  178,  178,  178,  179,  180,
      180,  181,  182,  183,  186,  187,  188,  186,  186,  186,
      186,  186,  186,  186,  186,  186,  189,  190,  190,  191,
       83,  206,  192,  193,  502,  194,  195,  196,  197,  198,
      199,  200,  201,  386,  202,  203,  204,  206,  207,  324,
      206,  206,  206,  206,  206,  206,  206,  206,  208,  342,
      342,  342,  342,  342,  342,  209,  210,  209,  211,  209,
      209,  209,  209,  209,  209,  209,  212,  209,  213,  209,

      209,  209,  214,  209,  209,  215,  209,  209,  209,  209,
     1054, 1054, 1055,  302,  209,  209,  210,  209,  211,  209,
      209,  209,  209,  209,  209,  209,  212,  209,  213,  209,
      209,  209,  214,  209,  209,  215,  209,  209,  209,  209,
      296,  296,  296,  296,  216,  217,  218,  219,  219,  219,
      219,  219,  219,  219,  219,  219,  220,  221,  221,  222,
      299,  223,  224,  225,  226,  227,  228,  229,  230,  231,
      232,  233,  234,  209,  235,  236,  237,  238,  209, 1223,
      209,  253, 1224, 1225,  254,  239,  209,  209,  209,  255,
      240,  241,  298,  184,  209,  127,  209,  209,   82,   81,

      242,  297, 1226,  209, 1226, 1226, 1226,  238,  209, 1223,
      209,  253, 1224, 1225,  254,  239,  209,  209,  209,  255,
      240,  241, 1226,  257,  209, 1226,  209,  209, 1226, 1226,
      242,  209, 1226, 1226,  209, 1226,  209,  258, 1226,  259,
     1226, 1226,  209, 1226, 1226, 1226,  209,  260,  209, 1226,
      261,  262, 1226,  257, 1017, 1018, 1019,  209, 1020, 1226,
      209,  209, 1226, 1226,  209, 1226,  209,  258,  209,  259,
     1226, 1226,  209,  209,  209, 1226,  209,  260,  209, 1226,
      261,  262, 1226,  209, 1226, 1226,  263,  209,  264, 1226,
      209, 1226, 1226, 1226,  265, 1226, 1226, 1226,  209,  209,

      266,   83, 1226,  209,  209, 1226,   83, 1226, 1226,  209,
     1226, 1226, 1226,  209, 1226, 1226,  263, 1226,  264,  267,
     1226, 1226,  268,  269,  265, 1226, 1226,  270, 1226,  209,
      266, 1226,  209,  271, 1226, 1226, 1226,  272, 1226,  209,
     1226, 1226,  209, 1226, 1226,  209, 1226, 1226, 1226,  267,
      209,  273,  268,  269, 1226, 1226,   83,  270, 1226, 1226,
      209,   83,  209,  271, 1226,   83, 1226,  272, 1226,  209,
     1226, 1226,  209,   83,  274,  209,   83,  209,   83, 1226,
      209,  273,  209,  209,  275,  276, 1226,  209, 1226, 1226,
      209, 1226,  209, 1226, 1226,  209, 1226, 1226, 1226,  209,

      209,  209, 1226,  277,  274, 1226, 1226,  209, 1226, 1226,
      209, 1226,  209,  209,  275,  276, 1226,  209, 1226, 1226,
     1226, 1226,  209, 1226,  278,  209, 1226, 1226,  279, 1226,
      209,  209,  209,  277, 1226, 1226, 1226,  209,  280, 1226,
      209, 1226,  281, 1226, 1226, 1226,  282,  209, 1226,  283,
      284, 1226, 1226, 1226,  278,  209,  209, 1226,  279, 1226,
      285,  286,  209, 1226, 1226,  209, 1226,  209,  280, 1226,
      209, 1226,  281, 1226, 1226, 1226,  282,  209,  287,  283,
      284, 1226, 1226,  209,  288,  209,  209, 1226, 1226, 1226,
      285,  286, 1226,  209, 1226,  209, 1226, 1226,  209, 1226,

      209, 1226,  209, 1226,  289,  293,  294, 1226,  287, 1226,
      209,  209,  209,  209,  288,  290,  209, 1226,  291,  292,
     1226,  209, 1226,  209, 1226,  209, 1226, 1226,  209, 1226,
     1226, 1226,  209, 1226,  289,  293,  294, 1226, 1226,  209,
      209,  209,  209,  295, 1226,  290,  209,  209,  291,  292,
     1226,  209,  209,  209, 1226,  209,  395,  395,  395,  395,
      395,  395,  209,  459,  459,  459,  459,  459,  459,  209,
     1226, 1226, 1226,  295, 1226, 1226,  209,  209, 1226, 1226,
      209, 1226,  209,  209,  287, 1226, 1226, 1226,  253,  209,
      288,  254,  209,  209,  209, 1226,  255, 1226, 1226,  209,

     1226, 1226, 1226,  209, 1226, 1226,  209, 1226, 1226, 1226,
      300, 1226, 1226, 1226,  287, 1226, 1226, 1226,  253,  209,
      288,  254,  301,  209,  209, 1226,  255, 1226, 1226,  209,
     1226, 1226, 1226,  209,  304,  304,  304,  304,  304,  304,
      304,  304,  304,  304,  304,  304,  304,  304,  304,  304,
      304,  304,  304,  304,  304,  304,  304,  304,  303,  303,
      303,  303,  303,  303,  303,  303,  303,  303,  305,  305,
      305,  305,  305,  305,  305,  303,  303,  303,  303,  303,
      303,  303,  303,  303,  303,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,

      306,  306,  307,  307,  307,  307,  307,  307,  307,  307,
      307,  307,  307,  307,  306,  306,  306,  303,  303,  308,
      308,  308,  308,  308,  308,  308,  308,  308,  308,  308,
      308,  308,  308,  308,  308,  308,  309,  309,  309,  309,
      309,  309,  309,  309,  309,  309,  309,  309,  309,  309,
      309,  309,  309,  311,  311,  311,  311,  311,  311,  311,
      311,  311,  311,  311,  311,  311,  311,  311,  311,  311,
      312,  313,  314,  314,  314,  314,  314,  314,  314,  314,
      314,  314,  315,  315,  315,  315,  314,  316,  314,  314,
      314,  314,  314,  314,  314,  314,  314,  314,  314,  314,

      314,  314,  314,  314,  317,  317,  317,  317,  317,  317,
      317,  317,  317,  317,  317,  317,  317,  317,  317,  317,
      317,  318,  318,  318,  318,  318,  318,  318,  318,  318,
      318,  321,  321,  321,  321,  321,  321,  321,  321,  321,
      321,  322,  322,  322,  322,  322,  322,  322,  322,  322,
      322,  322,  322,  322,  322,  322,  322,  322,  323,  325,
      325,  325,  325,  325,  325,  325,  325,  325,  325,  325,
      325,  325,  325,  325,  325,  326,  326,  326,  326,  326,
      326,  326,  326,  326,  326,  326,  326,  326,  326,  326,
       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,

       83,   83,   83,   83,   83,   83,   83,  637,  637,  637,
      637,  637, 1226,   85,  328,  328,  328,  328,  328,  328,
      328,  328,  328,  328,  328,  328,  328,  328,  328,  328,
      328,  329,  329,  329,  329,  329,  329,  329,  329,  329,
      329,  331,  331,  331,  331,  331,  331,  331,  331,  331,
      331,   86,  336,  336,  336,  336,  336,  336,  336, 1226,
     1226,   87, 1226,   88,   88,   88,   88,   88,   88,   89,
       90,   90,   90,   90,   91,   92,   92,   93,   94,   95,
      330,  330,  330,  330,  330,  330,  330,  330,  330,  330,
      330,  330,  330,  330,  330,  330,  330,  332,  332,  332,

      332,  332,  332,  332,  332,  332,  332,  332,  332,  332,
      332,  332,  332,  332,   97,  372,  372,  372,  372,  372,
      372,  372, 1226, 1226,   98, 1226,   99,   99,   99,   99,
       99,   99,  100,  101,  101,  101,  101,  102,  103,  103,
      104,  105,  106,  334,  334,  334,  334,  334,  334,  334,
      334,  334,  334,  334,  334,  334,  334,  334,  334,  335,
      335,  335,  335,  335,  335,  335,  335,  335,  335,  335,
      335,  335,  335,  335,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,  337,  337,  337,  337,  337,  337,  337,  337,  337,

      337,  337,  337,  337,  337,  337,  337,  337,  338,  338,
      338,  338,  338,  338,  338,  338,  338,  338,  339,  339,
      339,  339,  339,  339,  339,  339,  339,  339,  339,  339,
      339,  339,  339,  339,  339,  340,  340,  340,  340,  340,
      340,  340,  340,  340,  340,  341,  341,  341,  341,  341,
      341,  341,  341,  341,  341,  341,  341,  341,  341,  341,
      341,  341,  343,  343,  343,  343,  343,  343,  343,  343,
      389,  389,  389,  389,  389,  389,  389,  344,  344,  344,
      344,  344,  344,  344,  344,  344,  344,  344,  344,  344,
      344,  344,  344,  344,  344,  344,  344,  344,  344,  344,

      344,  344, 1226, 1226, 1226, 1226,  344,  344,  344,  344,
      344,  344,  344,  344,  344,  344,  344,  344,  344,  344,
      344,  344,  344,  344,  344,  344,  344,  344,  344,  344,
      344,  344, 1226, 1226, 1226, 1226,  345,  346,  347,  348,
      348,  348,  348,  348,  348,  348,  348,  348,  349,  350,
      350,  351, 1226,  352,  353,  354, 1226,  355,  356,  357,
      358,  359,  360,  361,  362, 1226,  363,  364,  365,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,

      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      368,  368,  368,  368,  368,  368,  368,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  369,  369,  369,
      369,  369,  369,  369,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  369,  370,  370,  370,  370,  370,  370,
      370,  370,  370,  370,  370,  370,  369,  369,  369,  366,
      366,  107,  107,  107,  107,  107,  107,  107,  107, 1226,
      107,  107,  107,  107, 1226,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,

      107,  107,  107,  107,  107,  371,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      371,  371,  373,  373,  373,  373,  373,  373,  373,  373,
      373,  373,  373,  373,  373,  373,  373,  373,  373,  374,
      375,  376,  376,  376,  376,  376,  376,  376,  376,  376,
      376,  377,  377,  377,  377,  376,  378,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376,  376,  376,  376,
      376,  376,  376,  379,  379,  379,  379,  379,  379,  379,
      379,  379,  379,  379,  379,  379,  379,  379,  379,  379,
      380,  380,  380,  380,  380,  380,  380,  380,  380,  380,

      383,  383,  383,  383,  383,  383,  383,  383,  383,  383,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  385,  128, 1226,
     1226, 1226, 1226,  128,  387,  387,  387,  387,  387,  387,
      387,  387,  387,  387,  387,  387,  387,  387,  387,  387,
      388,  388,  388,  388,  388,  388,  388,  388,  388,  388,
      388,  388,  388,  388,  388,  391,  391,  391,  391,  391,
      391,  391,  391,  391,  391, 1226, 1226,  130,  685,  685,
      685,  685,  685,  128, 1226, 1226, 1226, 1226,  128, 1226,
     1226, 1226,  128,  438,  438,  438,  438,  438,  438,  438,

      128, 1226, 1226,  128, 1226,  128,  396,  396,  396,  396,
      396,  396,  396,  396, 1226,  131,  399,  399,  399,  399,
      399,  399,  399,  399, 1226,  132, 1226,  133,  133,  133,
      133,  133,  133,  134,  135,  135,  135,  135,  136,  137,
      137,  138,  139,  140,  128,  128,  128,  128,  128,  128,
      128,  128,  128,  128,  128,  128,  128,  128,  128,  128,
      128,  390,  390,  390,  390,  390,  390,  390,  390,  390,
      390,  390,  390,  390,  390,  390,  390,  390,  392,  392,
      392,  392,  392,  392,  392,  392,  392,  392,  392,  392,
      392,  392,  392,  392,  392,  393,  393,  393,  393,  393,

      393,  393,  393,  393,  393,  394,  394,  394,  394,  394,
      394,  394,  394,  394,  394,  394,  394,  394,  394,  394,
      394,  394,  397, 1226,  144,  144,  144,  144,  144,  144,
      144,  144,  400, 1226,  146,  146,  146,  146,  146,  146,
      146,  146, 1226,  398,  147,  147,  147,  147,  147,  147,
      147,  147, 1226,  401, 1226,  403,  403,  403,  403,  403,
      403,  403,  403,  402,  453,  453,  453,  453,  453,  453,
      453, 1226, 1226,  398,  404,  489,  489,  489,  489,  489,
      489,  489,  148,  401,  149,  149,  149,  149,  149,  149,
      149,  149, 1226,  402,  745,  745,  745,  745,  745, 1226,

      405, 1226,  405,  150,  404,  406,  406,  406,  406,  406,
      406,  406,  406,  432,  432,  432,  432,  432,  432,  432,
      432,  432,  432,  432,  432,  432,  432,  432,  432,  432,
     1226, 1226, 1226,  150,  407,  408, 1226,  407,  407,  407,
      407,  407,  407,  407,  407,  519,  519,  519,  519,  519,
      519,  519,  409,  409,  409,  409,  409,  409,  409,  409,
      409,  409,  409,  409,  409,  409,  409,  409,  409,  409,
      409,  409,  409,  409,  409,  409,  409, 1226, 1226, 1226,
     1226,  409,  409,  409,  409,  409,  409,  409,  409,  409,
      409,  409,  409,  409,  409,  409,  409,  409,  409,  409,

      409,  409,  409,  409,  409,  409,  409, 1226, 1226, 1226,
     1226,  410,  411,  412,  413,  413,  413,  413,  413,  413,
      413,  413,  413,  414,  415,  415,  416, 1226,  417,  418,
      419,  420,  421,  422,  423,  424,  425,  426,  427,  428,
     1226,  429,  430,  431,  433,  433,  433,  433,  433,  433,
      433,  433,  433,  433,  433,  433,  433,  433,  433,  433,
      433,  433,  433,  433,  433,  433,  433,  433,  432,  432,
      432,  432,  432,  432,  432,  432,  432,  432,  434,  434,
      434,  434,  434,  434,  434,  432,  432,  432,  432,  432,
      432,  432,  432,  432,  432,  435,  435,  435,  435,  435,

      435,  435,  435,  435,  435,  435,  435,  435,  435,  435,
      435,  435,  436,  436,  436,  436,  436,  436,  436,  436,
      436,  436,  436,  436,  435,  435,  435,  432,  432,  151,
      151,  151,  151,  151,  151,  151,  151, 1226,  151,  151,
      151,  151, 1226,  151,  151,  151,  151,  151,  151,  151,
      151,  151,  151,  151,  151,  151,  151,  151,  151,  151,
      151,  151,  151,  437,  437,  437,  437,  437,  437,  437,
      437,  437,  437,  437,  437,  437,  437,  437,  437,  437,
      439,  439,  439,  439,  439,  439,  439,  439,  439,  439,
      439,  439,  439,  439,  439,  439,  439,  440,  441,  442,

      442,  442,  442,  442,  442,  442,  442,  442,  442,  443,
      443,  443,  443,  442,  444,  442,  442,  442,  442,  442,
      442,  442,  442,  442,  442,  442,  442,  442,  442,  442,
      442,  445,  445,  445,  445,  445,  445,  445,  445,  445,
      445,  445,  445,  445,  445,  445,  445,  445,  446,  446,
      446,  446,  446,  446,  446,  446,  446,  446,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  450,  450,
      450,  450,  450,  450,  450,  450,  450,  450,  450,  450,
      450,  450,  450,  450,  450,  173,  451,  451,  451,  451,
      451,  451,  451,  451,  451,  451,  451,  451,  451,  451,

      451,  451,  452,  452,  452,  452,  452,  452,  452,  452,
      452,  452,  452,  452,  452,  452,  452,  171,  171,  171,
      171,  171,  171,  171,  171,  171,  171,  171,  171,  171,
      171,  171,  171,  171,  454,  454,  454,  454,  454,  454,
      454,  454,  454,  454,  454,  454,  454,  454,  454,  454,
      454, 1226,  174,  668,  668,  668,  668,  668,  668,  668,
     1226, 1226,  175, 1226,  176,  176,  176,  176,  176,  176,
      177,  178,  178,  178,  178,  179,  180,  180,  181,  182,
      183,  455,  455,  455,  455,  455,  455,  455,  455,  455,
      455,  456,  456,  456,  456,  456,  456,  456,  456,  456,

      456,  456,  456,  456,  456,  456,  456,  456,  457,  457,
      457,  457,  457,  457,  457,  457,  457,  457,  458,  458,
      458,  458,  458,  458,  458,  458,  458,  458,  458,  458,
      458,  458,  458,  458,  458,  460,  460,  460,  460,  460,
      460,  460,  460,  728,  728,  728,  728,  728,  728,  728,
      461,  461,  461,  461,  461,  461,  461,  461,  461,  461,
      461,  461,  461,  461,  461,  461,  461,  461,  461,  461,
      461,  461,  461,  461,  461, 1226, 1226, 1226, 1226,  461,
      461,  461,  461,  461,  461,  461,  461,  461,  461,  461,
      461,  461,  461,  461,  461,  461,  461,  461,  461,  461,

      461,  461,  461,  461,  461, 1226, 1226, 1226, 1226,  462,
      463,  464,  465,  465,  465,  465,  465,  465,  465,  465,
      465,  466,  467,  467,  468, 1226,  469,  470,  471, 1226,
      472,  473,  474,  475,  476,  477,  478,  479, 1226,  480,
      481,  482,  483,  483,  483,  483,  483,  483,  483,  483,
      483,  483,  483,  483,  483,  483,  483,  483,  483,  484,
      484,  484,  484,  484,  484,  484,  484,  484,  484,  484,
      484,  484,  484,  484,  484,  484,  484,  484,  484,  484,
      484,  484,  484,  483,  483,  483,  483,  483,  483,  483,
      483,  483,  483,  485,  485,  485,  485,  485,  485,  485,

      483,  483,  483,  483,  483,  483,  483,  483,  483,  483,
      486,  486,  486,  486,  486,  486,  486,  486,  486,  486,
      486,  486,  486,  486,  486,  486,  486,  487,  487,  487,
      487,  487,  487,  487,  487,  487,  487,  487,  487,  486,
      486,  486,  483,  483,  185,  185,  185,  185,  185,  185,
      185,  185, 1226,  185,  185,  185,  185, 1226,  185,  185,
      185,  185,  185,  185,  185,  185,  185,  185,  185,  185,
      185,  185,  185,  185,  185,  185,  185,  185,  488,  488,
      488,  488,  488,  488,  488,  488,  488,  488,  488,  488,
      488,  488,  488,  488,  488,  490,  490,  490,  490,  490,

      490,  490,  490,  490,  490,  490,  490,  490,  490,  490,
      490,  490,  491,  492,  493,  493,  493,  493,  493,  493,
      493,  493,  493,  493,  494,  494,  494,  494,  493,  495,
      493,  493,  493,  493,  493,  493,  493,  493,  493,  493,
      493,  493,  493,  493,  493,  493,  496,  496,  496,  496,
      496,  496,  496,  496,  496,  496,  496,  496,  496,  496,
      496,  496,  496,  497,  497,  497,  497,  497,  497,  497,
      497,  497,  497,  500,  500,  500,  500,  500,  500,  500,
      500,  500,  500,  501,  501,  501,  501,  501,  501,  501,
      501,  501,  501,  501,  501,  501,  501,  501,  501,  501,

      209, 1226, 1226, 1226, 1226, 1226, 1226, 1226,  209, 1226,
      209,  209,  209,  209,  209, 1226, 1226, 1226, 1226,  209,
      209, 1226,  209,  209,  209,  209,  548, 1226, 1226,  209,
      209, 1226, 1226, 1226,  209, 1226, 1226, 1226,  209, 1226,
      209,  209,  209,  209,  209, 1226, 1226, 1226, 1226,  209,
      209, 1226,  209,  209,  209,  209,  548, 1226,  640,  209,
     1226, 1226, 1226,  640,  209,  152,  153,  154,  152,  152,
      152,  152,  152,  152,  152,  152,  152,  155,  156,  156,
      157, 1226, 1226,  158,  159, 1226,  160,  161,  162,  163,
      164,  165,  166,  167,  209,  168,  169,  170,  209, 1226,

     1226, 1226,  209, 1226, 1226, 1226,  209,  209,  209, 1226,
     1226,  209,  209,  640, 1226,  503, 1226,  209,  640, 1226,
     1226,  209,  640, 1226,  209, 1226,  209, 1226,  209,  504,
      640, 1226,  209,  640,  209,  640,  209,  209,  209,  209,
      209,  209,  209, 1226,  209,  503, 1226,  209, 1226,  209,
     1226,  209,  209, 1226, 1226,  505,  209,  209,  209,  504,
     1226, 1226, 1226,  209,  209, 1226, 1226,  209, 1226,  209,
      209,  209, 1226, 1226,  209, 1226,  209,  209, 1226,  209,
     1226,  209,  209,  507, 1226,  505,  506,  209,  209,  209,
     1226,  508, 1226,  209,  209,  209, 1226,  209, 1226, 1226,

     1226,  209, 1226, 1226,  209, 1226,  209,  209, 1226,  209,
     1226,  209, 1226,  507, 1226,  509,  506,  209, 1226,  209,
     1226,  508,  209,  209,  209,  209,  776,  776,  776,  776,
      776, 1226,  209, 1226,  209, 1226, 1226, 1226, 1226,  209,
      784,  784,  784,  784,  784,  509, 1226,  209, 1226,  708,
     1226,  708,  209,  209,  709,  709,  709,  709,  709,  709,
      709,  709,  209,  510,  511,  511,  511,  511,  511,  511,
      511,  511,  511,  511,  511,  511,  511,  511,  511,  511,
      512,  512,  512,  512,  512,  512,  512,  512,  512,  512,
      512,  512,  512,  512,  512,  512,  512,  512,  512,  512,

      512,  512,  512,  512,  511,  511,  511,  511,  511,  511,
      511,  511,  511,  511,  511,  511,  511,  511,  511,  511,
      511,  511,  511,  511,  511,  511,  511,  511,  511,  511,
      511,  513,  513,  513,  513,  513,  513,  513,  511,  511,
      511,  511,  511,  511,  511,  511,  511,  511,  514,  514,
      514,  514,  514,  514,  514,  514,  514,  514,  514,  514,
      514,  514,  514,  514,  514,  515,  515,  515,  515,  515,
      515,  515,  515,  515,  515,  515,  515,  514,  514,  514,
      511,  511,  209,  209,  209,  209,  209,  209,  209,  209,
     1226,  209,  209,  209,  209, 1226,  209,  209,  209,  209,

      209,  209,  209,  209,  209,  209,  209,  209,  209,  209,
      209,  209,  209,  209,  209,  209,  209,  209,  209,  209,
      209,  209,  209,  209,  209,  209,  209,  209,  209,  209,
      209,  209,  209,  516,  516,  516,  516,  516,  516,  516,
      516,  516,  516,  516,  516,  517,  517,  517,  209,  517,
      518,  518,  518,  518,  518,  518,  518,  518,  518,  518,
      518,  518,  518,  518,  518,  518,  518,  520,  520,  520,
      520,  520,  520,  520,  520,  520,  520,  520,  520,  520,
      520,  520,  520,  520,  521,  522,  523,  523,  523,  523,
      523,  523,  523,  523,  523,  523,  524,  524,  524,  524,

      523,  525,  523,  523,  523,  523,  523,  523,  523,  523,
      523,  523,  523,  523,  523,  523,  523,  523,  526,  526,
      526,  526,  526,  526,  526,  526,  526,  526,  526,  526,
      526,  526,  526,  526,  526,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  530,  530,  530,  530,  530,
      530,  530,  530,  530,  530,  531,  531,  531,  531,  531,
      531,  531,  531,  531,  531,  531,  531,  531,  531,  531,
      531,  531,  209, 1226,  209,  926,  926,  926,  926,  926,
      209, 1226,  209, 1226, 1226,  209,  209,  533,  209,  532,
      952,  952,  952,  952,  952,  209, 1226,  209, 1226, 1226,

      209, 1226,  209, 1226,  209, 1226, 1226, 1226,  209, 1226,
      209, 1226,  209,  209,  534,  209,  209,  533,  209,  532,
     1226, 1226, 1226,  209, 1226,  209,  209,  209,  209, 1226,
      209, 1226, 1226, 1226,  209, 1226,  209, 1226,  209,  209,
      209,  209,  209,  209,  534,  535, 1226, 1226, 1226,  209,
     1226,  209, 1226,  209,  209, 1226,  209, 1226,  209, 1226,
     1226, 1226,  536, 1226,  209, 1226,  209,  209,  209,  209,
      209,  209,  209, 1226, 1226,  535, 1226,  209, 1226,  209,
     1226,  209,  209, 1226,  209, 1226,  537, 1226, 1226, 1226,
      209, 1226,  536, 1226, 1226,  209,  209,  209,  209, 1226,

      538, 1226, 1226, 1226, 1226,  209, 1226,  209,  209, 1226,
     1226, 1226,  209,  539,  209,  540,  537, 1226, 1226,  541,
      209, 1226, 1226,  209, 1226,  209,  209, 1226,  209, 1226,
      538, 1226,  542, 1226, 1226,  209,  209, 1226,  209, 1226,
     1226,  209,  209,  539,  209,  540,  209, 1226, 1226,  541,
     1226,  209, 1226,  209,  209, 1226, 1226, 1226,  209,  209,
      209, 1226,  542,  209,  543,  209,  209,  545, 1226,  544,
     1226,  209,  209,  546, 1226,  209,  209, 1226,  209,  547,
     1226,  209,  209, 1226,  209, 1226,  209, 1226, 1226,  209,
      209,  209,  549,  209,  543,  209, 1226,  545, 1226,  544,

     1226,  209, 1226,  546, 1226,  209, 1226, 1226,  209,  547,
     1226,  209,  209,  550,  551,  209,  209, 1226, 1226,  209,
     1226,  209,  549,  552,  209,  209, 1226, 1226,  209,  209,
     1226,  209, 1226, 1226,  209, 1226, 1226, 1226,  209, 1226,
     1226,  209, 1226,  550,  551,  209, 1226, 1226,  209,  209,
     1226, 1226,  209,  552,  209,  209,  209, 1226,  209,  209,
      209,  209,  554,  553,  209,  209,  209, 1226,  209, 1226,
     1226,  209, 1226, 1226, 1226,  209, 1226, 1226,  209, 1226,
     1226, 1226,  209, 1226, 1226, 1226,  209, 1226, 1226,  209,
      209,  209,  554,  553, 1226,  209,  209,  209, 1226, 1226,

      556,  209,  209,  555, 1226,  209, 1226, 1226,  209, 1226,
     1226, 1226,  209,  209,  557, 1226, 1226, 1226, 1226,  209,
     1226, 1226, 1226,  209, 1226, 1226,  209,  209, 1226, 1226,
      556, 1226,  209,  555,  209, 1226, 1226, 1226,  209,  209,
      209, 1226,  209,  209,  557, 1226,  558, 1226, 1226,  209,
     1226, 1226,  209,  209,  209, 1226,  209, 1226, 1226, 1226,
      209, 1226,  209, 1226,  209,  209,  209,  209,  209,  209,
      209,  559, 1226, 1226, 1226,  209,  558,  209, 1226,  209,
     1226, 1226,  209, 1226,  209, 1226,  209, 1226, 1226, 1226,
      209, 1226,  209, 1226,  209,  209,  209,  209,  209,  209,

      209,  559, 1226,  560,  561,  209, 1226,  209, 1226,  209,
     1226, 1226,  209, 1226,  209, 1226,  209, 1226, 1226, 1226,
      562, 1226,  209, 1226,  209,  209,  209,  568,  209,  209,
      209, 1226, 1226,  560,  561,  209, 1226,  209, 1226,  209,
      209,  563,  209, 1226,  209, 1226, 1226, 1226,  564, 1226,
      562,  565,  209,  566,  209,  209,  209,  568,  209,  567,
     1226, 1226, 1226,  209, 1226,  209, 1226,  209, 1226, 1226,
      209,  563,  569,  960,  960,  960,  960,  960,  564, 1226,
      209,  565, 1226,  566,  209,  209,  209, 1226, 1226,  567,
     1226,  209, 1226,  209, 1226,  209, 1226, 1226, 1226,  209,

     1226, 1226,  569,  570,  209,  209, 1226, 1226, 1226,  571,
      209, 1226, 1226, 1226,  209,  209,  209,  209, 1226, 1226,
     1226,  209,  209,  209, 1226,  209, 1226, 1226,  209,  209,
     1226,  573,  209,  570,  209,  209,  209, 1226, 1226,  571,
     1226,  209,  209, 1226,  209, 1226, 1226,  209, 1226, 1226,
      572,  209,  209,  209, 1226,  209, 1226, 1226,  209, 1226,
     1226, 1226,  209,  209, 1226, 1226,  209, 1226,  209,  209,
     1226,  209,  209, 1226,  209, 1226, 1226, 1226,  209, 1226,
      572,  209,  209, 1226, 1226,  209,  574,  209,  209, 1226,
     1226, 1226,  209,  209, 1226, 1226, 1226,  209,  209,  209,

      209, 1226, 1226, 1226,  209,  575,  209, 1226,  209, 1226,
     1226,  209,  209, 1226, 1226,  209,  574,  209,  209,  209,
     1226, 1226,  209, 1226,  576,  209, 1226,  209, 1226, 1226,
      209,  577, 1226, 1226,  209,  575,  209, 1226, 1226,  209,
     1226,  209, 1226, 1226, 1226,  209, 1226,  209, 1226,  209,
     1226,  578,  209,  209,  576,  209, 1226,  209, 1226, 1226,
     1226,  577,  209, 1226,  209,  209, 1226, 1226, 1226,  209,
      209,  209, 1226, 1226, 1226,  579, 1226,  209,  580, 1226,
      209,  578,  209,  209, 1226, 1226, 1226,  209, 1226,  209,
     1226, 1226,  209, 1226,  581,  209, 1226,  209, 1226, 1226,

      209,  209,  209,  209, 1226,  579, 1226,  209,  580, 1226,
      209, 1226,  209, 1226, 1226,  209, 1226, 1226, 1226,  209,
      209,  209, 1226, 1226,  581,  582,  209,  209, 1226,  583,
      209, 1226,  209,  209,  209, 1226, 1226,  209, 1226,  209,
      209, 1226,  209, 1226,  209,  209, 1226, 1226,  584,  209,
      209,  209,  585, 1226, 1226,  582,  209,  209,  209,  583,
      209, 1226, 1226,  209,  209, 1226, 1226,  209, 1226,  209,
      209,  209, 1226, 1226,  209, 1226,  586,  209,  584,  209,
     1226, 1226,  585, 1226, 1226, 1226,  209,  209,  209, 1226,
     1226, 1226, 1226,  209, 1226, 1226,  209,  209, 1226,  587,

     1226,  209,  588, 1226,  209, 1226,  586,  209, 1226,  209,
      209, 1226, 1226, 1226,  209, 1226,  209, 1226, 1226,  209,
     1226, 1226,  209, 1226, 1226, 1226,  209,  209,  209,  587,
     1226, 1226,  588,  589,  209, 1226, 1226,  209, 1226,  209,
      209, 1226,  209, 1226,  209, 1226, 1226, 1226, 1226,  209,
      209, 1226,  209, 1226,  590,  209,  209,  209,  209, 1226,
      209, 1226,  591,  589, 1226,  209, 1226,  209,  209, 1226,
     1226,  592,  209,  209,  209,  593,  594, 1226, 1226, 1226,
      209, 1226, 1226,  209,  590,  209,  209, 1226, 1226, 1226,
      209, 1226,  591, 1226,  595,  209, 1226, 1226,  209, 1226,

     1226,  592,  209,  209,  209,  593,  594,  209,  209, 1226,
     1226, 1226,  209,  209, 1226, 1226, 1226,  209, 1226, 1226,
      209, 1226, 1226,  596,  595,  209,  209, 1062, 1062, 1062,
     1062, 1062,  209, 1226, 1226,  209, 1226,  209,  209, 1226,
     1226, 1226,  209, 1226,  597, 1226, 1226,  209, 1226, 1226,
      209, 1226,  209,  596, 1226,  209,  209,  209,  209, 1226,
      598, 1226, 1226,  209,  599,  209, 1226,  209, 1226, 1226,
     1226,  209, 1226, 1226,  597,  600,  209,  209, 1145, 1145,
     1145, 1145,  209, 1226, 1226, 1226,  209,  209,  209, 1226,
      598, 1226, 1226,  209,  599, 1226,  209,  209, 1226, 1226,

     1226,  209, 1226, 1226,  209,  600,  209,  209,  601,  209,
      209, 1226, 1226, 1226,  209, 1179,  209, 1226, 1226,  209,
     1226, 1226,  209, 1226, 1226, 1226,  209,  209,  209, 1226,
     1226, 1226, 1226,  602,  209, 1226, 1226,  209,  601,  209,
      209,  209, 1226, 1226,  209, 1179,  209,  209, 1226,  209,
     1226,  209,  209, 1226,  603, 1226,  209,  209,  209,  604,
     1226, 1226, 1226,  602,  209,  605, 1226,  209, 1226, 1226,
     1226,  209, 1226, 1226,  209, 1226,  209,  209, 1226,  209,
     1226,  209, 1226,  209,  603, 1226,  209,  606, 1226,  604,
     1226,  607,  209,  209,  209,  605,  209,  209, 1140, 1140,

     1140, 1140,  209, 1226,  209, 1226,  209, 1226, 1226,  209,
     1226,  209, 1226,  209, 1226,  608, 1226,  606, 1226,  209,
     1226,  607,  209,  209,  209,  209,  209,  209, 1226,  209,
     1226, 1226,  209, 1226,  209, 1173,  209,  209, 1226, 1226,
     1226,  209,  209,  209, 1226,  608, 1226,  609,  610,  209,
     1226, 1226,  209, 1174,  209,  209,  209, 1226, 1226,  209,
     1226,  209,  209, 1226,  209, 1173, 1226,  209, 1226, 1226,
     1226,  209,  209,  209, 1226, 1226, 1226,  609,  610, 1226,
     1226, 1226,  209, 1174, 1226, 1226,  209, 1226,  713, 1226,
      713,  209,  209,  714,  714,  714,  714,  714,  714,  714,

      714,  209,  612,  613,  614,  612,  612,  612,  612,  612,
      612,  612,  612,  612,  615,  616,  616,  617, 1226, 1226,
      618,  619, 1226,  620,  621,  622,  623,  624,  625,  626,
      627,  209,  628,  629,  630, 1226, 1226, 1226, 1226,  209,
     1226, 1226, 1226,  209,  209,  209, 1130, 1130, 1130, 1130,
     1130,  209, 1226, 1226,  209, 1226,  209,  209, 1226, 1226,
     1226,  209, 1226, 1226, 1226, 1226,  209, 1226, 1226,  209,
     1226, 1226,  631,  209,  209,  209, 1226,  209, 1226, 1226,
      209,  209, 1226, 1226,  209,  209,  209,  209,  209, 1226,
      209,  209,  632,  209,  209, 1226,  209, 1226, 1226, 1226,

      209, 1226, 1226,  209, 1226, 1226, 1226,  209, 1226, 1226,
      209, 1226, 1226, 1226,  209,  209, 1226, 1226,  209, 1226,
      209,  209,  209,  209,  209, 1226,  209,  209,  209, 1226,
      209, 1226, 1226,  209,  209, 1226, 1226,  209, 1226,  209,
      209, 1226, 1226, 1226,  209, 1226, 1226, 1226, 1226,  209,
     1226, 1226,  209, 1226, 1226, 1226,  209,  209,  209, 1226,
      209, 1226, 1226,  209,  209, 1226, 1226,  209,  209,  209,
      209,  209, 1226,  209,  209, 1226,  209,  209, 1226,  209,
     1226, 1226, 1226,  209, 1226, 1226,  209, 1226, 1226, 1226,
      209, 1226, 1226,  209, 1226, 1226, 1226,  209,  209, 1226,

     1226,  209, 1226,  209,  209,  209,  209,  209, 1226, 1226,
      209,  209, 1226,  209, 1226, 1226,  209, 1226, 1226, 1226,
      209,  921,  921,  921,  921,  921,  921,  209,  759,  759,
      759,  759,  759,  759,  759,  209, 1226,  715, 1226,  715,
      209,  209,  716,  716,  716,  716,  716,  716,  716,  716,
      209,  309,  309,  309,  309,  309,  309,  309,  309,  309,
      309,  309,  309,  309,  309,  309,  309,  309,  633,  633,
      633,  633,  633,  633,  633,  633,  633,  633,  633,  633,
      633,  633,  633,  633,  633,  303,  303,  303,  303,  303,
      304,  303,  303,  303,  303,  303,  303,  303,  303,  303,

      303,  303,  303,  303,  303,  303,  303,  303,  303,  303,
      303,  303,  303,  303,  304,  304,  304,  304,  304,  303,
      303,  303,  303,  303,  303,  303,  303,  303,  303,  303,
      303,  303,  303,  303,  303,  303,  634,  634,  634,  634,
      634,  634,  634,  634,  634,  634,  634,  634,  634,  634,
      634,  634,  634,  303,  635,  635,  635,  635,  635,  635,
      635,  635,  635,  635,  635,  635,  635,  635,  635,  635,
      635,  635,  635,  635,  635,  635,  635,  635,  635,  635,
      635,  635,  635,  635,  635,  635,  635,  303,  303,  303,
      303,  303,  303,  303,  303,  303,  303,  303,  303,  303,

      303,  303,  303,  303,  636,  636,  636,  636,  636,  636,
      636,  636,  636,  636,  636,  636,  636,  636,  636,  636,
      636,  638,  638,  638,  638,  638,  638,  638,  638,  638,
      638,  638,  638,  638,  638,  638,  638,  638,  639,  639,
      639,  639,  639,  639,  639,  639,  639,  639,  639,  639,
      639,  639,  639,  639,  639,  641,  326,  326,  326,  326,
      326,  326,  326,  326,  326,  326,  326,  326,  326,  326,
      326,  326,  326,   83,   83,   83,   83,   83,   83,   83,
       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
      653,  653,  653,  653,  653,  653,  653,  653,  653,  653,

      653,  653,  653,  653,  653,  653,  653, 1226, 1226, 1226,
      642,   83,   83,   83,   83,   83,   83,   83,   83,   83,
       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
       83,   83,   83,   83,   83,  717, 1226,  717,  643, 1226,
      718,  718,  718,  718,  718,  718,  718,  718,  644, 1226,
      645,  645,  645,  645,  645,  645,  646,  647,  647,  647,
      647,  648,  649,  649,  650,  651,  652,  654,  654,  654,
      654,  654,  654,  654,  654,  654,  654,  654,  654,  654,
      654,  654,  654,  654,  655,  655,  655,  655,  655,  655,

      655,  655,  655,  655,  655,  655,  655,  655,  655,  655,
      655,  656,  656,  656,  656,  656,  656,  656,  656,  656,
      656,  656,  656,  656,  656,  656,  656,  656,  335,  335,
      335,  335,  335,  335,  335,  335,  335,  335,  335,  335,
      335,  335,  335,  335,  335,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,  657,  657,  657,  657,  657,  657,  657,  657,
      657,  657,  657,  657,  657,  657,  657,  657,  657,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,

       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,  658,  658,  658,  658,  658,  658,  658,
      658,  658,  658,  658,  658,  658,  658,  658,  658,  658,
      659,  659,  659,  659,  659,  659,  659,  659,  659,  659,
      659,  659,  659,  659,  659,  659,  659,  660,  660,  660,
      660,  660,  660,  660,  660,  660,  660,  660,  660,  660,
      660,  660,  660,  660,  661,  662,  662,  662,  662,  662,
      662,  662,  662,  662,  662,  662,  662,  662,  662,  662,
      662,  663,  663,  663,  663,  663,  663,  663,  663,  663,
      663,  663,  663,  663,  663,  663,  663,  663,  663,  663,

      663,  663,  663,  663,  663,  662,  662,  662,  662,  662,
      662,  662,  662,  662,  662,  662,  662,  662,  662,  662,
      662,  662,  662,  662,  662,  662,  662,  662,  662,  662,
      662,  662,  664,  664,  664,  664,  664,  664,  664,  662,
      662,  662,  662,  662,  662,  662,  662,  662,  662,  665,
      665,  665,  665,  665,  665,  665,  665,  665,  665,  665,
      665,  665,  665,  665,  665,  665,  666,  666,  666,  666,
      666,  666,  666,  666,  666,  666,  666,  666,  665,  665,
      665,  662,  662,  344,  344,  344,  344,  344,  344,  344,
      344, 1226,  344,  344,  344,  344, 1226,  344,  344,  344,

      344,  344,  344,  344,  344,  344,  344,  344,  344,  344,
      344,  344,  344,  344,  344,  344,  344,  343,  343,  343,
      343,  343,  343,  343,  343,  343,  343,  343,  343,  667,
      667,  667, 1226,  667,  667,  667,  667,  667,  667,  667,
      667,  667,  667,  667,  667,  667,  667,  667,  667,  667,
      667,  669,  669,  669,  669,  669,  669,  669,  669,  669,
      669,  669,  669,  669,  669,  669,  669,  669,  670,  671,
      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
      673,  673,  673,  673,  672,  674,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,

      672,  672,  675,  675,  675,  675,  675,  675,  675,  675,
      675,  675,  675,  675,  675,  675,  675,  675,  675,  676,
      676,  676,  676,  676,  676,  676,  676,  676,  676,  679,
      679,  679,  679,  679,  679,  679,  679,  679,  679,  680,
      680,  680,  680,  680,  680,  680,  680,  680,  680,  680,
      680,  680,  680,  680,  680,  680,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      371,  371,  371,  681,  681,  681,  681,  681,  681,  681,
      681,  681,  681,  681,  681,  681,  681,  681,  681,  681,
      366,  366,  366,  366,  366,  367,  366,  366,  366,  366,

      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  366,  367,
      367,  367,  367,  367,  366,  366,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      366,  682,  682,  682,  682,  682,  682,  682,  682,  682,
      682,  682,  682,  682,  682,  682,  682,  682,  366,  683,
      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
      683,  683,  683,  683,  683,  683,  683,  683,  683,  683,
      683,  683,  366,  366,  366,  366,  366,  366,  366,  366,

      366,  366,  366,  366,  366,  366,  366,  366,  366,  684,
      684,  684,  684,  684,  684,  684,  684,  684,  684,  684,
      684,  684,  684,  684,  684,  684,  686,  686,  686,  686,
      686,  686,  686,  686,  686,  686,  686,  686,  686,  686,
      686,  686,  686,  687,  687,  687,  687,  687,  687,  687,
      687,  687,  687,  687,  687,  687,  687,  687,  687,  687,
      689,  388,  388,  388,  388,  388,  388,  388,  388,  388,
      388,  388,  388,  388,  388,  388,  388,  388,  128,  128,
      128,  128,  128,  128,  128,  128,  128,  128,  128,  128,
      128,  128,  128,  128,  128,  406,  406,  406,  406,  406,

      406,  406,  406,  896,  896,  896,  896,  896,  896,  896,
      690,  701,  701,  701,  701,  701,  701,  701,  701,  701,
      701,  701,  701,  701,  701,  701,  701,  701,  128,  128,
      128,  128,  128,  128,  128,  128,  128,  128,  128,  128,
      128,  128,  128,  128,  128, 1226, 1226, 1226,  691,  406,
      406,  406,  406,  406,  406,  406,  406, 1226,  692, 1226,
      693,  693,  693,  693,  693,  693,  694,  695,  695,  695,
      695,  696,  697,  697,  698,  699,  700,  128,  128,  128,
      128,  128,  128,  128,  128,  128,  128,  128,  128,  128,
      128,  128,  128,  128,  702,  702,  702,  702,  702,  702,

      702,  702,  702,  702,  702,  702,  702,  702,  702,  702,
      702,  703,  703,  703,  703,  703,  703,  703,  703,  703,
      703,  703,  703,  703,  703,  703,  703,  703,  704,  704,
      704,  704,  704,  704,  704,  704,  704,  704,  704,  704,
      704,  704,  704,  704,  704,  396,  396,  396,  396,  396,
      396,  396,  396,  706,  706,  706,  706,  706,  706,  706,
      706, 1226, 1226, 1226,  705,  915,  915,  915,  915,  915,
      915,  915,  707,  399,  399,  399,  399,  399,  399,  399,
      399,  711,  711,  711,  711,  711,  711,  711,  711, 1226,
     1226, 1226,  710, 1226,  705, 1226, 1226, 1226, 1226, 1226,

      712, 1226,  707, 1226,  403,  403,  403,  403,  403,  403,
      403,  403,  736,  736,  736,  736,  736,  736,  736,  736,
      736,  736,  710,  404,  939,  939,  939,  939,  939,  939,
      712,  719,  720,  720,  720,  720,  720,  720,  720,  720,
      720,  720,  720,  720,  720,  720,  720,  720, 1226, 1226,
     1226, 1226, 1226,  404,  721,  721,  721,  721,  721,  721,
      721,  721,  721,  721,  721,  721,  721,  721,  721,  721,
      721,  721,  721,  721,  721,  721,  721,  721,  720,  720,
      720,  720,  720,  720,  720,  720,  720,  720,  720,  720,
      720,  720,  720,  720,  720,  720,  720,  720,  720,  720,

      720,  720,  720,  720,  720,  722,  722,  722,  722,  722,
      722,  722,  720,  720,  720,  720,  720,  720,  720,  720,
      720,  720,  723,  723,  723,  723,  723,  723,  723,  723,
      723,  723,  723,  723,  723,  723,  723,  723,  723,  724,
      724,  724,  724,  724,  724,  724,  724,  724,  724,  724,
      724,  723,  723,  723,  720,  720,  409,  409,  409,  409,
      409,  409,  409,  409, 1226,  409,  409,  409,  409, 1226,
      409,  409,  409,  409,  409,  409,  409,  409,  409,  409,
      409,  409,  409,  409,  409,  409,  409,  409,  409,  409,
      409,  409,  409,  409,  409,  409,  409,  409,  409,  409,

      409,  409,  409,  409,  409,  409,  409,  725,  725,  725,
      725,  725,  725,  725,  725,  725,  725,  725,  725,  726,
      726,  726,  409,  726,  727,  727,  727,  727,  727,  727,
      727,  727,  727,  727,  727,  727,  727,  727,  727,  727,
      727,  729,  729,  729,  729,  729,  729,  729,  729,  729,
      729,  729,  729,  729,  729,  729,  729,  729,  730,  731,
      732,  732,  732,  732,  732,  732,  732,  732,  732,  732,
      733,  733,  733,  733,  732,  734,  732,  732,  732,  732,
      732,  732,  732,  732,  732,  732,  732,  732,  732,  732,
      732,  732,  735,  735,  735,  735,  735,  735,  735,  735,

      735,  735,  735,  735,  735,  735,  735,  735,  735,  739,
      739,  739,  739,  739,  739,  739,  739,  739,  739,  740,
      740,  740,  740,  740,  740,  740,  740,  740,  740,  740,
      740,  740,  740,  740,  740,  740,  437,  437,  437,  437,
      437,  437,  437,  437,  437,  437,  437,  437,  437,  437,
      437,  437,  437,  741,  741,  741,  741,  741,  741,  741,
      741,  741,  741,  741,  741,  741,  741,  741,  741,  741,
      432,  432,  432,  432,  432,  433,  432,  432,  432,  432,
      432,  432,  432,  432,  432,  432,  432,  432,  432,  432,
      432,  432,  432,  432,  432,  432,  432,  432,  432,  433,

      433,  433,  433,  433,  432,  432,  432,  432,  432,  432,
      432,  432,  432,  432,  432,  432,  432,  432,  432,  432,
      432,  742,  742,  742,  742,  742,  742,  742,  742,  742,
      742,  742,  742,  742,  742,  742,  742,  742,  432,  743,
      743,  743,  743,  743,  743,  743,  743,  743,  743,  743,
      743,  743,  743,  743,  743,  743,  743,  743,  743,  743,
      743,  743,  743,  743,  743,  743,  743,  743,  743,  743,
      743,  743,  432,  432,  432,  432,  432,  432,  432,  432,
      432,  432,  432,  432,  432,  432,  432,  432,  432,  744,
      744,  744,  744,  744,  744,  744,  744,  744,  744,  744,

      744,  744,  744,  744,  744,  744,  746,  746,  746,  746,
      746,  746,  746,  746,  746,  746,  746,  746,  746,  746,
      746,  746,  746,  747,  747,  747,  747,  747,  747,  747,
      747,  747,  747,  747,  747,  747,  747,  747,  747,  747,
      452,  452,  452,  452,  452,  452,  452,  452,  452,  452,
      452,  452,  452,  452,  452,  452,  452,  171,  171,  171,
      171,  171,  171,  171,  171,  171,  171,  171,  171,  171,
      171,  171,  171,  171,  748,  748,  748,  748,  748,  748,
      748,  748,  748,  748,  748,  748,  748,  748,  748,  748,
      748,  171,  171,  171,  171,  171,  171,  171,  171,  171,

      171,  171,  171,  171,  171,  171,  171,  171,  171,  171,
      171,  171,  171,  171,  171,  171,  171,  171,  171,  171,
      171,  171,  171,  171,  171,  749,  749,  749,  749,  749,
      749,  749,  749,  749,  749,  749,  749,  749,  749,  749,
      749,  749,  750,  750,  750,  750,  750,  750,  750,  750,
      750,  750,  750,  750,  750,  750,  750,  750,  750,  751,
      751,  751,  751,  751,  751,  751,  751,  751,  751,  751,
      751,  751,  751,  751,  751,  751,  752,  753,  753,  753,
      753,  753,  753,  753,  753,  753,  753,  753,  753,  753,
      753,  753,  753,  754,  754,  754,  754,  754,  754,  754,

      754,  754,  754,  754,  754,  754,  754,  754,  754,  754,
      754,  754,  754,  754,  754,  754,  754,  753,  753,  753,
      753,  753,  753,  753,  753,  753,  753,  753,  753,  753,
      753,  753,  753,  753,  753,  753,  753,  753,  753,  753,
      753,  753,  753,  753,  755,  755,  755,  755,  755,  755,
      755,  753,  753,  753,  753,  753,  753,  753,  753,  753,
      753,  756,  756,  756,  756,  756,  756,  756,  756,  756,
      756,  756,  756,  756,  756,  756,  756,  756,  757,  757,
      757,  757,  757,  757,  757,  757,  757,  757,  757,  757,
      756,  756,  756,  753,  753,  461,  461,  461,  461,  461,

      461,  461,  461, 1226,  461,  461,  461,  461, 1226,  461,
      461,  461,  461,  461,  461,  461,  461,  461,  461,  461,
      461,  461,  461,  461,  461,  461,  461,  461,  461,  460,
      460,  460,  460,  460,  460,  460,  460,  460,  460,  460,
      460,  758,  758,  758, 1226,  758,  758,  758,  758,  758,
      758,  758,  758,  758,  758,  758,  758,  758,  758,  758,
      758,  758,  758,  760,  760,  760,  760,  760,  760,  760,
      760,  760,  760,  760,  760,  760,  760,  760,  760,  760,
      761,  762,  763,  763,  763,  763,  763,  763,  763,  763,
      763,  763,  764,  764,  764,  764,  763,  765,  763,  763,

      763,  763,  763,  763,  763,  763,  763,  763,  763,  763,
      763,  763,  763,  763,  766,  766,  766,  766,  766,  766,
      766,  766,  766,  766,  766,  766,  766,  766,  766,  766,
      766,  767,  767,  767,  767,  767,  767,  767,  767,  767,
      767,  770,  770,  770,  770,  770,  770,  770,  770,  770,
      770,  771,  771,  771,  771,  771,  771,  771,  771,  771,
      771,  771,  771,  771,  771,  771,  771,  771,  488,  488,
      488,  488,  488,  488,  488,  488,  488,  488,  488,  488,
      488,  488,  488,  488,  488,  772,  772,  772,  772,  772,
      772,  772,  772,  772,  772,  772,  772,  772,  772,  772,

      772,  772,  483,  483,  483,  483,  483,  484,  483,  483,
      483,  483,  483,  483,  483,  483,  483,  483,  483,  483,
      483,  483,  483,  483,  483,  483,  483,  483,  483,  483,
      483,  484,  484,  484,  484,  484,  483,  483,  483,  483,
      483,  483,  483,  483,  483,  483,  483,  483,  483,  483,
      483,  483,  483,  773,  773,  773,  773,  773,  773,  773,
      773,  773,  773,  773,  773,  773,  773,  773,  773,  773,
      483,  774,  774,  774,  774,  774,  774,  774,  774,  774,
      774,  774,  774,  774,  774,  774,  774,  774,  774,  774,
      774,  774,  774,  774,  774,  774,  774,  774,  774,  774,

      774,  774,  774,  774,  483,  483,  483,  483,  483,  483,
      483,  483,  483,  483,  483,  483,  483,  483,  483,  483,
      483,  775,  775,  775,  775,  775,  775,  775,  775,  775,
      775,  775,  775,  775,  775,  775,  775,  775,  777,  777,
      777,  777,  777,  777,  777,  777,  777,  777,  777,  777,
      777,  777,  777,  777,  777,  778,  778,  778,  778,  778,
      778,  778,  778,  778,  778,  778,  778,  778,  778,  778,
      778,  778,  209, 1226,  209, 1226,  209, 1226, 1226, 1226,
      209, 1226,  209, 1226,  209,  209,  209,  209,  209,  209,
      209, 1226, 1226, 1226, 1226,  209, 1226,  209, 1226,  209,

     1226, 1226,  209, 1226,  209, 1226,  209, 1226, 1226, 1226,
      209, 1226,  209, 1226,  209,  209,  209,  209,  209,  209,
      209, 1226,  209, 1226,  209,  209,  209,  209, 1226,  209,
      209, 1226,  209, 1226,  209,  209,  209,  209,  209,  209,
      209, 1226, 1226, 1226, 1226,  209, 1226,  209, 1226,  209,
     1226, 1226,  209, 1226,  209, 1226,  209, 1226, 1226, 1226,
      209, 1226,  209, 1226,  209,  209,  209,  209,  209,  209,
      209, 1226,  209, 1226,  209,  209,  209,  209, 1226,  209,
      209, 1226,  209, 1226,  209,  209,  209,  209,  209,  209,
      209, 1226, 1226, 1226, 1226,  209, 1226,  209, 1226,  209,

     1226, 1226,  209, 1226,  209, 1226,  209, 1226, 1226, 1226,
      209, 1226,  209, 1226,  209,  209,  209,  209,  209,  209,
      209, 1226,  209, 1226,  209,  209,  209,  209, 1226,  209,
      209, 1226,  209, 1226,  209,  209,  209,  209,  209,  209,
      209, 1226, 1226, 1226, 1226,  209, 1226,  209, 1226,  209,
     1226, 1226,  209, 1226,  209, 1226,  209, 1226, 1226, 1226,
      209, 1226,  209, 1226,  209,  209,  209,  209,  209,  209,
      209, 1226,  209, 1226,  209,  209,  209,  209, 1226,  209,
      209, 1226,  209, 1226,  209,  209,  209,  209,  209,  209,
      209, 1226, 1226, 1226, 1226,  209, 1226,  209, 1226,  209,

     1226, 1226,  209, 1226,  209, 1226,  209, 1226, 1226, 1226,
      209, 1226,  209, 1226,  209,  209,  209,  209,  209,  209,
      209,  209,  209,  851,  852,  209, 1226,  209, 1226,  209,
      209,  853, 1226,  209, 1226,  209,  209,  854, 1226, 1226,
      209, 1226, 1226, 1226, 1226,  209, 1226, 1226, 1226, 1226,
     1226,  209,  209,  851,  852, 1226, 1226, 1226, 1226, 1226,
      209,  853, 1226,  209, 1226,  209,  209,  854, 1226, 1226,
      209, 1226, 1226, 1226, 1226,  209,  518,  518,  518,  518,
      518,  518,  518,  518,  518,  518,  518,  518,  518,  518,
      518,  518,  518,  780,  780,  780,  780,  780,  780,  780,

      780,  780,  780,  780,  780,  780,  780,  780,  780,  780,
      511,  511,  511,  511,  511,  512,  511,  511,  511,  511,
      511,  511,  511,  511,  511,  511,  510,  511,  511,  511,
      511,  511,  511,  511,  511,  511,  511,  511,  511,  512,
      512,  512,  512,  512,  511,  511,  511,  511,  511,  511,
      511,  511,  511,  511,  511,  511,  511,  511,  511,  511,
      511,  781,  781,  781,  781,  781,  781,  781,  781,  781,
      781,  781,  781,  781,  781,  781,  781,  781,  511,  782,
      782,  782,  782,  782,  782,  782,  782,  782,  782,  782,
      782,  782,  782,  782,  782,  782,  782,  782,  782,  782,

      782,  782,  782,  782,  782,  782,  782,  782,  782,  782,
      782,  782,  511,  511,  511,  511,  511,  511,  511,  511,
      511,  511,  511,  511,  511,  511,  511,  511,  511,  783,
      783,  783,  783,  783,  783,  783,  783,  783,  783,  783,
      783,  783,  783,  783,  783,  783,  785,  785,  785,  785,
      785,  785,  785,  785,  785,  785,  785,  785,  785,  785,
      785,  785,  785,  786,  786,  786,  786,  786,  786,  786,
      786,  786,  786,  786,  786,  786,  786,  786,  786,  786,
      209, 1226,  209, 1226,  787,  788, 1226, 1226,  209, 1226,
      209, 1226, 1226,  209,  209,  209,  209, 1226, 1226, 1226,

     1226, 1226, 1226,  209, 1226,  209, 1226, 1226,  209, 1226,
      209,  789,  209, 1226,  787,  788,  209, 1226,  209, 1226,
      209,  209,  209,  209,  209,  209,  209, 1226, 1226, 1226,
     1226,  209, 1226,  209,  209,  209, 1226, 1226,  209, 1226,
     1226,  789,  209, 1226, 1226,  209,  209,  790,  209, 1226,
     1226,  209,  209,  209, 1226, 1226,  791,  209,  209,  209,
     1226,  209, 1226, 1226,  209, 1226, 1226, 1226,  209, 1226,
     1226,  792,  209, 1226, 1226,  209, 1226,  790,  209,  209,
     1226, 1226,  209,  209,  209,  209,  791,  209,  209,  209,
      209, 1226, 1226,  793,  209,  209,  209, 1226,  209, 1226,

     1226,  792, 1226, 1226, 1226,  209, 1226, 1226, 1226,  209,
     1226, 1226,  209, 1226,  209,  209, 1226, 1226, 1226,  209,
      209,  794, 1226,  793,  209,  209,  209,  209, 1226, 1226,
      209, 1226,  209,  209, 1226,  209,  795,  796,  209, 1226,
     1226, 1226,  209,  209,  209, 1226, 1226, 1226, 1226,  209,
     1226,  794, 1226,  797, 1226, 1226,  209,  209, 1226, 1226,
      209, 1226,  209,  209,  209, 1226,  795,  796,  209,  798,
      209, 1226,  209,  209,  209, 1226, 1226, 1226, 1226,  209,
     1226, 1226,  799,  797,  800, 1226,  209, 1226, 1226, 1226,
      209, 1226,  209, 1226,  209,  209,  209,  209,  209,  798,

      209, 1226, 1226, 1226, 1226,  209, 1226,  209, 1226,  209,
      209, 1226,  799, 1226,  800, 1226, 1226, 1226,  209, 1226,
      209, 1226,  209,  209,  209,  209,  209,  209,  209, 1226,
     1226, 1226, 1226,  209, 1226,  209,  801,  209,  209, 1226,
      209, 1226,  802, 1226,  209, 1226,  209, 1226,  209,  209,
      209,  209,  209,  209,  209, 1226, 1226, 1226, 1226,  209,
     1226,  209, 1226,  209, 1226, 1226,  801, 1226,  209, 1226,
     1226, 1226,  802, 1226,  209, 1226,  209, 1226, 1226,  209,
      209,  209,  209, 1226,  209, 1226,  803,  209, 1226,  209,
     1226,  209,  209, 1226, 1226,  209, 1226,  209,  209, 1226,

      209,  209, 1226, 1226, 1226,  804, 1226,  209, 1226, 1226,
      209, 1226, 1226, 1226,  209, 1226,  803,  209, 1226, 1226,
     1226, 1226,  209, 1226, 1226,  209, 1226,  209,  209, 1226,
      209,  209, 1226,  209, 1226,  804,  209,  209, 1226, 1226,
      209,  209, 1226, 1226,  209, 1226,  209,  209,  805,  209,
      806, 1226, 1226, 1226, 1226, 1226,  209, 1226, 1226,  209,
     1226, 1226, 1226,  209, 1226, 1226,  209, 1226, 1226, 1226,
     1226,  209, 1226, 1226,  209, 1226,  209,  209,  805,  209,
      806, 1226,  209, 1226,  209, 1226,  209, 1226, 1226,  209,
      209, 1226,  209, 1226, 1226,  209,  209,  209,  209,  807,

     1226,  808, 1226, 1226, 1226,  209, 1226,  209, 1226, 1226,
     1226, 1226,  209, 1226,  209, 1226, 1226, 1226, 1226, 1226,
      209, 1226,  209, 1226, 1226,  209,  209,  209,  209,  807,
      209,  808,  209, 1226, 1226,  209, 1226,  209,  209, 1226,
      209, 1226, 1226,  209,  209,  209,  810, 1226,  809, 1226,
     1226, 1226, 1226,  209, 1226,  209, 1226, 1226, 1226, 1226,
      209, 1226,  209, 1226, 1226, 1226, 1226, 1226,  209, 1226,
      209, 1226, 1226,  209,  209,  209,  810, 1226,  809,  209,
     1226,  209, 1226,  209, 1226,  209, 1226,  209, 1226,  209,
     1226,  811,  209,  209,  209,  209,  812, 1226, 1226, 1226,

     1226, 1226,  209, 1226,  209, 1226, 1226, 1226, 1226,  209,
     1226,  209, 1226, 1226, 1226, 1226, 1226,  209, 1226,  209,
     1226,  811,  209,  209,  209,  209,  812,  209, 1226,  209,
     1226,  209,  209, 1226,  209,  209, 1226,  814, 1226,  209,
      209,  209,  209,  209,  209,  209,  813,  815, 1226, 1226,
      209, 1226,  209, 1226,  209, 1226, 1226,  209, 1226,  209,
     1226,  209, 1226, 1226, 1226,  209, 1226,  814, 1226,  209,
      209,  209,  209,  209,  209,  209,  813,  815, 1226,  209,
      209,  209,  209,  816,  209, 1226, 1226,  209, 1226,  209,
     1226, 1226,  209,  209,  209,  817, 1226, 1226, 1226, 1226,

     1226, 1226,  209, 1226,  209, 1226, 1226,  209, 1226,  209,
     1226,  209, 1226,  816, 1226,  209, 1226,  209, 1226,  209,
      209,  209,  209,  209,  209,  817, 1226, 1226, 1226, 1226,
      209, 1226,  209,  209,  209, 1226, 1226,  209, 1226, 1226,
     1226,  209, 1226, 1226,  818,  209,  209,  209, 1226, 1226,
      209,  209, 1226, 1226, 1226, 1226,  209, 1226, 1226,  209,
      209, 1226, 1226,  209, 1226, 1226, 1226,  209, 1226, 1226,
      209,  209,  209,  209,  818,  819,  209,  209,  820, 1226,
     1226, 1226,  209,  209,  209, 1226,  209, 1226, 1226,  209,
     1226, 1226, 1226,  209, 1226, 1226,  209,  209, 1226, 1226,

      209, 1226,  209,  209,  209,  819, 1226, 1226,  820,  209,
      209, 1226,  209,  209,  209,  821, 1226, 1226, 1226,  209,
     1226, 1226, 1226,  209,  209, 1226,  209, 1226,  209, 1226,
      823, 1226,  209, 1226,  209, 1226,  209,  209,  209,  209,
      209,  209,  209, 1226,  822,  821, 1226,  209, 1226,  209,
     1226,  209, 1226, 1226,  209, 1226,  209, 1226,  209, 1226,
      823, 1226,  209, 1226,  209, 1226,  209,  209,  209,  209,
      209,  209,  209,  824,  822,  209, 1226,  209, 1226,  209,
     1226,  209, 1226,  825, 1226, 1226,  209, 1226,  209,  209,
     1226, 1226, 1226,  209,  209, 1226,  826, 1226,  209,  209,

      209,  209, 1226,  824, 1226,  209,  209,  209, 1226,  209,
     1226, 1226, 1226,  825, 1226, 1226,  209, 1226,  209,  209,
     1226,  209, 1226,  209, 1226, 1226,  826, 1226,  209,  209,
     1226,  209, 1226, 1226,  209,  209,  209,  209, 1226,  209,
      828, 1226, 1226, 1226,  209, 1226,  209,  209, 1226, 1226,
     1226,  209,  209,  209, 1226, 1226, 1226, 1226, 1226,  209,
     1226, 1226,  209, 1226,  209,  209, 1226,  209, 1226,  209,
      828,  209, 1226, 1226,  209,  209, 1226,  209, 1226,  209,
      209,  209,  209,  209,  209,  209,  829, 1226, 1226,  830,
      209, 1226,  209, 1226,  209, 1226, 1226,  209, 1226,  209,

     1226,  209, 1226,  831, 1226,  209, 1226,  209, 1226,  209,
      209,  209,  209,  209,  209,  209,  829,  209, 1226,  830,
      209,  832,  209, 1226,  209,  209, 1226, 1226, 1226,  209,
      209,  209, 1226,  831, 1226, 1226,  209,  209, 1226, 1226,
      209, 1226,  209,  209,  209, 1226, 1226,  209, 1226,  209,
      209,  832,  209, 1226,  209,  209, 1226, 1226, 1226,  209,
      209,  209,  209, 1226, 1226, 1226,  209,  209,  209, 1226,
      209, 1226, 1226,  209,  209, 1226, 1226,  209, 1226,  209,
      209,  209, 1226, 1226,  209, 1226,  209,  209, 1226,  209,
      833,  209,  209, 1226, 1226, 1226,  209,  209,  209,  834,

     1226, 1226, 1226,  209,  209,  209, 1226,  209, 1226, 1226,
     1226,  209, 1226, 1226,  209, 1226,  209,  209, 1226,  209,
      833,  209, 1226,  835, 1226, 1226,  209,  209, 1226,  834,
     1226, 1226,  209,  209,  209,  209, 1226, 1226,  209, 1226,
     1226, 1226,  209,  836,  209, 1226,  209, 1226, 1226,  209,
     1226,  209,  209,  835, 1226, 1226,  209,  209, 1226, 1226,
     1226,  209,  209,  209,  209, 1226, 1226, 1226,  209,  837,
      209, 1226,  209,  836, 1226,  209,  209, 1226,  838,  209,
     1226,  209,  209,  209, 1226, 1226,  209, 1226,  209,  209,
     1226,  209, 1226,  209,  209, 1226, 1226, 1226,  209,  837,

      209,  209, 1226, 1226, 1226,  209,  209,  209,  838,  209,
     1226, 1226,  839,  209, 1226, 1226,  209, 1226,  209,  209,
     1226,  209, 1226,  209, 1226,  840, 1226, 1226,  209,  209,
     1226,  209, 1226, 1226,  209,  209,  209,  209, 1226,  209,
     1226, 1226,  839, 1226,  209, 1226,  209,  209, 1226, 1226,
     1226,  209,  841,  209, 1226,  840, 1226, 1226, 1226,  209,
     1226, 1226,  209, 1226,  209,  209, 1226, 1226, 1226,  209,
     1226,  209, 1226, 1226,  209,  842, 1226,  209, 1226,  209,
     1226, 1226,  841,  209,  209,  209,  843, 1226, 1226,  209,
     1226, 1226,  209, 1226,  209, 1226, 1226,  209, 1226, 1226,

     1226,  209,  209,  844, 1226,  842, 1226, 1226, 1226,  209,
     1226, 1226,  209, 1226,  209,  209,  843,  209, 1226,  209,
     1226,  845, 1226, 1226,  209,  209, 1226,  209, 1226, 1226,
      209,  209,  209,  844, 1226,  846, 1226, 1226, 1226,  688,
      209, 1226,  209,  209,  688, 1226, 1226,  209,  209,  209,
     1226,  845, 1226, 1226,  209,  209, 1226, 1226,  209, 1226,
      209,  209,  209,  848, 1226,  846, 1226,  209,  209, 1226,
      209, 1226, 1226,  209,  847, 1226, 1226,  209,  209,  209,
     1226, 1226, 1226, 1226,  209, 1226, 1226,  209,  209, 1226,
     1226, 1226,  209, 1226,  688,  209, 1226,  209,  209,  688,

      209,  209, 1226,  688,  847,  209, 1226,  209, 1226,  849,
      209,  688, 1226,  209,  688, 1226,  688,  209,  209,  209,
     1226, 1226,  209, 1226,  209,  209, 1226, 1226,  209, 1226,
      209,  209,  209, 1226,  209,  209, 1226,  209,  855,  849,
      209,  209, 1226,  209, 1226,  209, 1226, 1226,  209,  209,
      209,  209,  209,  850,  209, 1226, 1226, 1226,  209, 1226,
      209, 1226,  209, 1226,  209,  209, 1226,  209,  855, 1226,
     1226,  209, 1226,  209, 1226,  209, 1226, 1226,  209,  209,
      209,  209, 1226,  850, 1226, 1226, 1226, 1226,  209, 1226,
      209, 1226,  209, 1226, 1226,  209,  856, 1226, 1226, 1226,

      209, 1226, 1226,  209, 1226,  209,  209, 1226,  209,  209,
     1226,  209, 1226, 1226, 1226,  209, 1226, 1226,  209,  209,
     1226, 1226,  209, 1226,  209,  209,  856, 1226,  857,  209,
      209, 1226, 1226,  858,  209,  209,  209,  209, 1226, 1226,
     1226,  209,  209,  209, 1226,  209, 1226, 1226,  209,  209,
     1226, 1226,  209, 1226,  209,  209,  209, 1226,  857,  209,
     1226,  209,  859,  858,  209, 1226, 1226,  209, 1226, 1226,
     1226,  209,  209,  209, 1226, 1226,  209, 1226,  209, 1226,
      209, 1226,  209, 1226,  209, 1226,  209, 1226,  209,  209,
      209,  209,  859,  209,  209, 1226,  860, 1226, 1226,  209,

     1226,  209, 1226,  209, 1226, 1226,  209, 1226,  209, 1226,
      209, 1226, 1226, 1226,  209, 1226,  209, 1226,  209,  209,
      209,  861,  209,  209,  209, 1226,  860,  209, 1226,  209,
     1226,  209, 1226,  209, 1226,  209, 1226, 1226,  209, 1226,
      209,  209, 1226,  862, 1226, 1226,  209, 1226, 1226, 1226,
      209,  861,  209, 1226, 1226,  209, 1226,  209, 1226, 1226,
     1226,  209,  863,  209, 1226,  209, 1226, 1226,  209,  209,
      209,  209, 1226,  862,  209, 1226, 1226, 1226,  209, 1226,
      209, 1226,  209, 1226, 1226,  209, 1226,  209,  209, 1226,
      864, 1226,  863,  209, 1226, 1226, 1226,  209,  209,  209,

     1226, 1226, 1226, 1226,  209, 1226, 1226, 1226,  209, 1226,
     1226, 1226,  209, 1226, 1226, 1226, 1226,  209,  209, 1226,
      864, 1226, 1226, 1226, 1226, 1226, 1226,  209,  865,  866,
     1226,  865,  865,  865,  865,  865,  865,  865,  865,  933,
      933,  933,  933,  933,  933,  933,  867,  867,  867,  867,
      867,  867,  867,  867,  867,  867,  867,  867,  867,  867,
      867,  867,  867,  867,  867,  867,  867,  867,  867,  867,
      867, 1226, 1226, 1226, 1226,  867,  867,  867,  867,  867,
      867,  867,  867,  867,  867,  867,  867,  867,  867,  867,
      867,  867,  867,  867,  867,  867,  867,  867,  867,  867,

      867, 1226, 1226, 1226, 1226,  868,  869,  870,  871,  871,
      871,  871,  871,  871,  871,  871,  871,  872,  873,  873,
      874, 1226,  875,  876,  877,  878,  879,  880,  881,  882,
      883,  884,  885,  886, 1226,  887,  888,  889,  890,  890,
      890,  890,  890,  890,  890,  890,  890,  890,  890,  890,
      890,  890,  890,  890,  890,  891,  891,  891,  891,  891,
      891,  891,  891,  891,  891,  891,  891,  891,  891,  891,
      891,  891,  891,  891,  891,  891,  891,  891,  891,  890,
      890,  890,  890,  890,  890,  890,  890,  890,  890,  892,
      892,  892,  892,  892,  892,  892,  890,  890,  890,  890,

      890,  890,  890,  890,  890,  890,  893,  893,  893,  893,
      893,  893,  893,  893,  893,  893,  893,  893,  893,  893,
      893,  893,  893,  894,  894,  894,  894,  894,  894,  894,
      894,  894,  894,  894,  894,  893,  893,  893,  890,  890,
      611,  611,  611,  611,  611,  611,  611,  611, 1226,  611,
      611,  611,  611, 1226,  611,  611,  611,  611,  611,  611,
      611,  611,  611,  611,  611,  611,  611,  611,  611,  611,
      611,  611,  611,  611,  895,  895,  895,  895,  895,  895,
      895,  895,  895,  895,  895,  895,  895,  895,  895,  895,
      895,  897,  897,  897,  897,  897,  897,  897,  897,  897,

      897,  897,  897,  897,  897,  897,  897,  897,  898,  899,
      900,  900,  900,  900,  900,  900,  900,  900,  900,  900,
      901,  901,  901,  901,  900,  902,  900,  900,  900,  900,
      900,  900,  900,  900,  900,  900,  900,  900,  900,  900,
      900,  900,  903,  903,  903,  903,  903,  903,  903,  903,
      903,  903,  903,  903,  903,  903,  903,  903,  903,  904,
      904,  904,  904,  904,  904,  904,  904,  904,  904,  907,
      907,  907,  907,  907,  907,  907,  907,  907,  907,  908,
      908,  908,  908,  908,  908,  908,  908,  908,  908,  908,
      908,  908,  908,  908,  908,  908,  209, 1226,  209, 1226,

     1226, 1226, 1226, 1226,  209, 1226,  209, 1226, 1226,  209,
      209,  209,  209, 1226, 1226, 1226, 1226, 1226, 1226,  209,
     1226,  209, 1226, 1226, 1226, 1226,  209, 1226,  209, 1226,
     1226, 1226,  910, 1226,  209, 1226,  209, 1226, 1226,  209,
      209,  209,  209,  909,  209, 1226,  209, 1226,  209,  209,
     1226,  209,  209, 1226,  209, 1226,  209,  209,  209,  209,
      209,  209,  209, 1226, 1226, 1226, 1226,  209, 1226,  209,
     1226,  209, 1226, 1226,  209, 1226,  209, 1226,  209, 1226,
     1226, 1226,  209, 1226,  209, 1226,  209,  209,  209,  209,
      209,  209,  209, 1226,  209, 1226,  209,  209, 1226,  209,

     1226,  209,  209, 1226,  209, 1226, 1226,  209,  209,  209,
      209, 1226, 1226, 1226, 1226, 1226, 1226,  209, 1226,  209,
     1226, 1226, 1226, 1226,  209, 1226,  209, 1226, 1226, 1226,
     1226, 1226,  209, 1226,  209, 1226, 1226,  209,  209,  209,
      209, 1226, 1226, 1226, 1226, 1226, 1226,  209, 1226,  209,
      911,  911,  911,  911,  911,  911,  911,  911,  911,  911,
      911,  911,  911,  911,  911,  911,  911,  911,  911,  911,
      911,  911,  911,  911,  911,  911,  911,  911,  911,  911,
      911,  911,  911,  911,  641,  913,  913,  913,  913,  913,
      913,  913,  913,  913,  913,  913,  913,  913,  913,  913,

      913,  914,  914,  914,  914,  914,  914,  914,  914,  914,
      914,  914,  914,  914,  914,  914,  640,  640,  640,  640,
      640,  640,  640,  640,  640,  640,  640,  640,  640,  640,
      640,  640,  640, 1226, 1226, 1226, 1226, 1226, 1226,  642,
      916,  916,  916,  916,  916,  916,  916,  916,  916,  916,
      916,  916,  916,  916,  916,  916,  916,  917,  917,  917,
      917,  917,  917,  917,  917,  917,  917,  919,  919,  919,
      919,  919,  919,  919,  919,  919,  919,  643,  709,  709,
      709,  709,  709,  709,  709,  709, 1226,  644, 1226,  645,
      645,  645,  645,  645,  645,  646,  647,  647,  647,  647,

      648,  649,  649,  650,  651,  652,  912,  918,  918,  918,
      918,  918,  918,  918,  918,  918,  918,  918,  918,  918,
      918,  918,  918,  918,  920,  920,  920,  920,  920,  920,
      920,  920,  920,  920,  920,  920,  920,  920,  920,  920,
      920,   83,   83,   83,   83,   83,   83,   83,   83,   83,
       83,   83,   83,   83,   83,   83,   83,   83, 1226, 1226,
     1226,  642,   83,   83,   83,   83,   83,   83,   83,   83,
       83,   83,   83,   83,   83,   83,   83,   83,   83,  326,
      326,  326,  326,  326,  326,  326,  326,  326,  326,  326,
      326,  326,  326,  326,  326,  326,  940, 1226,  940,  643,

     1226,  941,  941,  941,  941,  941,  941,  941,  941,  644,
     1226,  645,  645,  645,  645,  645,  645,  646,  647,  647,
      647,  647,  648,  649,  649,  650,  651,  652,  323,   97,
      709,  709,  709,  709,  709,  709,  709,  709, 1226,   98,
     1226,   99,   99,   99,   99,   99,   99,  100,  101,  101,
      101,  101,  102,  103,  103,  104,  105,  106,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,  714,  714,  714,  714,  714,
      714,  714,  714,   85,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,

       96,  335,  335,  335,  335,  335,  335,  335,  335,  335,
      335,  335,  335,  335,  335,  335,  335,  335,  942, 1226,
      942,   86, 1226,  943,  943,  943,  943,  943,  943,  943,
      943,   87, 1226,   88,   88,   88,   88,   88,   88,   89,
       90,   90,   90,   90,   91,   92,   92,   93,   94,   95,
      667,  667,  667,  667,  667,  667,  667,  667,  667,  667,
      667,  667,  667,  667,  667,  667,  667,  922,  922,  922,
      922,  922,  922,  922,  922,  922,  922,  922,  922,  922,
      922,  922,  922,  922,  662,  662,  662,  662,  662,  663,
      662,  662,  662,  662,  662,  662,  662,  662,  662,  662,

      661,  662,  662,  662,  662,  662,  662,  662,  662,  662,
      662,  662,  662,  663,  663,  663,  663,  663,  662,  662,
      662,  662,  662,  662,  662,  662,  662,  662,  662,  662,
      662,  662,  662,  662,  662,  923,  923,  923,  923,  923,
      923,  923,  923,  923,  923,  923,  923,  923,  923,  923,
      923,  923,  662,  924,  924,  924,  924,  924,  924,  924,
      924,  924,  924,  924,  924,  924,  924,  924,  924,  924,
      924,  924,  924,  924,  924,  924,  924,  924,  924,  924,
      924,  924,  924,  924,  924,  924,  662,  662,  662,  662,
      662,  662,  662,  662,  662,  662,  662,  662,  662,  662,

      662,  662,  662,  925,  925,  925,  925,  925,  925,  925,
      925,  925,  925,  925,  925,  925,  925,  925,  925,  925,
      927,  927,  927,  927,  927,  927,  927,  927,  927,  927,
      927,  927,  927,  927,  927,  927,  927,  928,  928,  928,
      928,  928,  928,  928,  928,  928,  928,  928,  928,  928,
      928,  928,  928,  928,  929,  929,  929,  929,  929,  929,
      929,  929,  929,  929,  929,  929,  929,  929,  929,  929,
      929,  929,  929,  929,  929,  929,  929,  929,  929,  929,
      929,  929,  929,  929,  929,  929,  929,  929,  689,  931,
      931,  931,  931,  931,  931,  931,  931,  931,  931,  931,

      931,  931,  931,  931,  931,  932,  932,  932,  932,  932,
      932,  932,  932,  932,  932,  932,  932,  932,  932,  932,
      688,  688,  688,  688,  688,  688,  688,  688,  688,  688,
      688,  688,  688,  688,  688,  688,  688, 1226,  690,  934,
      934,  934,  934,  934,  934,  934,  934,  934,  934,  934,
      934,  934,  934,  934,  934,  934,  935,  935,  935,  935,
      935,  935,  935,  935,  935,  935,  937,  937,  937,  937,
      937,  937,  937,  937,  937,  937,  691,  714,  714,  714,
      714,  714,  714,  714,  714, 1226,  692, 1226,  693,  693,
      693,  693,  693,  693,  694,  695,  695,  695,  695,  696,

      697,  697,  698,  699,  700,  930,  936,  936,  936,  936,
      936,  936,  936,  936,  936,  936,  936,  936,  936,  936,
      936,  936,  936,  938,  938,  938,  938,  938,  938,  938,
      938,  938,  938,  938,  938,  938,  938,  938,  938,  938,
      944, 1226,  944, 1226, 1226,  945,  945,  945,  945,  945,
      945,  945,  945, 1226, 1226,  690,  128,  128,  128,  128,
      128,  128,  128,  128,  128,  128,  128,  128,  128,  128,
      128,  128,  128,  128,  128,  128,  128,  128,  128,  128,
      128,  128,  128,  128,  128,  128,  128,  128,  128,  128,
      946, 1226,  946,  691, 1226,  947,  947,  947,  947,  947,

      947,  947,  947,  692, 1226,  693,  693,  693,  693,  693,
      693,  694,  695,  695,  695,  695,  696,  697,  697,  698,
      699,  700,  385,  388,  388,  388,  388,  388,  388,  388,
      388,  388,  388,  388,  388,  388,  388,  388,  388,  388,
      706,  706,  706,  706,  706,  706,  706,  706,  711,  711,
      711,  711,  711,  711,  711,  711, 1226, 1226, 1226,  707,
     1045, 1045, 1045, 1045, 1045, 1045, 1045,  712, 1226, 1226,
     1226, 1226,  130,  716,  716,  716,  716,  716,  716,  716,
      716,  716,  716,  716,  716,  716,  716,  716,  716,  707,
     1226, 1226, 1226, 1226, 1226, 1226, 1226,  712,  718,  718,

      718,  718,  718,  718,  718,  718, 1226, 1226, 1226, 1226,
      131,  718,  718,  718,  718,  718,  718,  718,  718, 1226,
      132, 1226,  133,  133,  133,  133,  133,  133,  134,  135,
      135,  135,  135,  136,  137,  137,  138,  139,  140,  727,
      727,  727,  727,  727,  727,  727,  727,  727,  727,  727,
      727,  727,  727,  727,  727,  727,  948,  948,  948,  948,
      948,  948,  948,  948,  948,  948,  948,  948,  948,  948,
      948,  948,  948,  720,  720,  720,  720,  720,  721,  720,
      720,  720,  720,  720,  720,  720,  720,  720,  720,  719,
      720,  720,  720,  720,  720,  720,  720,  720,  720,  720,

      720,  720,  721,  721,  721,  721,  721,  720,  720,  720,
      720,  720,  720,  720,  720,  720,  720,  720,  720,  720,
      720,  720,  720,  720,  949,  949,  949,  949,  949,  949,
      949,  949,  949,  949,  949,  949,  949,  949,  949,  949,
      949,  720,  950,  950,  950,  950,  950,  950,  950,  950,
      950,  950,  950,  950,  950,  950,  950,  950,  950,  950,
      950,  950,  950,  950,  950,  950,  950,  950,  950,  950,
      950,  950,  950,  950,  950,  720,  720,  720,  720,  720,
      720,  720,  720,  720,  720,  720,  720,  720,  720,  720,
      720,  720,  951,  951,  951,  951,  951,  951,  951,  951,

      951,  951,  951,  951,  951,  951,  951,  951,  951,  953,
      953,  953,  953,  953,  953,  953,  953,  953,  953,  953,
      953,  953,  953,  953,  953,  953,  954,  954,  954,  954,
      954,  954,  954,  954,  954,  954,  954,  954,  954,  954,
      954,  954,  954,  955,  955,  955,  955,  955,  955,  955,
      955,  955,  955,  955,  955,  955,  955,  955,  955,  955,
      955,  955,  955,  955,  955,  955,  955,  955,  955,  955,
      955,  955,  955,  955,  955,  955,  955,  173,  171,  171,
      171,  171,  171,  171,  171,  171,  171,  171,  171,  171,
      171,  171,  171,  171,  171,  171,  171,  171,  171,  171,

      171,  171,  171,  171,  171,  171,  171,  171,  171,  171,
      171,  171,  452,  452,  452,  452,  452,  452,  452,  452,
      452,  452,  452,  452,  452,  452,  452,  452,  452, 1226,
     1226,  867,  867,  867,  867,  867,  867,  867,  867, 1226,
      867,  867,  867,  867,  174,  867,  867,  867, 1226, 1226,
     1226, 1226, 1226, 1226,  175, 1226,  176,  176,  176,  176,
      176,  176,  177,  178,  178,  178,  178,  179,  180,  180,
      181,  182,  183,  758,  758,  758,  758,  758,  758,  758,
      758,  758,  758,  758,  758,  758,  758,  758,  758,  758,
      956,  956,  956,  956,  956,  956,  956,  956,  956,  956,

      956,  956,  956,  956,  956,  956,  956,  753,  753,  753,
      753,  753,  754,  753,  753,  753,  753,  753,  753,  753,
      753,  753,  753,  752,  753,  753,  753,  753,  753,  753,
      753,  753,  753,  753,  753,  753,  754,  754,  754,  754,
      754,  753,  753,  753,  753,  753,  753,  753,  753,  753,
      753,  753,  753,  753,  753,  753,  753,  753,  957,  957,
      957,  957,  957,  957,  957,  957,  957,  957,  957,  957,
      957,  957,  957,  957,  957,  753,  958,  958,  958,  958,
      958,  958,  958,  958,  958,  958,  958,  958,  958,  958,
      958,  958,  958,  958,  958,  958,  958,  958,  958,  958,

      958,  958,  958,  958,  958,  958,  958,  958,  958,  753,
      753,  753,  753,  753,  753,  753,  753,  753,  753,  753,
      753,  753,  753,  753,  753,  753,  959,  959,  959,  959,
      959,  959,  959,  959,  959,  959,  959,  959,  959,  959,
      959,  959,  959,  961,  961,  961,  961,  961,  961,  961,
      961,  961,  961,  961,  961,  961,  961,  961,  961,  961,
      962,  962,  962,  962,  962,  962,  962,  962,  962,  962,
      962,  962,  962,  962,  962,  962,  962,  963,  963,  963,
      963,  963,  963,  963,  963,  963,  963,  963,  963,  963,
      963,  963,  963,  963,  963,  963,  963,  963,  963,  963,

      963,  963,  963,  963,  963,  963,  963,  963,  963,  963,
      963,  209, 1226,  209, 1226,  209, 1226, 1226, 1226,  209,
     1226,  209, 1226,  209,  209,  209,  209,  209,  209,  209,
     1226, 1226, 1226, 1226,  209, 1226,  209, 1226,  209, 1226,
     1226,  209, 1226,  209, 1226,  209, 1226, 1226, 1226,  209,
     1226,  209, 1226,  209,  209,  209,  209,  209,  209,  209,
     1226,  209, 1226,  209,  209, 1226,  209, 1226,  209,  209,
     1226,  209, 1226, 1226,  209,  209,  209,  209, 1226, 1226,
     1226, 1226, 1226, 1226,  209, 1226,  209, 1226, 1226, 1226,
     1226,  209, 1226,  209, 1226, 1226, 1226, 1226, 1226,  209,

     1226,  209, 1226, 1226,  209,  209,  209,  209, 1226, 1226,
     1226, 1226, 1226, 1226,  209, 1226,  209,  964,  964,  964,
      964,  964,  964,  964,  964,  964,  964,  964,  964,  964,
      964,  964,  964,  964,  964,  964,  964,  964,  964,  964,
      964,  964,  964,  964,  964,  964,  964,  964,  964,  964,
      964,  209, 1226,  209, 1226, 1226, 1226, 1226, 1226,  209,
     1226,  965, 1226, 1226,  209,  209,  209,  209, 1226, 1226,
     1226, 1226, 1226, 1226,  209, 1226,  209, 1226, 1226, 1226,
     1226,  209, 1226,  209, 1226, 1226, 1226, 1226, 1226,  209,
     1226,  965, 1226, 1226,  209,  209,  209,  209, 1226,  209,

     1226, 1226,  209,  966,  209,  967,  209,  209, 1226, 1226,
      209, 1226,  209,  209, 1226,  209,  209, 1226, 1226, 1226,
     1226, 1226,  209, 1226, 1226,  209, 1226, 1226, 1226,  209,
     1226, 1226,  209,  966, 1226,  967,  209,  209, 1226, 1226,
      209, 1226,  209,  209,  209,  209,  209, 1226,  209,  209,
      209, 1226,  209, 1226, 1226,  209,  209, 1226, 1226,  209,
     1226,  209,  209, 1226,  968, 1226,  209, 1226, 1226, 1226,
     1226,  209, 1226, 1226,  209, 1226, 1226, 1226,  209,  209,
      209, 1226, 1226, 1226, 1226, 1226,  209, 1226, 1226,  209,
     1226,  209,  209, 1226,  968,  209, 1226,  970, 1226,  969,

     1226,  209, 1226,  209, 1226,  209, 1226, 1226,  209,  209,
      209,  209, 1226, 1226, 1226, 1226, 1226, 1226,  209, 1226,
      209, 1226, 1226, 1226, 1226,  209, 1226,  970, 1226,  969,
     1226, 1226, 1226,  209, 1226,  209, 1226, 1226,  209,  209,
      209,  209, 1226,  209, 1226,  972, 1226, 1226,  209, 1226,
      209,  209, 1226,  209, 1226, 1226,  209,  209,  209,  209,
     1226,  971, 1226, 1226, 1226, 1226,  209, 1226,  209, 1226,
     1226,  209, 1226,  209, 1226,  972, 1226, 1226, 1226,  209,
     1226,  209, 1226,  209,  209,  209,  209,  209,  209,  209,
     1226,  971, 1226, 1226,  209, 1226,  209, 1226,  209,  209,

     1226,  209, 1226, 1226, 1226, 1226, 1226,  209, 1226,  209,
     1226, 1226,  209,  209,  209,  209, 1226,  973,  209, 1226,
     1226, 1226,  209, 1226,  209, 1226,  209, 1226, 1226,  209,
     1226,  209,  209, 1226, 1226, 1226,  974,  209, 1226, 1226,
     1226,  209,  209,  209, 1226,  209, 1226,  973,  209, 1226,
     1226, 1226,  209,  209, 1226, 1226,  209, 1226,  209,  209,
     1226,  209,  209,  975, 1226, 1226,  974, 1226,  209, 1226,
     1226,  209,  209, 1226, 1226,  209, 1226, 1226, 1226, 1226,
      209, 1226, 1226,  209, 1226,  209,  209, 1226,  209,  209,
     1226,  976, 1226,  975, 1226,  209, 1226, 1226,  209,  209,

     1226, 1226,  209, 1226, 1226, 1226, 1226,  209, 1226, 1226,
      209, 1226,  209,  209, 1226,  209,  209,  977,  209, 1226,
     1226,  976,  209, 1226, 1226,  209,  209, 1226, 1226,  209,
     1226,  209,  209, 1226,  978, 1226,  209,  209, 1226, 1226,
     1226,  209,  209,  209,  979, 1226, 1226,  977,  209,  209,
      209, 1226,  209, 1226, 1226,  209,  209, 1226, 1226,  209,
     1226,  209,  209,  209,  978, 1226,  209, 1226,  209,  209,
     1226,  209, 1226,  209,  979, 1226,  980, 1226,  209,  209,
      209,  209, 1226, 1226, 1226,  209,  209,  209, 1226,  209,
     1226, 1226, 1226,  209, 1226, 1226,  209, 1226,  209,  209,

     1226,  209, 1226,  209, 1226,  209,  980, 1226,  209,  209,
     1226,  209, 1226,  209,  209,  209,  209,  209,  209,  209,
     1226, 1226, 1226,  981,  209, 1226,  209, 1226,  209, 1226,
     1226,  209, 1226,  209, 1226,  209, 1226,  982, 1226,  209,
     1226,  209, 1226,  209,  209,  209,  209,  209,  209,  209,
     1226, 1226,  209,  981,  209, 1226,  209, 1226,  209, 1226,
      209, 1226, 1226,  209, 1226,  209,  209,  982,  983, 1226,
      209,  209, 1226, 1226, 1226,  209,  209,  209,  209, 1226,
     1226, 1226,  209,  209,  209, 1226,  209, 1226, 1226, 1226,
      209, 1226, 1226,  209, 1226,  209,  209, 1226,  983, 1226,

      209, 1226,  209, 1226,  209,  209, 1226, 1226,  209,  984,
      209, 1226,  209,  209,  209,  209,  209,  209,  209,  985,
     1226, 1226, 1226,  209, 1226,  209, 1226,  209, 1226, 1226,
      209, 1226,  209, 1226,  209, 1226, 1226, 1226,  209,  984,
      209, 1226,  209,  986,  209,  209,  209,  209,  209,  985,
     1226, 1226, 1226,  209, 1226,  209, 1226,  209,  209, 1226,
      209, 1226, 1226, 1226, 1226, 1226,  209, 1226,  209, 1226,
     1226,  209,  209,  986,  209,  987,  209, 1226, 1226, 1226,
     1226,  209, 1226,  209,  209, 1226, 1226, 1226,  209,  209,
      209, 1226,  988, 1226, 1226,  209,  209, 1226, 1226,  209,

     1226,  209,  209,  209, 1226,  987,  209, 1226,  209,  209,
     1226,  209, 1226,  989,  209, 1226, 1226, 1226,  209,  209,
      209,  209,  988, 1226, 1226,  209,  209,  209, 1226,  209,
     1226, 1226,  209,  209, 1226, 1226,  209, 1226,  209,  209,
      990, 1226, 1226,  989, 1226,  209,  209, 1226,  209, 1226,
      209,  209, 1226, 1226, 1226,  209,  209,  209,  209, 1226,
     1226, 1226,  209,  209,  209, 1226,  209, 1226,  991,  209,
      990, 1226, 1226,  209, 1226,  209,  209,  209, 1226, 1226,
      209,  992,  209,  209, 1226,  209, 1226,  209,  209, 1226,
     1226, 1226,  209,  209,  209,  993, 1226, 1226,  991,  209,

      209,  209, 1226,  209, 1226, 1226,  209,  209, 1226, 1226,
      209,  992,  209,  209,  209, 1226, 1226,  209,  994,  209,
      209, 1226,  209, 1226,  209,  993, 1226, 1226,  995,  209,
      209,  209,  209, 1226, 1226, 1226,  209,  209,  209, 1226,
      209, 1226, 1226,  209,  209, 1226, 1226,  209,  994,  209,
      209,  209, 1226, 1226,  209, 1226,  209,  209,  995,  209,
     1226,  996,  209, 1226, 1226, 1226,  209,  209,  209, 1226,
      209, 1226, 1226,  209, 1226, 1226, 1226,  209,  209, 1226,
     1226,  209, 1226,  209,  209, 1226,  209,  209, 1226, 1226,
     1226,  996, 1226,  209, 1226, 1226,  209,  209, 1226, 1226,

      209,  998, 1226, 1226, 1226,  209, 1226, 1226,  209, 1226,
      209,  209, 1226,  209,  209, 1226,  209, 1226, 1226, 1226,
      209, 1226, 1226,  209,  209, 1226, 1226,  209, 1226,  209,
      209,  998, 1226,  999, 1000,  209, 1226, 1226, 1226,  209,
      209,  209, 1226, 1226,  209, 1226,  209, 1226,  209, 1226,
      209, 1001,  209, 1226,  209, 1226,  209,  209,  209,  209,
      209,  209,  209,  999, 1000, 1226, 1226,  209, 1226,  209,
     1226,  209, 1226, 1226,  209, 1226,  209, 1226,  209, 1002,
     1226, 1001,  209, 1226,  209, 1226,  209,  209,  209,  209,
      209,  209,  209, 1226,  209, 1226, 1226,  209, 1003,  209,

     1226,  209,  209, 1226, 1226, 1226,  209,  209,  209, 1002,
     1226, 1226, 1226,  209,  209, 1226, 1226,  209, 1226,  209,
      209,  209, 1226, 1226,  209, 1226,  209, 1004, 1003,  209,
     1226, 1226,  209, 1226, 1226, 1226,  209,  209,  209, 1226,
     1226,  209, 1226,  209, 1226,  209, 1226,  209, 1226, 1006,
     1226,  209, 1226,  209,  209,  209,  209, 1004,  209,  209,
     1226, 1005, 1226, 1226,  209, 1226,  209, 1226,  209, 1226,
     1226,  209, 1226, 1226, 1226,  209, 1226, 1226, 1226, 1006,
     1226, 1226,  209,  209,  209,  209, 1226, 1226,  209,  209,
      209, 1005, 1226,  209,  209,  209,  209, 1226,  209, 1226,

     1007,  209, 1226, 1226, 1226,  209,  209,  209, 1226, 1226,
     1226, 1226,  209, 1226, 1226, 1226,  209, 1226, 1226,  209,
      209, 1008, 1226,  209, 1226,  209,  209,  209, 1226, 1226,
     1007,  209,  209,  209, 1226,  209,  209,  209, 1226, 1226,
     1226, 1226,  209, 1226, 1226,  209,  209,  209, 1226,  209,
     1010, 1008, 1226,  209, 1226,  209, 1226,  209,  209,  209,
      209,  209,  209,  209, 1226, 1226, 1226, 1009,  209, 1226,
      209, 1226,  209, 1226, 1226,  209, 1226,  209, 1226, 1226,
     1010, 1226, 1226,  209, 1226,  209, 1226, 1226,  209,  209,
      209,  209, 1226,  209, 1226, 1226, 1226, 1009,  209, 1226,

      209,  209, 1226, 1226,  209, 1226,  209,  209, 1226, 1226,
     1226, 1011,  209, 1226, 1226, 1012,  209,  209,  209, 1226,
     1226, 1226, 1226,  209, 1226, 1226, 1226,  209, 1226, 1226,
      209,  209, 1226, 1226,  209, 1226,  209,  209,  209, 1226,
     1226, 1011,  209, 1013,  209, 1012,  209,  209,  209, 1226,
     1226, 1226, 1226,  209, 1226, 1226,  209,  209, 1014, 1226,
      209, 1226, 1226, 1226,  209, 1226, 1226, 1226,  209,  209,
      209, 1226, 1226, 1013,  209, 1226, 1226, 1226, 1226,  209,
     1226, 1226,  209,  209, 1226, 1226,  209, 1226, 1014, 1226,
      209, 1226, 1226,  209,  209,  209,  209, 1226, 1015,  209,

      209, 1016, 1226, 1226, 1226,  209,  209,  209, 1226,  209,
     1226, 1226,  209, 1226, 1226, 1226,  209, 1226, 1226,  209,
      209, 1226, 1226,  209, 1226,  209,  209,  209, 1015, 1226,
      209, 1016, 1021,  209, 1226,  209,  209,  209,  209, 1226,
     1226, 1226,  209,  209,  209, 1226,  209, 1226, 1022,  209,
     1226, 1226, 1226,  209, 1226, 1226,  209,  209, 1226, 1226,
      209, 1226, 1021,  209,  209, 1226, 1226,  209,  209, 1024,
      209, 1226,  209,  209,  209,  209, 1226, 1226, 1022,  209,
      209,  209, 1226,  209, 1226, 1023,  209, 1226, 1226, 1226,
      209, 1226, 1226, 1226,  209, 1226, 1226,  209, 1226, 1024,

      209, 1226, 1226, 1226, 1025,  209, 1226, 1226, 1026,  209,
      209,  209,  209, 1226, 1226, 1023, 1226,  209,  209, 1226,
      209, 1226,  209, 1226, 1226, 1226, 1226,  209, 1226, 1226,
      209, 1226, 1226, 1226, 1025,  209,  209, 1226, 1026, 1226,
     1027,  209,  209, 1226, 1226,  209, 1226,  209,  209,  209,
     1226, 1226,  209, 1226,  209,  209, 1226,  209, 1226, 1028,
      209, 1226, 1226, 1226,  209,  209,  209, 1226,  209, 1226,
     1027,  209, 1226, 1226, 1226,  209,  209, 1226, 1226,  209,
     1226,  209,  209, 1226,  209,  209, 1226, 1226, 1226, 1028,
     1226,  209, 1029, 1226,  209,  209, 1226, 1226,  209, 1030,

     1226, 1226, 1226,  209, 1226, 1226,  209, 1226,  209,  209,
     1226,  209,  209, 1226, 1226, 1226, 1226, 1226,  209, 1226,
     1226,  209, 1029,  209, 1226,  209, 1226,  209, 1031, 1030,
     1226,  209, 1226,  209, 1226,  209,  209,  209,  209,  209,
     1032,  209, 1226, 1226, 1226, 1226,  209, 1226,  209, 1226,
      209, 1226, 1226,  209, 1226, 1226, 1226,  209, 1031, 1226,
      209,  209, 1226, 1033, 1226,  209,  209,  209,  209, 1226,
     1032,  209, 1226,  209,  209, 1226,  209, 1226,  209, 1226,
      209, 1226, 1226,  209, 1034, 1226,  209, 1226, 1226, 1226,
      209,  209,  209, 1033, 1226, 1226, 1226, 1226,  209, 1226,

     1226,  209, 1226,  209,  209, 1226, 1226, 1226,  209, 1226,
     1226,  209, 1226,  209, 1034, 1035,  209, 1226, 1226,  209,
     1226,  209,  209, 1226,  209,  209, 1226, 1226, 1226,  209,
     1226,  209, 1226, 1226,  209, 1226, 1226,  209, 1226, 1226,
     1226,  209,  209,  209, 1226, 1035, 1226, 1226,  209,  209,
     1226, 1226,  209, 1226,  209,  209,  209, 1226, 1226,  209,
     1226,  209,  209, 1226,  209, 1226, 1226,  209, 1226, 1226,
     1226,  209,  209,  209, 1226, 1226, 1226, 1226,  209, 1226,
     1226, 1226,  209, 1226, 1226, 1226,  209, 1226, 1226, 1226,
     1226,  209,  209,  941,  941,  941,  941,  941,  941,  941,

      941,  209, 1036, 1037, 1037, 1037, 1037, 1037, 1037, 1037,
     1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1038,
     1038, 1038, 1038, 1038, 1038, 1038, 1038, 1038, 1038, 1038,
     1038, 1038, 1038, 1038, 1038, 1038, 1038, 1038, 1038, 1038,
     1038, 1038, 1038, 1037, 1037, 1037, 1037, 1037, 1037, 1037,
     1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037,
     1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037,
     1039, 1039, 1039, 1039, 1039, 1039, 1039, 1037, 1037, 1037,
     1037, 1037, 1037, 1037, 1037, 1037, 1037, 1040, 1040, 1040,
     1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040,

     1040, 1040, 1040, 1040, 1041, 1041, 1041, 1041, 1041, 1041,
     1041, 1041, 1041, 1041, 1041, 1041, 1040, 1040, 1040, 1037,
     1037,  867,  867,  867,  867,  867,  867,  867,  867,  867,
      867,  867,  867,  867,  867,  867,  867,  867,  867,  867,
      867,  867,  867,  867,  867,  867,  867,  867,  867,  867,
      867,  867,  867,  867,  867, 1042, 1042, 1042, 1042, 1042,
     1042, 1042, 1042, 1042, 1042, 1042, 1042, 1043, 1043, 1043,
      867, 1043, 1044, 1044, 1044, 1044, 1044, 1044, 1044, 1044,
     1044, 1044, 1044, 1044, 1044, 1044, 1044, 1044, 1044, 1046,
     1046, 1046, 1046, 1046, 1046, 1046, 1046, 1046, 1046, 1046,

     1046, 1046, 1046, 1046, 1046, 1046, 1047, 1048, 1049, 1049,
     1049, 1049, 1049, 1049, 1049, 1049, 1049, 1049, 1050, 1050,
     1050, 1050, 1049, 1051, 1049, 1049, 1049, 1049, 1049, 1049,
     1049, 1049, 1049, 1049, 1049, 1049, 1049, 1049, 1049, 1049,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1053, 1053, 1053,
     1053, 1053, 1053, 1053, 1053, 1053, 1053, 1056, 1056, 1056,
     1056, 1056, 1056, 1056, 1056, 1056, 1056, 1057, 1057, 1057,
     1057, 1057, 1057, 1057, 1057, 1057, 1057, 1057, 1057, 1057,
     1057, 1057, 1057, 1057,  895,  895,  895,  895,  895,  895,

      895,  895,  895,  895,  895,  895,  895,  895,  895,  895,
      895, 1058, 1058, 1058, 1058, 1058, 1058, 1058, 1058, 1058,
     1058, 1058, 1058, 1058, 1058, 1058, 1058, 1058,  890,  890,
      890,  890,  890,  891,  890,  890,  890,  890,  890,  890,
      890,  890,  890,  890,  890,  890,  890,  890,  890,  890,
      890,  890,  890,  890,  890,  890,  890,  891,  891,  891,
      891,  891,  890,  890,  890,  890,  890,  890,  890,  890,
      890,  890,  890,  890,  890,  890,  890,  890,  890, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059,  890, 1060, 1060, 1060,

     1060, 1060, 1060, 1060, 1060, 1060, 1060, 1060, 1060, 1060,
     1060, 1060, 1060, 1060, 1060, 1060, 1060, 1060, 1060, 1060,
     1060, 1060, 1060, 1060, 1060, 1060, 1060, 1060, 1060, 1060,
      890,  890,  890,  890,  890,  890,  890,  890,  890,  890,
      890,  890,  890,  890,  890,  890,  890, 1061, 1061, 1061,
     1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061,
     1061, 1061, 1061, 1061, 1063, 1063, 1063, 1063, 1063, 1063,
     1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063,
     1063, 1064, 1064, 1064, 1064, 1064, 1064, 1064, 1064, 1064,
     1064, 1064, 1064, 1064, 1064, 1064, 1064, 1064,  209, 1226,

      209, 1226, 1226, 1226, 1226, 1226,  209, 1226,  209, 1226,
     1226,  209,  209,  209,  209, 1226, 1226, 1226, 1226, 1226,
     1226,  209, 1226,  209, 1226, 1226,  209, 1226,  209, 1226,
      209, 1226, 1065, 1226,  209, 1226,  209, 1226,  209,  209,
      209,  209,  209,  209,  209, 1226, 1226, 1226, 1226,  209,
     1226,  209, 1226,  209, 1226, 1226,  209, 1226, 1226, 1226,
     1226, 1226, 1226, 1226,  209, 1226, 1226, 1226, 1226,  209,
      209,  941,  941,  941,  941,  941,  941,  941,  941,  209,
     1066,  914,  914,  914,  914,  914,  914,  914,  914,  914,
      914,  914,  914,  914,  914,  914,  914,  914,  640,  640,

      640,  640,  640,  640,  640,  640,  640,  640,  640,  640,
      640,  640,  640,  640,  640, 1067, 1067, 1067, 1067, 1067,
     1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067,
     1067, 1067, 1226, 1226, 1226,  642,  640,  640,  640,  640,
      640,  640,  640,  640,  640,  640,  640,  640,  640,  640,
      640,  640,  640,  640,  640,  640,  640,  640,  640,  640,
      640,  640,  640,  640,  640,  640,  640,  640,  640,  640,
     1226, 1226, 1226,  643,  943,  943,  943,  943,  943,  943,
      943,  943, 1226,  644, 1226,  645,  645,  645,  645,  645,
      645,  646,  647,  647,  647,  647,  648,  649,  649,  650,

      651,  652, 1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068,
     1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068, 1069,
     1069, 1069, 1069, 1069, 1069, 1069, 1069, 1069, 1069, 1069,
     1069, 1069, 1069, 1069, 1069, 1069, 1070, 1070, 1070, 1070,
     1070, 1070, 1070, 1070, 1070, 1070, 1070, 1070, 1070, 1070,
     1070, 1070, 1070, 1071, 1071, 1071, 1071, 1071, 1071, 1071,
     1071, 1071, 1071, 1071, 1071, 1071, 1071, 1071, 1071, 1071,
     1071, 1071, 1071, 1071, 1071, 1071, 1071, 1071, 1071, 1071,
     1071, 1071, 1071, 1071, 1071, 1071, 1071, 1072,  932,  932,
      932,  932,  932,  932,  932,  932,  932,  932,  932,  932,

      932,  932,  932,  932,  932,  688,  688,  688,  688,  688,
      688,  688,  688,  688,  688,  688,  688,  688,  688,  688,
      688,  688,  943,  943,  943,  943,  943,  943,  943,  943,
     1226, 1226, 1226, 1226, 1226, 1226, 1226,  690, 1073, 1073,
     1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073,
     1073, 1073, 1073, 1073, 1073,  688,  688,  688,  688,  688,
      688,  688,  688,  688,  688,  688,  688,  688,  688,  688,
      688,  688, 1226, 1226, 1226,  691,  945,  945,  945,  945,
      945,  945,  945,  945, 1226,  692, 1226,  693,  693,  693,
      693,  693,  693,  694,  695,  695,  695,  695,  696,  697,

      697,  698,  699,  700,  688,  688,  688,  688,  688,  688,
      688,  688,  688,  688,  688,  688,  688,  688,  688,  688,
      688, 1074, 1074, 1074, 1074, 1074, 1074, 1074, 1074, 1074,
     1074, 1074, 1074, 1074, 1074, 1074, 1074, 1074, 1075, 1075,
     1075, 1075, 1075, 1075, 1075, 1075, 1075, 1075, 1075, 1075,
     1075, 1075, 1075, 1075, 1075, 1076, 1076, 1076, 1076, 1076,
     1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
     1076, 1076,  945,  945,  945,  945,  945,  945,  945,  945,
      947,  947,  947,  947,  947,  947,  947,  947,  947,  947,
      947,  947,  947,  947,  947,  947, 1077, 1077, 1077, 1077,

     1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077,
     1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077,
     1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077,
     1078, 1078, 1078, 1078, 1078, 1078, 1078, 1078, 1078, 1078,
     1078, 1078, 1078, 1078, 1078, 1078, 1078, 1078, 1078, 1078,
     1078, 1078, 1078, 1078, 1078, 1078, 1078, 1078, 1078, 1078,
     1078, 1078, 1078, 1078,  209, 1226,  209, 1226,  209, 1226,
     1226, 1226,  209, 1226,  209, 1226,  209,  209,  209, 1079,
      209,  209,  209, 1226, 1226, 1226, 1226,  209, 1226,  209,
     1226,  209, 1226, 1226,  209, 1226,  209, 1226,  209, 1226,

     1226, 1226,  209, 1226,  209, 1226,  209,  209,  209, 1079,
      209,  209,  209, 1226,  209, 1226,  209,  209,  209,  209,
     1226,  209,  209, 1226,  209, 1226,  209,  209,  209,  209,
      209,  209,  209, 1226, 1226, 1080, 1226,  209, 1226,  209,
     1226,  209, 1226, 1226,  209, 1226,  209, 1226,  209, 1226,
     1226, 1226,  209, 1226,  209, 1226,  209,  209,  209,  209,
      209,  209,  209, 1226,  209, 1080, 1226,  209, 1226,  209,
     1226,  209,  209, 1226, 1226,  209, 1226,  209,  209, 1226,
     1226, 1226, 1081,  209, 1226, 1226, 1226,  209,  209,  209,
     1226, 1082, 1226, 1226,  209, 1226, 1226, 1226,  209, 1226,

     1226,  209,  209, 1226, 1226,  209, 1226,  209,  209, 1083,
     1226, 1226, 1081,  209,  209,  209, 1226,  209,  209,  209,
     1226, 1082, 1226, 1226,  209, 1226, 1226,  209,  209,  209,
     1226,  209, 1226, 1084, 1226,  209, 1226,  209, 1226, 1083,
      209,  209,  209,  209,  209,  209, 1226, 1226, 1226, 1226,
      209, 1226,  209, 1226,  209, 1226, 1226,  209, 1226,  209,
     1226,  209, 1226, 1084, 1226,  209, 1226,  209, 1226,  209,
      209,  209,  209,  209,  209,  209, 1226, 1226, 1226,  209,
      209, 1226,  209, 1226, 1085, 1226, 1226,  209, 1226, 1226,
     1086,  209,  209,  209, 1226, 1226, 1226, 1226, 1226,  209,

     1226, 1226,  209, 1226,  209,  209, 1226, 1226, 1226,  209,
     1226,  209, 1226,  209, 1085, 1087, 1226,  209, 1226,  209,
     1086, 1088,  209,  209,  209,  209,  209,  209, 1226, 1226,
     1226, 1226,  209, 1226,  209, 1226,  209, 1226, 1226,  209,
     1226,  209, 1226,  209, 1226, 1087, 1226,  209, 1226,  209,
     1226, 1088, 1089,  209,  209,  209,  209,  209, 1226, 1226,
     1226, 1226,  209, 1226,  209, 1226,  209,  209, 1226,  209,
     1226, 1090, 1226, 1226, 1226,  209, 1226,  209, 1226, 1226,
      209,  209, 1089,  209, 1226,  209, 1226, 1226, 1226, 1226,
      209, 1226,  209,  209, 1226, 1226, 1226,  209,  209,  209,

     1226, 1090, 1091, 1226, 1226,  209, 1226, 1226,  209, 1226,
      209,  209, 1226,  209, 1226,  209, 1226,  209, 1226, 1226,
      209,  209, 1226,  209, 1226,  209,  209,  209,  209,  209,
      209,  209, 1091, 1092, 1226, 1226,  209, 1226,  209, 1226,
      209, 1226, 1226,  209, 1226,  209, 1226,  209, 1226, 1226,
     1226,  209, 1226,  209, 1226,  209,  209,  209,  209,  209,
      209,  209, 1226, 1092,  209, 1226,  209, 1226,  209, 1226,
      209, 1226,  209, 1226, 1226,  209, 1226,  209,  209, 1226,
     1226, 1226, 1226,  209, 1226, 1226, 1226,  209,  209,  209,
     1226,  209, 1226, 1093,  209, 1226, 1226, 1094,  209,  209,

     1226, 1226,  209, 1226,  209,  209, 1226,  209,  209, 1226,
      209, 1226, 1226, 1226,  209, 1226, 1226,  209,  209, 1226,
     1226,  209, 1226,  209,  209, 1226, 1226, 1094,  209,  209,
     1226, 1226, 1226,  209,  209,  209,  209, 1226, 1226, 1226,
      209,  209,  209, 1226,  209, 1226, 1095,  209,  209, 1226,
     1226,  209, 1226,  209,  209,  209, 1226, 1226,  209, 1226,
     1096,  209, 1226,  209, 1226,  209,  209, 1226, 1226, 1226,
      209,  209,  209,  209, 1226, 1226, 1095,  209,  209,  209,
     1226,  209, 1226, 1226, 1226,  209, 1226, 1226,  209, 1226,
     1096,  209, 1226,  209, 1226,  209, 1226, 1097, 1226, 1226,

      209,  209, 1226,  209, 1226, 1226,  209,  209,  209,  209,
     1226,  209, 1226, 1226, 1226, 1098,  209, 1226,  209,  209,
     1226, 1226, 1226,  209,  209,  209, 1226, 1097, 1226, 1226,
      209,  209, 1226, 1226,  209, 1226,  209,  209,  209, 1226,
     1226,  209, 1226,  209,  209, 1098,  209, 1226, 1099,  209,
     1226, 1226, 1226,  209,  209,  209,  209, 1226, 1226, 1226,
      209,  209,  209, 1226,  209, 1226, 1226,  209,  209, 1226,
     1226,  209, 1226,  209,  209,  209, 1226, 1226, 1099, 1226,
      209,  209, 1226,  209, 1226,  209,  209, 1226, 1226, 1226,
      209,  209,  209,  209, 1226, 1226, 1226,  209,  209,  209,

     1226,  209, 1226, 1226, 1226,  209, 1226, 1226,  209, 1226,
      209,  209, 1226,  209, 1226,  209, 1226,  209, 1226, 1226,
      209,  209, 1226,  209, 1226,  209,  209,  209,  209,  209,
      209,  209, 1226, 1100, 1226, 1226,  209, 1226,  209, 1226,
      209, 1226, 1226,  209, 1226,  209, 1226,  209, 1226, 1101,
     1226,  209, 1226,  209, 1226,  209,  209,  209,  209,  209,
      209,  209, 1226, 1100,  209, 1226,  209, 1226,  209, 1226,
      209, 1226,  209, 1226, 1226,  209, 1226,  209,  209, 1101,
     1226, 1226,  209,  209, 1226, 1226, 1226,  209,  209,  209,
      209, 1226, 1226, 1226,  209,  209,  209, 1226,  209, 1226,

     1226,  209,  209, 1226, 1226,  209, 1226,  209,  209,  209,
     1226, 1226,  209, 1226,  209,  209, 1226,  209, 1226, 1102,
      209, 1226, 1226, 1226,  209,  209,  209, 1226,  209, 1226,
     1226,  209, 1226, 1226, 1226,  209,  209, 1226, 1226,  209,
     1226, 1103,  209, 1226,  209,  209, 1226,  209, 1226, 1102,
     1226,  209, 1226, 1226,  209,  209, 1226, 1226,  209, 1226,
      209,  209, 1226, 1226, 1226,  209,  209, 1226, 1226, 1226,
      209, 1103,  209,  209, 1226, 1226, 1226,  209,  209,  209,
     1226,  209, 1226, 1226,  209,  209, 1226, 1104,  209, 1226,
      209,  209,  209, 1226, 1226,  209, 1226,  209,  209, 1226,

      209, 1226,  209,  209, 1226, 1226, 1105,  209,  209,  209,
      209, 1226, 1226, 1226,  209,  209,  209, 1104,  209, 1226,
     1226,  209,  209, 1226, 1226,  209, 1226,  209,  209,  209,
     1226, 1226,  209, 1226,  209,  209, 1105,  209, 1226,  209,
      209, 1226, 1226, 1226,  209,  209,  209,  209, 1226, 1226,
     1226,  209,  209,  209, 1226,  209, 1226, 1226, 1226,  209,
     1226, 1226,  209, 1226,  209,  209, 1226,  209, 1226,  209,
     1226, 1106, 1226, 1226,  209,  209, 1226,  209, 1226, 1226,
      209,  209,  209,  209, 1226,  209, 1226, 1226, 1226, 1107,
      209, 1226,  209,  209, 1226, 1226, 1226,  209,  209,  209,

     1226, 1106, 1226, 1226,  209,  209, 1226, 1108,  209, 1226,
      209,  209,  209, 1226, 1226,  209, 1226,  209,  209, 1107,
      209, 1226,  209,  209, 1226, 1226, 1226,  209,  209,  209,
      209, 1226, 1226, 1226,  209,  209,  209, 1108,  209, 1226,
     1109, 1110,  209, 1226, 1226,  209, 1226,  209,  209,  209,
     1226, 1226,  209, 1226,  209,  209, 1226,  209, 1226,  209,
      209, 1111, 1226, 1226,  209,  209,  209,  209, 1226, 1226,
     1109, 1110,  209,  209, 1226,  209, 1226, 1226, 1226,  209,
     1226, 1226,  209, 1226,  209,  209, 1226,  209, 1226,  209,
     1226, 1111, 1226, 1226,  209,  209, 1226,  209, 1226, 1226,

      209,  209,  209,  209, 1226, 1117,  209, 1226, 1226, 1226,
      209, 1226,  209, 1226,  209, 1226, 1226,  209, 1226,  209,
      209, 1226, 1226, 1118,  209,  209, 1226, 1226, 1226,  209,
      209,  209,  209, 1226, 1226, 1117,  209,  209,  209, 1226,
      209, 1226, 1226,  209,  209, 1226, 1119,  209, 1226,  209,
      209,  209, 1226, 1118,  209, 1226,  209,  209, 1226,  209,
     1226,  209,  209, 1226, 1226, 1226,  209,  209,  209,  209,
     1226, 1226, 1226,  209, 1120,  209, 1119,  209, 1226, 1226,
      209,  209, 1226, 1226,  209, 1226,  209,  209,  209, 1226,
     1226,  209, 1226, 1121,  209, 1226,  209, 1226, 1122,  209,

     1226, 1226, 1226,  209, 1120,  209,  209, 1226, 1226, 1226,
      209,  209,  209, 1226,  209, 1226, 1226, 1226,  209, 1226,
     1226,  209, 1226, 1121,  209, 1226,  209, 1226, 1122, 1226,
      209, 1226, 1226,  209,  209, 1226,  209, 1226,  209,  209,
     1124,  209,  209,  209,  209, 1226, 1123, 1226, 1226,  209,
     1226,  209, 1226,  209, 1226, 1226,  209, 1226,  209, 1226,
      209, 1226, 1226, 1226,  209, 1226,  209, 1226,  209,  209,
     1124,  209,  209,  209,  209, 1226, 1123,  209, 1226,  209,
     1226,  209, 1226,  209, 1226,  209, 1226, 1226,  209, 1226,
      209,  209, 1226, 1226, 1226,  209,  209, 1226, 1226, 1226,

      209,  209,  209,  209, 1226, 1226, 1226,  209,  209,  209,
     1226,  209, 1226, 1226, 1226,  209, 1226, 1226,  209, 1226,
      209,  209, 1226,  209, 1226,  209, 1226, 1125, 1226, 1226,
      209,  209, 1226,  209, 1226, 1226,  209,  209,  209,  209,
     1226,  209, 1226, 1226, 1226, 1226,  209, 1226,  209,  209,
     1226, 1226, 1226,  209,  209,  209, 1226, 1125, 1226, 1226,
      209,  209, 1226, 1226,  209, 1226,  209,  209,  209, 1226,
     1226,  209, 1226,  209,  209, 1226,  209, 1226, 1226,  209,
     1226, 1226, 1226,  209,  209,  209, 1226, 1226, 1226, 1226,
      209, 1226, 1226, 1226,  209, 1226, 1226, 1226,  209, 1226,

     1226, 1226, 1226,  209,  209, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226,  209, 1044, 1044, 1044, 1044, 1044, 1044,
     1044, 1044, 1044, 1044, 1044, 1044, 1044, 1044, 1044, 1044,
     1044, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126,
     1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 1037, 1037,
     1037, 1037, 1037, 1038, 1037, 1037, 1037, 1037, 1037, 1037,
     1037, 1037, 1037, 1037, 1036, 1037, 1037, 1037, 1037, 1037,
     1037, 1037, 1037, 1037, 1037, 1037, 1037, 1038, 1038, 1038,
     1038, 1038, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037,
     1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1127,

     1127, 1127, 1127, 1127, 1127, 1127, 1127, 1127, 1127, 1127,
     1127, 1127, 1127, 1127, 1127, 1127, 1037, 1128, 1128, 1128,
     1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128,
     1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128,
     1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128,
     1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037,
     1037, 1037, 1037, 1037, 1037, 1037, 1037, 1129, 1129, 1129,
     1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129,
     1129, 1129, 1129, 1129, 1131, 1131, 1131, 1131, 1131, 1131,
     1131, 1131, 1131, 1131, 1131, 1131, 1131, 1131, 1131, 1131,

     1131, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132,
     1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1133, 1133,
     1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133,
     1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133,
     1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133,
     1133, 1133,  209, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
      209, 1226, 1226, 1226, 1226,  209,  209, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226,  209, 1226, 1226, 1226, 1226,
     1226, 1226,  209, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
      209, 1226, 1226, 1226, 1226,  209,  209, 1226, 1226, 1226,

     1226, 1226, 1226, 1226, 1226,  209,  641,  640,  640,  640,
      640,  640,  640,  640,  640,  640,  640,  640,  640,  640,
      640,  640,  640,  640,  640,  640,  640,  640,  640,  640,
      640,  640,  640,  640,  640,  640,  640,  640,  640,  640,
      640,  914,  914,  914,  914,  914,  914,  914,  914,  914,
      914,  914,  914,  914,  914,  914,  914,  914, 1226, 1226,
     1226,  642,  688,  688,  688,  688,  688,  688,  688,  688,
      688,  688,  688,  688,  688,  688,  688,  688,  688,  688,
      688,  688,  688,  688,  688,  688,  688,  688,  688,  688,
      688,  688,  688,  688,  688,  688, 1226, 1226, 1226,  643,

     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,  644,
     1226,  645,  645,  645,  645,  645,  645,  646,  647,  647,
      647,  647,  648,  649,  649,  650,  651,  652,  689,  932,
      932,  932,  932,  932,  932,  932,  932,  932,  932,  932,
      932,  932,  932,  932,  932,  932,  209, 1226, 1226,  209,
     1226, 1135, 1134, 1226,  209, 1226, 1226,  209, 1226,  209,
      209, 1226,  209,  209, 1226, 1226, 1226, 1226, 1226,  209,
     1226, 1226,  209, 1226, 1226, 1226,  209, 1226,  690,  209,
     1226, 1135, 1134, 1226,  209, 1226, 1226,  209, 1226,  209,
      209, 1226,  209,  209, 1226, 1226, 1226, 1226, 1226,  209,

     1226, 1226,  209, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226,  691, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226,  692, 1226,  693,  693,
      693,  693,  693,  693,  694,  695,  695,  695,  695,  696,
      697,  697,  698,  699,  700,  209, 1226,  209, 1226,  209,
     1226, 1226, 1226,  209, 1226,  209, 1226,  209,  209,  209,
      209,  209, 1137,  209, 1226, 1226, 1136, 1226,  209, 1226,
      209, 1226,  209, 1226, 1226,  209, 1226,  209, 1226,  209,
     1226, 1226, 1226,  209, 1226,  209, 1226,  209,  209,  209,
      209,  209, 1137,  209, 1226,  209, 1136,  209,  209, 1226,

      209, 1226,  209,  209, 1226,  209, 1226, 1226,  209,  209,
      209,  209, 1138, 1226, 1226, 1226, 1226, 1226,  209, 1226,
      209, 1140, 1140, 1140, 1140,  209, 1226,  209, 1226, 1226,
     1226, 1226, 1226,  209, 1226,  209, 1226, 1226,  209,  209,
      209,  209, 1138,  209, 1226, 1226, 1226, 1226,  209, 1226,
      209,  209, 1226, 1226, 1226,  209,  209,  209, 1226, 1226,
     1226, 1139, 1226,  209, 1226, 1226,  209, 1226,  209,  209,
     1226, 1226, 1226,  209, 1226, 1226, 1226, 1226,  209, 1226,
     1226,  209, 1226, 1226, 1226,  209,  209,  209, 1226,  209,
     1141, 1139,  209,  209, 1142, 1226,  209,  209,  209,  209,

      209, 1226,  209,  209, 1226,  209,  209, 1226,  209, 1226,
     1226, 1226,  209, 1226, 1143,  209, 1226, 1226, 1226,  209,
     1141, 1226,  209, 1226, 1142, 1226,  209,  209, 1226, 1226,
      209, 1226,  209,  209,  209,  209,  209, 1226,  209,  209,
      209, 1226,  209, 1226, 1226,  209,  209, 1226, 1226,  209,
     1226,  209,  209, 1226, 1226, 1226,  209, 1226, 1226, 1226,
     1226,  209, 1226, 1226,  209, 1226, 1226, 1226,  209,  209,
      209, 1226,  209, 1226, 1226,  209,  209, 1144, 1226,  209,
      209,  209,  209,  209, 1226,  209,  209, 1226,  209,  209,
     1226,  209, 1226, 1226, 1226,  209, 1226, 1226,  209, 1226,

     1226, 1226,  209, 1226, 1226,  209, 1226, 1144, 1226,  209,
      209, 1226, 1226,  209, 1226,  209,  209,  209,  209,  209,
     1226, 1226,  209,  209, 1226,  209, 1226, 1226,  209, 1226,
     1226, 1226,  209, 1145, 1145, 1145, 1145, 1226, 1226,  209,
     1226, 1226, 1226, 1226, 1226, 1226, 1226,  209, 1226, 1226,
     1226, 1226,  209,  209, 1226,  209, 1226, 1226, 1226, 1226,
     1226, 1226,  209,  209, 1226, 1146, 1226,  209,  209,  209,
     1226, 1226, 1226, 1226, 1226,  209, 1226, 1226,  209, 1226,
      209,  209, 1226, 1226, 1226,  209, 1226, 1226, 1226, 1226,
      209, 1226, 1226,  209, 1226, 1146, 1226,  209,  209,  209,

     1226,  209, 1226, 1226, 1226,  209, 1226, 1226,  209,  209,
      209,  209, 1226,  209,  209,  209, 1226, 1147, 1226, 1226,
      209,  209, 1226, 1226,  209, 1226,  209,  209, 1226, 1148,
     1226,  209, 1226, 1226, 1226, 1226,  209, 1226, 1226,  209,
     1226, 1226, 1226,  209,  209,  209, 1226, 1147, 1226, 1226,
      209,  209, 1226, 1226,  209, 1226,  209,  209,  209, 1148,
     1226,  209, 1226,  209,  209, 1226,  209, 1226, 1149,  209,
     1226, 1226, 1226,  209,  209,  209, 1226, 1226, 1150, 1226,
      209, 1226, 1226, 1226,  209, 1226, 1226, 1226,  209, 1226,
     1226,  209, 1226,  209,  209, 1226, 1226, 1226, 1149,  209,

     1226, 1226,  209,  209,  209,  209, 1226, 1226, 1150, 1226,
      209, 1226, 1226,  209,  209,  209,  209, 1226, 1226, 1151,
     1226,  209, 1226, 1226, 1226,  209,  209,  209, 1226, 1226,
     1226, 1226,  209, 1226, 1226, 1226,  209, 1226, 1226, 1152,
      209, 1226, 1226,  209, 1226,  209,  209,  209, 1226, 1151,
      209,  209,  209,  209, 1226,  209,  209,  209,  209, 1226,
     1226, 1226,  209,  209,  209, 1226,  209, 1226, 1226, 1152,
     1226, 1226, 1226,  209, 1226, 1226,  209,  209, 1226, 1153,
      209, 1226,  209,  209,  209, 1226, 1226, 1226,  209,  209,
      209, 1226,  209,  209,  209, 1226, 1226, 1226, 1226,  209,

     1226, 1226,  209,  209, 1226, 1226,  209, 1226, 1226, 1153,
      209, 1226, 1226,  209,  209,  209,  209, 1226, 1154,  209,
      209,  209, 1226, 1226, 1226,  209,  209,  209, 1226,  209,
     1226, 1226,  209, 1226, 1226, 1226,  209, 1226, 1226,  209,
      209, 1226, 1226,  209, 1226,  209,  209,  209, 1154, 1226,
      209,  209,  209,  209, 1226,  209,  209,  209,  209, 1226,
     1226, 1226,  209,  209,  209, 1226,  209, 1155, 1226,  209,
     1226, 1226, 1226,  209, 1226, 1226, 1226,  209, 1226, 1226,
      209, 1226,  209,  209, 1226, 1226, 1226,  209,  209, 1226,
     1226, 1226,  209,  209,  209,  209, 1226, 1155,  209, 1226,

      209,  209, 1157,  209, 1226, 1156,  209, 1226, 1226, 1226,
      209,  209,  209, 1226, 1226, 1226, 1226,  209, 1226, 1226,
     1226,  209, 1226, 1226, 1226,  209, 1226, 1226,  209, 1226,
      209,  209, 1157, 1226, 1226, 1156,  209, 1226, 1226,  209,
      209,  209,  209, 1226, 1226, 1226, 1226,  209, 1226, 1226,
      209,  209,  209,  209, 1226, 1226, 1226, 1226,  209, 1226,
     1226, 1226,  209,  209,  209, 1226, 1226, 1226, 1226,  209,
     1226, 1226, 1226,  209, 1226, 1226, 1226,  209, 1226, 1226,
      209, 1226,  209,  209, 1226, 1226, 1226,  209,  209, 1226,
     1226, 1226,  209,  209,  209,  209, 1226, 1226, 1226,  209,

      209,  209, 1226,  209, 1162, 1163, 1226,  209, 1226, 1226,
      209, 1226,  209,  209, 1226, 1226, 1226,  209, 1226, 1226,
     1226, 1226,  209, 1226, 1226,  209, 1226, 1226, 1226,  209,
      209,  209, 1226,  209, 1162, 1163, 1226,  209, 1226, 1226,
      209,  209,  209,  209, 1226,  209,  209,  209, 1226, 1226,
     1226, 1226,  209,  209, 1226, 1226,  209, 1226,  209,  209,
     1226, 1164, 1226,  209, 1226, 1226, 1226, 1226,  209, 1226,
     1226,  209, 1226, 1226, 1226,  209,  209,  209, 1226,  209,
     1226, 1226,  209,  209, 1226, 1226,  209,  209,  209,  209,
      209, 1164,  209,  209, 1226, 1165,  209, 1226,  209, 1226,

     1226, 1226,  209, 1226, 1226,  209, 1226, 1226, 1226,  209,
     1226, 1226,  209, 1226, 1226, 1226,  209,  209, 1226, 1226,
      209, 1226,  209,  209,  209, 1165,  209, 1226,  209,  209,
      209, 1226,  209, 1168, 1226,  209,  209, 1226, 1226,  209,
     1226,  209,  209, 1226, 1166, 1226,  209, 1226, 1226, 1226,
     1226,  209, 1226, 1226,  209, 1226, 1226, 1226,  209,  209,
      209, 1226, 1226, 1168, 1226, 1226,  209, 1226, 1226,  209,
     1226,  209,  209, 1226, 1166, 1226, 1226, 1226, 1226, 1226,
     1226,  209, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167,
     1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167,

     1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167,
     1167, 1167, 1167, 1167, 1167, 1167,  209, 1226, 1226,  209,
     1169, 1170, 1226, 1226,  209, 1226, 1226,  209, 1226,  209,
      209, 1226,  209,  209, 1226, 1226, 1226, 1226, 1226,  209,
     1226, 1226,  209, 1226, 1226, 1226,  209, 1226, 1226,  209,
     1169, 1170, 1226,  209,  209, 1226, 1226,  209, 1226,  209,
      209,  209,  209,  209, 1226, 1226,  209,  209, 1226,  209,
     1171,  209,  209, 1226, 1226, 1172,  209, 1226, 1226,  209,
     1226, 1226, 1226,  209,  209,  209, 1226, 1226, 1226, 1226,
      209,  209, 1226, 1226,  209, 1226,  209,  209,  209, 1226,

     1171,  209, 1226,  209,  209, 1172,  209, 1226,  209,  209,
     1226, 1226, 1175,  209,  209,  209,  209, 1226, 1226, 1226,
      209,  209,  209, 1226,  209, 1226, 1226,  209,  209, 1226,
     1226,  209, 1226,  209,  209,  209, 1226, 1226,  209, 1226,
      209,  209, 1175,  209, 1226, 1176,  209, 1226, 1226, 1226,
      209,  209,  209, 1226,  209, 1226, 1226,  209, 1226, 1226,
     1226,  209,  209, 1226, 1226,  209, 1226,  209, 1178, 1226,
      209,  209, 1226,  209, 1226, 1176, 1226,  209, 1226, 1226,
      209,  209, 1226, 1226,  209, 1226,  209,  209, 1226, 1226,
     1226, 1180,  209, 1226, 1226, 1226,  209,  209, 1178,  209,

     1226, 1226, 1226,  209,  209,  209, 1226,  209, 1226, 1226,
      209,  209, 1226, 1226,  209, 1226,  209,  209, 1181, 1226,
     1226, 1180, 1226,  209,  209, 1226,  209, 1226,  209,  209,
     1182, 1226, 1226,  209,  209,  209,  209, 1226, 1226, 1226,
      209,  209,  209, 1226,  209, 1226, 1226, 1226, 1181, 1226,
     1226,  209, 1226,  209,  209, 1226,  209, 1226,  209, 1226,
     1182, 1226, 1226,  209,  209, 1226,  209, 1226, 1226,  209,
      209,  209,  209, 1226,  209, 1226, 1226, 1226, 1226,  209,
     1226,  209,  209, 1226, 1226, 1226,  209,  209,  209, 1226,
     1226, 1226, 1226, 1226,  209, 1226, 1226,  209, 1226,  209,

      209, 1226,  209, 1226,  209, 1226,  209, 1226, 1226,  209,
      209, 1226,  209, 1183,  209,  209,  209,  209,  209,  209,
      209, 1226, 1226, 1226, 1226,  209, 1226,  209, 1226,  209,
     1226, 1226,  209, 1226, 1226, 1226,  209, 1226, 1226,  209,
      209, 1226, 1226, 1183,  209,  209,  209,  209, 1226,  209,
      209, 1184,  209,  209, 1226,  209, 1226,  209, 1226,  209,
     1226, 1226,  209, 1226, 1226,  209, 1226, 1226, 1226,  209,
      209,  209, 1226, 1226, 1226, 1226,  209,  209, 1226, 1226,
      209, 1184,  209,  209,  209, 1226, 1226,  209, 1226,  209,
     1185, 1226,  209, 1226,  209,  209, 1226, 1226, 1226,  209,

      209,  209,  209, 1226, 1226, 1226,  209,  209,  209, 1226,
      209, 1226, 1226,  209,  209, 1226, 1226,  209, 1226,  209,
     1185,  209, 1226, 1226,  209, 1226,  209,  209, 1226,  209,
     1226,  209,  209, 1226, 1226, 1226,  209,  209,  209,  209,
     1226, 1226, 1226,  209,  209,  209, 1226,  209, 1226, 1226,
      209,  209, 1226, 1226,  209, 1226,  209,  209,  209, 1226,
     1226,  209, 1226,  209,  209, 1226,  209, 1226, 1190,  209,
     1226, 1226, 1226,  209,  209,  209, 1226,  209, 1226, 1226,
      209, 1191, 1226, 1226,  209,  209, 1226, 1226,  209, 1226,
      209,  209, 1226,  209,  209, 1226, 1226, 1226, 1190, 1226,

      209, 1226, 1226,  209,  209, 1226, 1226,  209, 1192, 1226,
     1226, 1191,  209, 1226, 1226,  209, 1226,  209,  209, 1226,
      209,  209, 1226,  209, 1226, 1226, 1226,  209, 1226, 1226,
      209,  209, 1226, 1226,  209, 1226,  209,  209, 1192, 1226,
     1226,  209,  209, 1226, 1226, 1226,  209,  209,  209,  209,
     1226, 1226, 1226,  209,  209,  209, 1226,  209, 1226, 1226,
      209,  209, 1226, 1226,  209, 1226,  209,  209,  209, 1226,
     1226,  209, 1226,  209,  209, 1226,  209, 1226, 1193,  209,
     1226, 1226, 1226,  209,  209,  209, 1226,  209, 1226, 1226,
      209, 1226, 1226, 1226,  209,  209, 1226, 1226,  209, 1226,

      209,  209, 1226,  209,  209, 1226,  209, 1226, 1193, 1226,
      209, 1226, 1226,  209,  209, 1226, 1226,  209, 1226,  209,
      209, 1226, 1226, 1226,  209,  209, 1226, 1226, 1226,  209,
      209,  209,  209, 1226, 1226, 1226,  209,  209,  209, 1226,
      209, 1226, 1226,  209,  209, 1226, 1226,  209, 1226,  209,
      209,  209, 1226, 1226,  209, 1226,  209,  209, 1226,  209,
     1226,  209,  209, 1226, 1226, 1226,  209,  209,  209,  209,
     1226, 1226, 1226,  209, 1197,  209, 1226,  209, 1226, 1226,
     1226,  209, 1226, 1226,  209, 1226,  209,  209, 1226,  209,
     1226,  209, 1226,  209, 1226, 1200,  209,  209, 1226,  209,

     1199,  209,  209,  209, 1197,  209,  209,  209, 1226, 1226,
     1226, 1226,  209, 1226,  209, 1226,  209, 1226, 1226,  209,
     1226,  209, 1226,  209, 1226, 1200, 1226,  209, 1201,  209,
     1199,  209,  209,  209,  209,  209,  209,  209, 1226,  209,
     1226, 1226,  209, 1226,  209, 1226,  209,  209, 1226, 1226,
     1226,  209,  209,  209, 1226, 1226, 1226, 1226, 1201,  209,
     1226, 1226,  209, 1226,  209,  209, 1226,  209, 1226,  209,
     1226,  209, 1226, 1226,  209,  209, 1226,  209, 1226,  209,
      209,  209,  209,  209,  209,  209, 1226, 1202, 1226, 1226,
      209, 1226,  209, 1226,  209, 1226, 1226,  209, 1226,  209,

     1226,  209, 1226, 1226, 1226,  209, 1226,  209, 1226,  209,
      209,  209,  209,  209,  209,  209, 1203, 1202,  209, 1226,
      209, 1226,  209, 1226,  209, 1226,  209, 1226, 1226,  209,
     1226,  209,  209, 1226, 1226, 1226,  209,  209, 1226, 1204,
     1226,  209,  209,  209,  209, 1226, 1203, 1226,  209,  209,
      209, 1226,  209, 1226, 1226, 1226,  209, 1226, 1226,  209,
     1226,  209,  209, 1226,  209, 1226,  209, 1226,  209, 1204,
     1208,  209,  209, 1226,  209, 1226,  209,  209,  209,  209,
      209,  209,  209, 1226, 1226, 1226, 1226,  209, 1226,  209,
     1226,  209, 1226, 1226,  209, 1226,  209, 1226,  209, 1226,

     1208, 1226,  209, 1226,  209, 1226,  209,  209,  209,  209,
      209,  209,  209, 1226,  209, 1226, 1226,  209, 1226,  209,
     1226,  209,  209, 1226, 1226, 1226,  209,  209,  209, 1226,
     1226, 1226, 1226, 1226,  209, 1226, 1226,  209, 1226,  209,
      209, 1226,  209, 1226,  209, 1226, 1210, 1226, 1226,  209,
      209, 1226,  209, 1226, 1226,  209,  209,  209,  209, 1226,
      209, 1226, 1226, 1226, 1226,  209, 1226,  209,  209, 1226,
     1226, 1226,  209,  209,  209, 1226, 1210, 1226, 1226,  209,
      209, 1226, 1226,  209, 1226,  209,  209,  209, 1226, 1226,
      209, 1226,  209,  209, 1226,  209, 1226,  209,  209, 1226,

     1226, 1226,  209,  209,  209,  209, 1226, 1226, 1226,  209,
      209,  209, 1226,  209, 1226, 1226, 1214,  209, 1226, 1226,
      209, 1226,  209,  209,  209, 1226, 1226,  209, 1226,  209,
      209, 1226,  209, 1226,  209,  209, 1226, 1226, 1226,  209,
      209,  209,  209, 1226, 1226, 1226, 1214,  209,  209, 1226,
      209, 1216, 1226,  209,  209, 1226, 1226,  209, 1226,  209,
      209,  209, 1226, 1226,  209, 1226,  209,  209, 1226,  209,
     1226, 1219,  209, 1226, 1226, 1226,  209,  209,  209, 1226,
      209, 1216, 1226,  209, 1226, 1226, 1226,  209,  209, 1226,
     1226,  209, 1226,  209,  209, 1226,  209,  209, 1226,  209,

     1226, 1219, 1226,  209, 1226, 1226,  209,  209, 1226, 1226,
      209, 1226,  209,  209, 1226, 1226, 1226, 1226,  209, 1226,
     1226, 1226,  209,  209,  209, 1226, 1226, 1226, 1226,  209,
     1226, 1226, 1226,  209, 1226, 1226, 1226,  209, 1226, 1226,
     1226, 1226,  209,  209, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226,  209,   83, 1226,   83,   83,   83,   83,   96,
     1226,   96,   96,   96,   96,  107,  107,  107, 1226,  107,
      128, 1226,  128,  128,  128,  128,  151,  151,  151, 1226,
      151,  171,  171,  171,  171,  185,  185,  185, 1226,  185,
      611,  611,  611, 1226,  611,  640,  640,  640,  640,  640,

      640,  688,  688,  688,  688,  688,  688,  779,  779,   83,
     1226,   83,   83,   83,   83,   96, 1226,   96,   96,   96,
       96,  128, 1226,  128,  128,  128,  128,  171,  171,  171,
      171,    3, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,

     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226
    } ;

static yyconst flex_int16_t yy_chk[18961] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    5,   10,
     1234,    5,    9,   69,   69,   69, 1221,   69, 1220,   10,
     1218,   10,   10,   10,   10,   10,   10,   10,   10,   10,
       10,   10,   10,   10,   10,   10,   10,   10,   14,   14,
       14,   14,   51,   51,   51,   51,   77,   77,   77,   17,
       14,   17,   17,   17,   17,   17,   17,   17,   17,   71,
       71,   71,   71,   71,   71,   71,   19,    9,   19,   19,
       19,   19,   19,   19,   19,   19,   20,   20,   20,   20,

       20,   20,   20,   20,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   80, 1177,   51,   80,    9,   89,   89,   89,   89,
       89,   89,   89, 1018, 1161,    9, 1018,    9,    9,    9,
        9,    9,    9,    9,    9,    9,    9,    9,    9,    9,
        9,    9,    9,    9,   11,   11,   11,   11,   11,   11,
       11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
     1160, 1159,   11,   11, 1158,   11,   11,   11,   11,   11,
       11,   11,   11, 1143,   11,   11,   11,   13,   22, 1116,
       22,   22,   22,   22,   22,   22,   22,   22, 1115, 1173,

       32,  116,  116,  116,   32,  116, 1174, 1114,   32,   22,
     1179,   32,   36,   32,   32, 1194,   32,  124,  124,  124,
       36, 1113, 1195,   32, 1196,   36,   36, 1198,   36, 1173,
       32,  168,  168,  168,   32,   36, 1174,   13,   32,   22,
     1179,   32,   36,   32,   32, 1194,   32,  160,  160,  160,
       36,  160, 1195,   32, 1196,   36,   36, 1198,   36,   95,
       95,   95,   95,   95,   95,   36, 1020,   67,   67,   67,
       67,   67,   67,   67,   67,   13,   67,   67,   67,   67,
     1019,   67,   67,   67, 1017,   13,  932,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,

       13,   13,   13,   13,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
      914,  875,   23,   23, 1205,   23,   23,   23,   23,   23,
       23,   23,   23, 1206,   23,   23,   23,   25,   25,   33,
      194,  194,  194,   33,  194,  827,  779,   33,  141,  141,
      141,  141,   33,   33, 1205,   33, 1207,   34,  573,  469,
      141, 1209,   33, 1206, 1212,   34,  202,  202,  202,   33,
       34,   34,  452,   33,  235,  235,  235,   33,  417,   34,
       34, 1213,   33,   33,  388,   33, 1207,   34,  363,  363,
      363, 1209,   33,  352, 1212,   34,  429,  429,  429,  335,

       34,   34,  480,  480,  480,   25,  628,  628,  628,   34,
       34, 1213,  620,  620,  620,   25,  620,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
      326,  223,   28,   28,  205,   28,   28,   28,   28,   28,
       28,   28,   28,  129,   28,   28,   28,   30,   30,   84,
       30,   30,   30,   30,   30,   30,   30,   30,   30,  106,
      106,  106,  106,  106,  106,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,

       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
      887,  887,  887,   59,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
      296,  296,  296,  296,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       54,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   35,   30,   30,   30,   31,   31, 1222,
       31,   35, 1223, 1224,   35,   31,   35,   35,   31,   35,
       31,   31,   53,   27,   31,   12,   35,   31,    8,    7,

       31,  296,    3,   35,    0,    0,    0,   31,   31, 1222,
       31,   35, 1223, 1224,   35,   31,   35,   35,   31,   35,
       31,   31,    0,   37,   31,    0,   35,   31,    0,    0,
       31,   37,    0,    0,   38,    0,   37,   37,    0,   38,
        0,    0,   38,    0,    0,    0,   37,   38,   38,    0,
       38,   38,    0,   37,  848,  848,  848,   38,  848,    0,
       39,   37,    0,    0,   38,    0,   37,   37,   39,   38,
        0,    0,   38,   39,   39,    0,   37,   38,   38,    0,
       38,   38,    0,   39,    0,    0,   40,   38,   40,    0,
       39,    0,    0,    0,   40,    0,    0,    0,   39,   40,

       40,   85,    0,   39,   39,    0,   85,    0,    0,   40,
        0,    0,    0,   39,    0,    0,   40,    0,   40,   41,
        0,    0,   41,   41,   40,    0,    0,   41,    0,   40,
       40,    0,   41,   41,    0,    0,    0,   42,    0,   40,
        0,    0,   41,    0,    0,   42,    0,    0,    0,   41,
       42,   42,   41,   41,    0,    0,   85,   41,    0,    0,
       42,   85,   41,   41,    0,   85,    0,   42,    0,   43,
        0,    0,   41,   85,   43,   42,   85,   43,   85,    0,
       42,   42,   43,   43,   43,   43,    0,   44,    0,    0,
       42,    0,   43,    0,    0,   44,    0,    0,    0,   43,

       44,   44,    0,   44,   43,    0,    0,   43,    0,    0,
       44,    0,   43,   43,   43,   43,    0,   44,    0,    0,
        0,    0,   43,    0,   45,   44,    0,    0,   45,    0,
       44,   44,   45,   44,    0,    0,    0,   45,   45,    0,
       44,    0,   46,    0,    0,    0,   46,   45,    0,   46,
       46,    0,    0,    0,   45,   46,   46,    0,   45,    0,
       46,   46,   45,    0,    0,   46,    0,   45,   45,    0,
       47,    0,   46,    0,    0,    0,   46,   45,   47,   46,
       46,    0,    0,   47,   47,   46,   46,    0,    0,    0,
       46,   46,    0,   47,    0,   46,    0,    0,   49,    0,

       47,    0,   48,    0,   48,   49,   49,    0,   47,    0,
       48,   49,   49,   47,   47,   48,   48,    0,   48,   48,
        0,   49,    0,   47,    0,   48,    0,    0,   49,    0,
        0,    0,   48,    0,   48,   49,   49,    0,    0,   50,
       48,   49,   49,   50,    0,   48,   48,   50,   48,   48,
        0,   49,   50,   50,    0,   48,  140,  140,  140,  140,
      140,  140,   50,  183,  183,  183,  183,  183,  183,   50,
        0,    0,    0,   50,    0,    0,   57,   50,    0,    0,
       56,    0,   50,   50,   57,    0,    0,    0,   56,   57,
       57,   56,   50,   56,   56,    0,   56,    0,    0,   57,

        0,    0,    0,   56,    0,    0,   57,    0,    0,    0,
       56,    0,    0,    0,   57,    0,    0,    0,   56,   57,
       57,   56,   57,   56,   56,    0,   56,    0,    0,   57,
        0,    0,    0,   56,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,   63,   63,   63,   63,   63,   63,   63,   63,   63,
       63,   63,   63,   63,   63,   63,   63,   63,   64,   64,
       64,   64,   64,   64,   64,   64,   64,   64,   64,   64,
       64,   64,   64,   64,   64,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,

       65,   65,   66,   66,   66,   66,   66,   66,   66,   66,
       66,   66,   66,   66,   66,   66,   66,   66,   66,   68,
       68,   68,   68,   68,   68,   68,   68,   68,   68,   68,
       68,   68,   68,   68,   68,   68,   70,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,   70,   70,   70,
       70,   70,   70,   72,   72,   72,   72,   72,   72,   72,
       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   74,   74,   74,
       74,   74,   74,   74,   74,   74,   74,   74,   74,   74,

       74,   74,   74,   74,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   76,   76,   76,   76,   76,   76,   76,   76,   76,
       76,   78,   78,   78,   78,   78,   78,   78,   78,   78,
       78,   79,   79,   79,   79,   79,   79,   79,   79,   79,
       79,   79,   79,   79,   79,   79,   79,   79,   83,   86,
       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
       86,   86,   86,   86,   86,   87,   87,   87,   87,   87,
       87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
       88,   88,   88,   88,   88,   88,   88,   88,   88,   88,

       88,   88,   88,   88,   88,   88,   88,  320,  320,  320,
      320,  320,    0,   83,   90,   90,   90,   90,   90,   90,
       90,   90,   90,   90,   90,   90,   90,   90,   90,   90,
       90,   91,   91,   91,   91,   91,   91,   91,   91,   91,
       91,   93,   93,   93,   93,   93,   93,   93,   93,   93,
       93,   83,  100,  100,  100,  100,  100,  100,  100,    0,
        0,   83,    0,   83,   83,   83,   83,   83,   83,   83,
       83,   83,   83,   83,   83,   83,   83,   83,   83,   83,
       92,   92,   92,   92,   92,   92,   92,   92,   92,   92,
       92,   92,   92,   92,   92,   92,   92,   94,   94,   94,

       94,   94,   94,   94,   94,   94,   94,   94,   94,   94,
       94,   94,   94,   94,   96,  118,  118,  118,  118,  118,
      118,  118,    0,    0,   96,    0,   96,   96,   96,   96,
       96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,   96,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   98,   99,   99,   99,   99,   99,   99,
       99,   99,   99,   99,   99,   99,   99,   99,   99,   99,
       99,  101,  101,  101,  101,  101,  101,  101,  101,  101,

      101,  101,  101,  101,  101,  101,  101,  101,  102,  102,
      102,  102,  102,  102,  102,  102,  102,  102,  103,  103,
      103,  103,  103,  103,  103,  103,  103,  103,  103,  103,
      103,  103,  103,  103,  103,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  105,  105,  105,  105,  105,
      105,  105,  105,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  107,  107,  107,  107,  107,  107,  107,  107,
      134,  134,  134,  134,  134,  134,  134,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,

      107,  107,    0,    0,    0,    0,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,    0,    0,    0,    0,  107,  107,  107,  107,
      107,  107,  107,  107,  107,  107,  107,  107,  107,  107,
      107,  107,    0,  107,  107,  107,    0,  107,  107,  107,
      107,  107,  107,  107,  107,    0,  107,  107,  107,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  109,  109,  109,  109,
      109,  109,  109,  109,  109,  109,  109,  109,  109,  109,

      109,  109,  109,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  112,  112,  112,
      112,  112,  112,  112,  112,  112,  112,  112,  112,  112,
      112,  112,  112,  112,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  114,  114,  114,  114,  114,  114,  114,  114,    0,
      114,  114,  114,  114,    0,  114,  114,  114,  115,  115,
      115,  115,  115,  115,  115,  115,  115,  115,  115,  115,

      115,  115,  115,  115,  115,  117,  117,  117,  117,  117,
      117,  117,  117,  117,  117,  117,  117,  117,  117,  117,
      117,  117,  119,  119,  119,  119,  119,  119,  119,  119,
      119,  119,  119,  119,  119,  119,  119,  119,  119,  120,
      120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
      120,  120,  120,  120,  120,  120,  121,  121,  121,  121,
      121,  121,  121,  121,  121,  121,  121,  121,  121,  121,
      121,  121,  121,  122,  122,  122,  122,  122,  122,  122,
      122,  122,  122,  122,  122,  122,  122,  122,  122,  122,
      123,  123,  123,  123,  123,  123,  123,  123,  123,  123,

      125,  125,  125,  125,  125,  125,  125,  125,  125,  125,
      126,  126,  126,  126,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,  126,  128,  130,    0,
        0,    0,    0,  130,  131,  131,  131,  131,  131,  131,
      131,  131,  131,  131,  131,  131,  131,  131,  131,  131,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  132,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,    0,    0,  128,  382,  382,
      382,  382,  382,  130,    0,    0,    0,    0,  130,    0,
        0,    0,  130,  162,  162,  162,  162,  162,  162,  162,

      130,    0,    0,  130,    0,  130,  143,  143,  143,  143,
      143,  143,  143,  143,    0,  128,  145,  145,  145,  145,
      145,  145,  145,  145,    0,  128,    0,  128,  128,  128,
      128,  128,  128,  128,  128,  128,  128,  128,  128,  128,
      128,  128,  128,  128,  133,  133,  133,  133,  133,  133,
      133,  133,  133,  133,  133,  133,  133,  133,  133,  133,
      133,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  137,  137,
      137,  137,  137,  137,  137,  137,  137,  137,  137,  137,
      137,  137,  137,  137,  137,  138,  138,  138,  138,  138,

      138,  138,  138,  138,  138,  139,  139,  139,  139,  139,
      139,  139,  139,  139,  139,  139,  139,  139,  139,  139,
      139,  139,  144,    0,  144,  144,  144,  144,  144,  144,
      144,  144,  146,    0,  146,  146,  146,  146,  146,  146,
      146,  146,    0,  144,  147,  147,  147,  147,  147,  147,
      147,  147,    0,  146,    0,  148,  148,  148,  148,  148,
      148,  148,  148,  147,  177,  177,  177,  177,  177,  177,
      177,    0,    0,  144,  148,  196,  196,  196,  196,  196,
      196,  196,  149,  146,  149,  149,  149,  149,  149,  149,
      149,  149,    0,  147,  448,  448,  448,  448,  448,    0,

      150,    0,  150,  149,  148,  150,  150,  150,  150,  150,
      150,  150,  150,  152,  152,  152,  152,  152,  152,  152,
      152,  152,  152,  152,  152,  152,  152,  152,  152,  152,
        0,    0,    0,  149,  151,  151,    0,  151,  151,  151,
      151,  151,  151,  151,  151,  229,  229,  229,  229,  229,
      229,  229,  151,  151,  151,  151,  151,  151,  151,  151,
      151,  151,  151,  151,  151,  151,  151,  151,  151,  151,
      151,  151,  151,  151,  151,  151,  151,    0,    0,    0,
        0,  151,  151,  151,  151,  151,  151,  151,  151,  151,
      151,  151,  151,  151,  151,  151,  151,  151,  151,  151,

      151,  151,  151,  151,  151,  151,  151,    0,    0,    0,
        0,  151,  151,  151,  151,  151,  151,  151,  151,  151,
      151,  151,  151,  151,  151,  151,  151,    0,  151,  151,
      151,  151,  151,  151,  151,  151,  151,  151,  151,  151,
        0,  151,  151,  151,  153,  153,  153,  153,  153,  153,
      153,  153,  153,  153,  153,  153,  153,  153,  153,  153,
      153,  154,  154,  154,  154,  154,  154,  154,  154,  154,
      154,  154,  154,  154,  154,  154,  154,  154,  155,  155,
      155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
      155,  155,  155,  155,  155,  156,  156,  156,  156,  156,

      156,  156,  156,  156,  156,  156,  156,  156,  156,  156,
      156,  156,  157,  157,  157,  157,  157,  157,  157,  157,
      157,  157,  157,  157,  157,  157,  157,  157,  157,  158,
      158,  158,  158,  158,  158,  158,  158,    0,  158,  158,
      158,  158,    0,  158,  158,  158,  159,  159,  159,  159,
      159,  159,  159,  159,  159,  159,  159,  159,  159,  159,
      159,  159,  159,  161,  161,  161,  161,  161,  161,  161,
      161,  161,  161,  161,  161,  161,  161,  161,  161,  161,
      163,  163,  163,  163,  163,  163,  163,  163,  163,  163,
      163,  163,  163,  163,  163,  163,  163,  164,  164,  164,

      164,  164,  164,  164,  164,  164,  164,  164,  164,  164,
      164,  164,  164,  164,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  166,  166,  166,  166,  166,  166,  166,  166,  166,
      166,  166,  166,  166,  166,  166,  166,  166,  167,  167,
      167,  167,  167,  167,  167,  167,  167,  167,  169,  169,
      169,  169,  169,  169,  169,  169,  169,  169,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  171,  174,  174,  174,  174,
      174,  174,  174,  174,  174,  174,  174,  174,  174,  174,

      174,  174,  175,  175,  175,  175,  175,  175,  175,  175,
      175,  175,  175,  175,  175,  175,  175,  176,  176,  176,
      176,  176,  176,  176,  176,  176,  176,  176,  176,  176,
      176,  176,  176,  176,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,    0,  171,  357,  357,  357,  357,  357,  357,  357,
        0,    0,  171,    0,  171,  171,  171,  171,  171,  171,
      171,  171,  171,  171,  171,  171,  171,  171,  171,  171,
      171,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  180,  180,  180,  180,  180,  180,  180,  180,  180,

      180,  180,  180,  180,  180,  180,  180,  180,  181,  181,
      181,  181,  181,  181,  181,  181,  181,  181,  182,  182,
      182,  182,  182,  182,  182,  182,  182,  182,  182,  182,
      182,  182,  182,  182,  182,  185,  185,  185,  185,  185,
      185,  185,  185,  423,  423,  423,  423,  423,  423,  423,
      185,  185,  185,  185,  185,  185,  185,  185,  185,  185,
      185,  185,  185,  185,  185,  185,  185,  185,  185,  185,
      185,  185,  185,  185,  185,    0,    0,    0,    0,  185,
      185,  185,  185,  185,  185,  185,  185,  185,  185,  185,
      185,  185,  185,  185,  185,  185,  185,  185,  185,  185,

      185,  185,  185,  185,  185,    0,    0,    0,    0,  185,
      185,  185,  185,  185,  185,  185,  185,  185,  185,  185,
      185,  185,  185,  185,  185,    0,  185,  185,  185,    0,
      185,  185,  185,  185,  185,  185,  185,  185,    0,  185,
      185,  185,  186,  186,  186,  186,  186,  186,  186,  186,
      186,  186,  186,  186,  186,  186,  186,  186,  186,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  188,  188,  188,  188,
      188,  188,  188,  188,  188,  188,  188,  188,  188,  188,
      188,  188,  188,  189,  189,  189,  189,  189,  189,  189,

      189,  189,  189,  189,  189,  189,  189,  189,  189,  189,
      190,  190,  190,  190,  190,  190,  190,  190,  190,  190,
      190,  190,  190,  190,  190,  190,  190,  191,  191,  191,
      191,  191,  191,  191,  191,  191,  191,  191,  191,  191,
      191,  191,  191,  191,  192,  192,  192,  192,  192,  192,
      192,  192,    0,  192,  192,  192,  192,    0,  192,  192,
      192,  193,  193,  193,  193,  193,  193,  193,  193,  193,
      193,  193,  193,  193,  193,  193,  193,  193,  195,  195,
      195,  195,  195,  195,  195,  195,  195,  195,  195,  195,
      195,  195,  195,  195,  195,  197,  197,  197,  197,  197,

      197,  197,  197,  197,  197,  197,  197,  197,  197,  197,
      197,  197,  198,  198,  198,  198,  198,  198,  198,  198,
      198,  198,  198,  198,  198,  198,  198,  198,  198,  199,
      199,  199,  199,  199,  199,  199,  199,  199,  199,  199,
      199,  199,  199,  199,  199,  199,  200,  200,  200,  200,
      200,  200,  200,  200,  200,  200,  200,  200,  200,  200,
      200,  200,  200,  201,  201,  201,  201,  201,  201,  201,
      201,  201,  201,  203,  203,  203,  203,  203,  203,  203,
      203,  203,  203,  204,  204,  204,  204,  204,  204,  204,
      204,  204,  204,  204,  204,  204,  204,  204,  204,  204,

      206,    0,    0,    0,  207,    0,    0,    0,  206,    0,
      249,  207,  249,  206,  206,    0,    0,    0,    0,  207,
      249,    0,  249,  206,  207,  207,  249,    0,    0,  249,
      206,    0,    0,    0,  207,    0,    0,    0,  206,    0,
      249,  207,  249,  206,  206,    0,    0,    0,    0,  207,
      249,    0,  249,  206,  207,  207,  249,    0,  642,  249,
        0,    0,    0,  642,  207,  208,  208,  208,  208,  208,
      208,  208,  208,  208,  208,  208,  208,  208,  208,  208,
      208,    0,    0,  208,  208,    0,  208,  208,  208,  208,
      208,  208,  208,  208,  209,  208,  208,  208,  210,    0,

        0,    0,  209,    0,    0,    0,  210,  209,  209,    0,
        0,  210,  210,  642,    0,  210,    0,  209,  642,    0,
        0,  210,  642,    0,  209,    0,  211,    0,  210,  211,
      642,    0,  209,  642,  211,  642,  210,  209,  209,  211,
      211,  210,  210,    0,  212,  210,    0,  209,    0,  211,
        0,  210,  212,    0,    0,  212,  211,  212,  212,  211,
        0,    0,    0,  213,  211,    0,    0,  212,    0,  211,
      211,  213,    0,    0,  212,    0,  213,  213,    0,  211,
        0,  214,  212,  214,    0,  212,  213,  212,  212,  214,
        0,  214,    0,  213,  214,  214,    0,  212,    0,    0,

        0,  213,    0,    0,  214,    0,  213,  213,    0,  215,
        0,  214,    0,  214,    0,  215,  213,  215,    0,  214,
        0,  214,  215,  215,  214,  214,  499,  499,  499,  499,
      499,    0,  215,    0,  214,    0,    0,    0,    0,  215,
      529,  529,  529,  529,  529,  215,    0,  215,    0,  398,
        0,  398,  215,  215,  398,  398,  398,  398,  398,  398,
      398,  398,  215,  216,  216,  216,  216,  216,  216,  216,
      216,  216,  216,  216,  216,  216,  216,  216,  216,  216,
      217,  217,  217,  217,  217,  217,  217,  217,  217,  217,
      217,  217,  217,  217,  217,  217,  217,  218,  218,  218,

      218,  218,  218,  218,  218,  218,  218,  218,  218,  218,
      218,  218,  218,  218,  219,  219,  219,  219,  219,  219,
      219,  219,  219,  219,  219,  219,  219,  219,  219,  219,
      219,  220,  220,  220,  220,  220,  220,  220,  220,  220,
      220,  220,  220,  220,  220,  220,  220,  220,  221,  221,
      221,  221,  221,  221,  221,  221,  221,  221,  221,  221,
      221,  221,  221,  221,  221,  222,  222,  222,  222,  222,
      222,  222,  222,  222,  222,  222,  222,  222,  222,  222,
      222,  222,  224,  224,  224,  224,  224,  224,  224,  224,
        0,  224,  224,  224,  224,    0,  224,  224,  224,  225,

      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  226,  226,  226,  226,
      226,  226,  226,  226,  226,  226,  226,  226,  226,  226,
      226,  226,  226,  227,  227,  227,  227,  227,  227,  227,
      227,  227,  227,  227,  227,  227,  227,  227,  227,  227,
      228,  228,  228,  228,  228,  228,  228,  228,  228,  228,
      228,  228,  228,  228,  228,  228,  228,  230,  230,  230,
      230,  230,  230,  230,  230,  230,  230,  230,  230,  230,
      230,  230,  230,  230,  231,  231,  231,  231,  231,  231,
      231,  231,  231,  231,  231,  231,  231,  231,  231,  231,

      231,  232,  232,  232,  232,  232,  232,  232,  232,  232,
      232,  232,  232,  232,  232,  232,  232,  232,  233,  233,
      233,  233,  233,  233,  233,  233,  233,  233,  233,  233,
      233,  233,  233,  233,  233,  234,  234,  234,  234,  234,
      234,  234,  234,  234,  234,  236,  236,  236,  236,  236,
      236,  236,  236,  236,  236,  237,  237,  237,  237,  237,
      237,  237,  237,  237,  237,  237,  237,  237,  237,  237,
      237,  237,  238,    0,  239,  678,  678,  678,  678,  678,
      238,    0,  239,    0,    0,  238,  238,  239,  239,  238,
      738,  738,  738,  738,  738,  238,    0,  239,    0,    0,

      240,    0,  238,    0,  239,    0,    0,    0,  240,    0,
      238,    0,  239,  240,  240,  238,  238,  239,  239,  238,
        0,    0,    0,  240,    0,  238,  241,  239,  242,    0,
      240,    0,    0,    0,  241,    0,  242,    0,  240,  241,
      241,  242,  242,  240,  240,  241,    0,    0,    0,  241,
        0,  242,    0,  240,  243,    0,  241,    0,  242,    0,
        0,    0,  243,    0,  241,    0,  242,  243,  243,  241,
      241,  242,  242,    0,    0,  241,    0,  243,    0,  241,
        0,  242,  244,    0,  243,    0,  244,    0,    0,    0,
      244,    0,  243,    0,    0,  244,  244,  243,  243,    0,

      245,    0,    0,    0,    0,  244,    0,  243,  245,    0,
        0,    0,  244,  245,  245,  245,  244,    0,    0,  245,
      244,    0,    0,  245,    0,  244,  244,    0,  246,    0,
      245,    0,  246,    0,    0,  244,  246,    0,  245,    0,
        0,  246,  246,  245,  245,  245,  247,    0,    0,  245,
        0,  246,    0,  245,  247,    0,    0,    0,  246,  247,
      247,    0,  246,  248,  247,  248,  246,  248,    0,  247,
        0,  246,  246,  248,    0,  248,  247,    0,  250,  248,
        0,  246,  248,    0,  247,    0,  250,    0,    0,  247,
      247,  250,  250,  248,  247,  248,    0,  248,    0,  247,

        0,  250,    0,  248,    0,  248,    0,    0,  250,  248,
        0,  251,  248,  251,  251,  252,  250,    0,    0,  251,
        0,  250,  250,  252,  251,  251,    0,    0,  252,  252,
        0,  250,    0,    0,  251,    0,    0,    0,  252,    0,
        0,  251,    0,  251,  251,  252,    0,    0,  254,  251,
        0,    0,  253,  252,  251,  251,  254,    0,  252,  252,
      253,  254,  254,  253,  251,  253,  253,    0,  252,    0,
        0,  254,    0,    0,    0,  253,    0,    0,  254,    0,
        0,    0,  253,    0,    0,    0,  254,    0,    0,  255,
      253,  254,  254,  253,    0,  253,  253,  255,    0,    0,

      256,  254,  255,  255,    0,  253,    0,    0,  256,    0,
        0,    0,  255,  256,  256,    0,    0,    0,    0,  255,
        0,    0,    0,  256,    0,    0,  257,  255,    0,    0,
      256,    0,  255,  255,  257,    0,    0,    0,  256,  257,
      257,    0,  255,  256,  256,    0,  257,    0,    0,  257,
        0,    0,  258,  256,  259,    0,  257,    0,    0,    0,
      258,    0,  259,    0,  257,  258,  258,  259,  259,  257,
      257,  258,    0,    0,    0,  258,  257,  259,    0,  257,
        0,    0,  258,    0,  259,    0,  260,    0,    0,    0,
      258,    0,  259,    0,  260,  258,  258,  259,  259,  260,

      260,  258,    0,  260,  260,  258,    0,  259,    0,  260,
        0,    0,  261,    0,  263,    0,  260,    0,    0,    0,
      261,    0,  263,    0,  260,  261,  261,  263,  263,  260,
      260,    0,    0,  260,  260,  261,    0,  263,    0,  260,
      262,  262,  261,    0,  263,    0,    0,    0,  262,    0,
      261,  262,  263,  262,  262,  261,  261,  263,  263,  262,
        0,    0,    0,  262,    0,  261,    0,  263,    0,    0,
      262,  262,  264,  769,  769,  769,  769,  769,  262,    0,
      264,  262,    0,  262,  262,  264,  264,    0,    0,  262,
        0,  265,    0,  262,    0,  264,    0,    0,    0,  265,

        0,    0,  264,  265,  265,  265,    0,    0,    0,  266,
      264,    0,    0,    0,  265,  264,  264,  266,    0,    0,
        0,  265,  266,  266,    0,  264,    0,    0,  267,  265,
        0,  268,  266,  265,  265,  265,  267,    0,    0,  266,
        0,  267,  267,    0,  265,    0,    0,  266,    0,    0,
      267,  267,  266,  266,    0,  268,    0,    0,  267,    0,
        0,    0,  266,  268,    0,    0,  267,    0,  268,  268,
        0,  267,  267,    0,  269,    0,    0,    0,  268,    0,
      267,  267,  269,    0,    0,  268,  269,  269,  269,    0,
        0,    0,  270,  268,    0,    0,    0,  269,  268,  268,

      270,    0,    0,    0,  269,  270,  270,    0,  268,    0,
        0,  271,  269,    0,    0,  270,  269,  269,  269,  271,
        0,    0,  270,    0,  271,  271,    0,  269,    0,    0,
      270,  271,    0,    0,  271,  270,  270,    0,    0,  272,
        0,  271,    0,    0,    0,  270,    0,  272,    0,  271,
        0,  272,  272,  272,  271,  271,    0,  273,    0,    0,
        0,  271,  272,    0,  271,  273,    0,    0,    0,  272,
      273,  273,    0,    0,    0,  273,    0,  272,  273,    0,
      273,  272,  272,  272,    0,    0,    0,  273,    0,  274,
        0,    0,  272,    0,  274,  273,    0,  274,    0,    0,

      273,  273,  274,  274,    0,  273,    0,  275,  273,    0,
      273,    0,  274,    0,    0,  275,    0,    0,    0,  274,
      275,  275,    0,    0,  274,  275,  276,  274,    0,  276,
      275,    0,  274,  274,  276,    0,    0,  275,    0,  276,
      276,    0,  274,    0,  277,  275,    0,    0,  277,  276,
      275,  275,  277,    0,    0,  275,  276,  277,  277,  276,
      275,    0,    0,  278,  276,    0,    0,  277,    0,  276,
      276,  278,    0,    0,  277,    0,  278,  278,  277,  276,
        0,    0,  277,    0,    0,    0,  278,  277,  277,    0,
        0,    0,    0,  278,    0,    0,  279,  277,    0,  279,

        0,  278,  279,    0,  279,    0,  278,  278,    0,  279,
      279,    0,    0,    0,  280,    0,  278,    0,    0,  279,
        0,    0,  280,    0,    0,    0,  279,  280,  280,  279,
        0,    0,  279,  280,  279,    0,    0,  280,    0,  279,
      279,    0,  281,    0,  280,    0,    0,    0,    0,  279,
      281,    0,  280,    0,  281,  281,  281,  280,  280,    0,
      282,    0,  282,  280,    0,  281,    0,  280,  282,    0,
        0,  282,  281,  282,  282,  282,  282,    0,    0,    0,
      281,    0,    0,  282,  281,  281,  281,    0,    0,    0,
      282,    0,  282,    0,  283,  281,    0,    0,  282,    0,

        0,  282,  283,  282,  282,  282,  282,  283,  283,    0,
        0,    0,  284,  282,    0,    0,    0,  283,    0,    0,
      284,    0,    0,  284,  283,  284,  284,  906,  906,  906,
      906,  906,  283,    0,    0,  284,    0,  283,  283,    0,
        0,    0,  284,    0,  285,    0,    0,  283,    0,    0,
      284,    0,  285,  284,    0,  284,  284,  285,  285,    0,
      285,    0,    0,  286,  286,  284,    0,  285,    0,    0,
        0,  286,    0,    0,  285,  286,  286,  286, 1145, 1145,
     1145, 1145,  285,    0,    0,    0,  286,  285,  285,    0,
      285,    0,    0,  286,  286,    0,  287,  285,    0,    0,

        0,  286,    0,    0,  287,  286,  286,  286,  287,  287,
      287,    0,    0,    0,  288, 1145,  286,    0,    0,  287,
        0,    0,  288,    0,    0,    0,  287,  288,  288,    0,
        0,    0,    0,  289,  287,    0,    0,  288,  287,  287,
      287,  289,    0,    0,  288, 1145,  289,  289,    0,  287,
        0,  290,  288,    0,  290,    0,  289,  288,  288,  290,
        0,    0,    0,  289,  290,  290,    0,  288,    0,    0,
        0,  289,    0,    0,  290,    0,  289,  289,    0,  291,
        0,  290,    0,  292,  290,    0,  289,  291,    0,  290,
        0,  292,  291,  291,  290,  290,  292,  292, 1140, 1140,

     1140, 1140,  291,    0,  290,    0,  292,    0,    0,  291,
        0,  293,    0,  292,    0,  293,    0,  291,    0,  293,
        0,  292,  291,  291,  293,  293,  292,  292,    0,  294,
        0,    0,  291,    0,  293, 1140,  292,  294,    0,    0,
        0,  293,  294,  294,    0,  293,    0,  294,  295,  293,
        0,    0,  294, 1140,  293,  293,  295,    0,    0,  294,
        0,  295,  295,    0,  293, 1140,    0,  294,    0,    0,
        0,  295,  294,  294,    0,    0,    0,  294,  295,    0,
        0,    0,  294, 1140,    0,    0,  295,    0,  401,    0,
      401,  295,  295,  401,  401,  401,  401,  401,  401,  401,

      401,  295,  299,  299,  299,  299,  299,  299,  299,  299,
      299,  299,  299,  299,  299,  299,  299,  299,    0,    0,
      299,  299,    0,  299,  299,  299,  299,  299,  299,  299,
      299,  300,  299,  299,  299,    0,    0,    0,    0,  300,
        0,    0,    0,  301,  300,  300, 1055, 1055, 1055, 1055,
     1055,  301,    0,    0,  300,    0,  301,  301,    0,    0,
        0,  300,    0,    0,    0,    0,  301,    0,    0,  300,
        0,    0,  300,  301,  300,  300,    0,  303,    0,    0,
      304,  301,    0,    0,  300,  303,  301,  301,  304,    0,
      303,  303,  301,  304,  304,    0,  301,    0,    0,    0,

      303,    0,    0,  304,    0,    0,    0,  303,    0,    0,
      304,    0,    0,    0,  305,  303,    0,    0,  304,    0,
      303,  303,  305,  304,  304,    0,  306,  305,  305,    0,
      303,    0,    0,  304,  306,    0,    0,  305,    0,  306,
      306,    0,    0,    0,  305,    0,    0,    0,    0,  306,
        0,    0,  305,    0,    0,    0,  306,  305,  305,    0,
      307,    0,    0,  308,  306,    0,    0,  305,  307,  306,
      306,  308,    0,  307,  307,    0,  308,  308,    0,  306,
        0,    0,    0,  307,    0,    0,  308,    0,    0,    0,
      307,    0,    0,  308,    0,    0,    0,  309,  307,    0,

        0,  308,    0,  307,  307,  309,  308,  308,    0,    0,
      309,  309,    0,  307,    0,    0,  308,    0,    0,    0,
      309,  652,  652,  652,  652,  652,  652,  309,  474,  474,
      474,  474,  474,  474,  474,  309,    0,  402,    0,  402,
      309,  309,  402,  402,  402,  402,  402,  402,  402,  402,
      309,  310,  310,  310,  310,  310,  310,  310,  310,  310,
      310,  310,  310,  310,  310,  310,  310,  310,  311,  311,
      311,  311,  311,  311,  311,  311,  311,  311,  311,  311,
      311,  311,  311,  311,  311,  312,  312,  312,  312,  312,
      312,  312,  312,  312,  312,  312,  312,  312,  312,  312,

      312,  312,  313,  313,  313,  313,  313,  313,  313,  313,
      313,  313,  313,  313,  313,  313,  313,  313,  313,  314,
      314,  314,  314,  314,  314,  314,  314,  314,  314,  314,
      314,  314,  314,  314,  314,  314,  315,  315,  315,  315,
      315,  315,  315,  315,  315,  315,  315,  315,  315,  315,
      315,  315,  315,  316,  316,  316,  316,  316,  316,  316,
      316,  316,  316,  316,  316,  316,  316,  316,  316,  316,
      317,  317,  317,  317,  317,  317,  317,  317,  317,  317,
      317,  317,  317,  317,  317,  317,  317,  318,  318,  318,
      318,  318,  318,  318,  318,  318,  318,  318,  318,  318,

      318,  318,  318,  318,  319,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319,  319,  319,  319,
      319,  321,  321,  321,  321,  321,  321,  321,  321,  321,
      321,  321,  321,  321,  321,  321,  321,  321,  322,  322,
      322,  322,  322,  322,  322,  322,  322,  322,  322,  322,
      322,  322,  322,  322,  322,  324,  325,  325,  325,  325,
      325,  325,  325,  325,  325,  325,  325,  325,  325,  325,
      325,  325,  325,  327,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
      328,  328,  328,  328,  328,  328,  328,  328,  328,  328,

      328,  328,  328,  328,  328,  328,  328,    0,    0,    0,
      324,  329,  329,  329,  329,  329,  329,  329,  329,  329,
      329,  329,  329,  329,  329,  329,  329,  329,  330,  330,
      330,  330,  330,  330,  330,  330,  330,  330,  330,  330,
      330,  330,  330,  330,  330,  404,    0,  404,  324,    0,
      404,  404,  404,  404,  404,  404,  404,  404,  324,    0,
      324,  324,  324,  324,  324,  324,  324,  324,  324,  324,
      324,  324,  324,  324,  324,  324,  324,  331,  331,  331,
      331,  331,  331,  331,  331,  331,  331,  331,  331,  331,
      331,  331,  331,  331,  332,  332,  332,  332,  332,  332,

      332,  332,  332,  332,  332,  332,  332,  332,  332,  332,
      332,  333,  333,  333,  333,  333,  333,  333,  333,  333,
      333,  333,  333,  333,  333,  333,  333,  333,  334,  334,
      334,  334,  334,  334,  334,  334,  334,  334,  334,  334,
      334,  334,  334,  334,  334,  336,  336,  336,  336,  336,
      336,  336,  336,  336,  336,  336,  336,  336,  336,  336,
      336,  336,  337,  337,  337,  337,  337,  337,  337,  337,
      337,  337,  337,  337,  337,  337,  337,  337,  337,  338,
      338,  338,  338,  338,  338,  338,  338,  338,  338,  338,
      338,  338,  338,  338,  338,  338,  339,  339,  339,  339,

      339,  339,  339,  339,  339,  339,  339,  339,  339,  339,
      339,  339,  339,  340,  340,  340,  340,  340,  340,  340,
      340,  340,  340,  340,  340,  340,  340,  340,  340,  340,
      341,  341,  341,  341,  341,  341,  341,  341,  341,  341,
      341,  341,  341,  341,  341,  341,  341,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  345,  345,  345,  345,  345,  345,
      345,  345,  345,  345,  345,  345,  345,  345,  345,  345,
      345,  346,  346,  346,  346,  346,  346,  346,  346,  346,
      346,  346,  346,  346,  346,  346,  346,  346,  347,  347,

      347,  347,  347,  347,  347,  347,  347,  347,  347,  347,
      347,  347,  347,  347,  347,  348,  348,  348,  348,  348,
      348,  348,  348,  348,  348,  348,  348,  348,  348,  348,
      348,  348,  349,  349,  349,  349,  349,  349,  349,  349,
      349,  349,  349,  349,  349,  349,  349,  349,  349,  350,
      350,  350,  350,  350,  350,  350,  350,  350,  350,  350,
      350,  350,  350,  350,  350,  350,  351,  351,  351,  351,
      351,  351,  351,  351,  351,  351,  351,  351,  351,  351,
      351,  351,  351,  353,  353,  353,  353,  353,  353,  353,
      353,    0,  353,  353,  353,  353,    0,  353,  353,  353,

      354,  354,  354,  354,  354,  354,  354,  354,  354,  354,
      354,  354,  354,  354,  354,  354,  354,  355,  355,  355,
      355,  355,  355,  355,  355,  355,  355,  355,  355,  355,
      355,  355,    0,  355,  356,  356,  356,  356,  356,  356,
      356,  356,  356,  356,  356,  356,  356,  356,  356,  356,
      356,  358,  358,  358,  358,  358,  358,  358,  358,  358,
      358,  358,  358,  358,  358,  358,  358,  358,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,  359,  360,  360,  360,  360,  360,
      360,  360,  360,  360,  360,  360,  360,  360,  360,  360,

      360,  360,  361,  361,  361,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  361,  361,  361,  361,  361,  362,
      362,  362,  362,  362,  362,  362,  362,  362,  362,  364,
      364,  364,  364,  364,  364,  364,  364,  364,  364,  365,
      365,  365,  365,  365,  365,  365,  365,  365,  365,  365,
      365,  365,  365,  365,  365,  365,  372,  372,  372,  372,
      372,  372,  372,  372,  372,  372,  372,  372,  372,  372,
      372,  372,  372,  373,  373,  373,  373,  373,  373,  373,
      373,  373,  373,  373,  373,  373,  373,  373,  373,  373,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,

      374,  374,  374,  374,  374,  374,  374,  375,  375,  375,
      375,  375,  375,  375,  375,  375,  375,  375,  375,  375,
      375,  375,  375,  375,  376,  376,  376,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376,  376,  376,  376,
      376,  377,  377,  377,  377,  377,  377,  377,  377,  377,
      377,  377,  377,  377,  377,  377,  377,  377,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  379,  379,  379,  379,  379,
      379,  379,  379,  379,  379,  379,  379,  379,  379,  379,
      379,  379,  380,  380,  380,  380,  380,  380,  380,  380,

      380,  380,  380,  380,  380,  380,  380,  380,  380,  381,
      381,  381,  381,  381,  381,  381,  381,  381,  381,  381,
      381,  381,  381,  381,  381,  381,  383,  383,  383,  383,
      383,  383,  383,  383,  383,  383,  383,  383,  383,  383,
      383,  383,  383,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      386,  387,  387,  387,  387,  387,  387,  387,  387,  387,
      387,  387,  387,  387,  387,  387,  387,  387,  389,  389,
      389,  389,  389,  389,  389,  389,  389,  389,  389,  389,
      389,  389,  389,  389,  389,  405,  405,  405,  405,  405,

      405,  405,  405,  622,  622,  622,  622,  622,  622,  622,
      386,  390,  390,  390,  390,  390,  390,  390,  390,  390,
      390,  390,  390,  390,  390,  390,  390,  390,  391,  391,
      391,  391,  391,  391,  391,  391,  391,  391,  391,  391,
      391,  391,  391,  391,  391,    0,    0,    0,  386,  406,
      406,  406,  406,  406,  406,  406,  406,    0,  386,    0,
      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  386,  386,  386,  386,  386,  386,  392,  392,  392,
      392,  392,  392,  392,  392,  392,  392,  392,  392,  392,
      392,  392,  392,  392,  393,  393,  393,  393,  393,  393,

      393,  393,  393,  393,  393,  393,  393,  393,  393,  393,
      393,  394,  394,  394,  394,  394,  394,  394,  394,  394,
      394,  394,  394,  394,  394,  394,  394,  394,  395,  395,
      395,  395,  395,  395,  395,  395,  395,  395,  395,  395,
      395,  395,  395,  395,  395,  396,  396,  396,  396,  396,
      396,  396,  396,  397,  397,  397,  397,  397,  397,  397,
      397,    0,    0,    0,  396,  646,  646,  646,  646,  646,
      646,  646,  397,  399,  399,  399,  399,  399,  399,  399,
      399,  400,  400,  400,  400,  400,  400,  400,  400,    0,
        0,    0,  399,    0,  396,    0,    0,    0,    0,    0,

      400,    0,  397,    0,  403,  403,  403,  403,  403,  403,
      403,  403,  428,  428,  428,  428,  428,  428,  428,  428,
      428,  428,  399,  403,  700,  700,  700,  700,  700,  700,
      400,  410,  410,  410,  410,  410,  410,  410,  410,  410,
      410,  410,  410,  410,  410,  410,  410,  410,    0,    0,
        0,    0,    0,  403,  411,  411,  411,  411,  411,  411,
      411,  411,  411,  411,  411,  411,  411,  411,  411,  411,
      411,  412,  412,  412,  412,  412,  412,  412,  412,  412,
      412,  412,  412,  412,  412,  412,  412,  412,  413,  413,
      413,  413,  413,  413,  413,  413,  413,  413,  413,  413,

      413,  413,  413,  413,  413,  414,  414,  414,  414,  414,
      414,  414,  414,  414,  414,  414,  414,  414,  414,  414,
      414,  414,  415,  415,  415,  415,  415,  415,  415,  415,
      415,  415,  415,  415,  415,  415,  415,  415,  415,  416,
      416,  416,  416,  416,  416,  416,  416,  416,  416,  416,
      416,  416,  416,  416,  416,  416,  418,  418,  418,  418,
      418,  418,  418,  418,    0,  418,  418,  418,  418,    0,
      418,  418,  418,  419,  419,  419,  419,  419,  419,  419,
      419,  419,  419,  419,  419,  419,  419,  419,  419,  419,
      420,  420,  420,  420,  420,  420,  420,  420,  420,  420,

      420,  420,  420,  420,  420,  420,  420,  421,  421,  421,
      421,  421,  421,  421,  421,  421,  421,  421,  421,  421,
      421,  421,  421,  421,  422,  422,  422,  422,  422,  422,
      422,  422,  422,  422,  422,  422,  422,  422,  422,  422,
      422,  424,  424,  424,  424,  424,  424,  424,  424,  424,
      424,  424,  424,  424,  424,  424,  424,  424,  425,  425,
      425,  425,  425,  425,  425,  425,  425,  425,  425,  425,
      425,  425,  425,  425,  425,  426,  426,  426,  426,  426,
      426,  426,  426,  426,  426,  426,  426,  426,  426,  426,
      426,  426,  427,  427,  427,  427,  427,  427,  427,  427,

      427,  427,  427,  427,  427,  427,  427,  427,  427,  430,
      430,  430,  430,  430,  430,  430,  430,  430,  430,  431,
      431,  431,  431,  431,  431,  431,  431,  431,  431,  431,
      431,  431,  431,  431,  431,  431,  438,  438,  438,  438,
      438,  438,  438,  438,  438,  438,  438,  438,  438,  438,
      438,  438,  438,  439,  439,  439,  439,  439,  439,  439,
      439,  439,  439,  439,  439,  439,  439,  439,  439,  439,
      440,  440,  440,  440,  440,  440,  440,  440,  440,  440,
      440,  440,  440,  440,  440,  440,  440,  441,  441,  441,
      441,  441,  441,  441,  441,  441,  441,  441,  441,  441,

      441,  441,  441,  441,  442,  442,  442,  442,  442,  442,
      442,  442,  442,  442,  442,  442,  442,  442,  442,  442,
      442,  443,  443,  443,  443,  443,  443,  443,  443,  443,
      443,  443,  443,  443,  443,  443,  443,  443,  444,  444,
      444,  444,  444,  444,  444,  444,  444,  444,  444,  444,
      444,  444,  444,  444,  444,  445,  445,  445,  445,  445,
      445,  445,  445,  445,  445,  445,  445,  445,  445,  445,
      445,  445,  446,  446,  446,  446,  446,  446,  446,  446,
      446,  446,  446,  446,  446,  446,  446,  446,  446,  447,
      447,  447,  447,  447,  447,  447,  447,  447,  447,  447,

      447,  447,  447,  447,  447,  447,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  450,  450,  450,  450,  450,  450,  450,
      450,  450,  450,  450,  450,  450,  450,  450,  450,  450,
      451,  451,  451,  451,  451,  451,  451,  451,  451,  451,
      451,  451,  451,  451,  451,  451,  451,  453,  453,  453,
      453,  453,  453,  453,  453,  453,  453,  453,  453,  453,
      453,  453,  453,  453,  454,  454,  454,  454,  454,  454,
      454,  454,  454,  454,  454,  454,  454,  454,  454,  454,
      454,  455,  455,  455,  455,  455,  455,  455,  455,  455,

      455,  455,  455,  455,  455,  455,  455,  455,  456,  456,
      456,  456,  456,  456,  456,  456,  456,  456,  456,  456,
      456,  456,  456,  456,  456,  457,  457,  457,  457,  457,
      457,  457,  457,  457,  457,  457,  457,  457,  457,  457,
      457,  457,  458,  458,  458,  458,  458,  458,  458,  458,
      458,  458,  458,  458,  458,  458,  458,  458,  458,  459,
      459,  459,  459,  459,  459,  459,  459,  459,  459,  459,
      459,  459,  459,  459,  459,  459,  462,  462,  462,  462,
      462,  462,  462,  462,  462,  462,  462,  462,  462,  462,
      462,  462,  462,  463,  463,  463,  463,  463,  463,  463,

      463,  463,  463,  463,  463,  463,  463,  463,  463,  463,
      464,  464,  464,  464,  464,  464,  464,  464,  464,  464,
      464,  464,  464,  464,  464,  464,  464,  465,  465,  465,
      465,  465,  465,  465,  465,  465,  465,  465,  465,  465,
      465,  465,  465,  465,  466,  466,  466,  466,  466,  466,
      466,  466,  466,  466,  466,  466,  466,  466,  466,  466,
      466,  467,  467,  467,  467,  467,  467,  467,  467,  467,
      467,  467,  467,  467,  467,  467,  467,  467,  468,  468,
      468,  468,  468,  468,  468,  468,  468,  468,  468,  468,
      468,  468,  468,  468,  468,  470,  470,  470,  470,  470,

      470,  470,  470,    0,  470,  470,  470,  470,    0,  470,
      470,  470,  471,  471,  471,  471,  471,  471,  471,  471,
      471,  471,  471,  471,  471,  471,  471,  471,  471,  472,
      472,  472,  472,  472,  472,  472,  472,  472,  472,  472,
      472,  472,  472,  472,    0,  472,  473,  473,  473,  473,
      473,  473,  473,  473,  473,  473,  473,  473,  473,  473,
      473,  473,  473,  475,  475,  475,  475,  475,  475,  475,
      475,  475,  475,  475,  475,  475,  475,  475,  475,  475,
      476,  476,  476,  476,  476,  476,  476,  476,  476,  476,
      476,  476,  476,  476,  476,  476,  476,  477,  477,  477,

      477,  477,  477,  477,  477,  477,  477,  477,  477,  477,
      477,  477,  477,  477,  478,  478,  478,  478,  478,  478,
      478,  478,  478,  478,  478,  478,  478,  478,  478,  478,
      478,  479,  479,  479,  479,  479,  479,  479,  479,  479,
      479,  481,  481,  481,  481,  481,  481,  481,  481,  481,
      481,  482,  482,  482,  482,  482,  482,  482,  482,  482,
      482,  482,  482,  482,  482,  482,  482,  482,  489,  489,
      489,  489,  489,  489,  489,  489,  489,  489,  489,  489,
      489,  489,  489,  489,  489,  490,  490,  490,  490,  490,
      490,  490,  490,  490,  490,  490,  490,  490,  490,  490,

      490,  490,  491,  491,  491,  491,  491,  491,  491,  491,
      491,  491,  491,  491,  491,  491,  491,  491,  491,  492,
      492,  492,  492,  492,  492,  492,  492,  492,  492,  492,
      492,  492,  492,  492,  492,  492,  493,  493,  493,  493,
      493,  493,  493,  493,  493,  493,  493,  493,  493,  493,
      493,  493,  493,  494,  494,  494,  494,  494,  494,  494,
      494,  494,  494,  494,  494,  494,  494,  494,  494,  494,
      495,  495,  495,  495,  495,  495,  495,  495,  495,  495,
      495,  495,  495,  495,  495,  495,  495,  496,  496,  496,
      496,  496,  496,  496,  496,  496,  496,  496,  496,  496,

      496,  496,  496,  496,  497,  497,  497,  497,  497,  497,
      497,  497,  497,  497,  497,  497,  497,  497,  497,  497,
      497,  498,  498,  498,  498,  498,  498,  498,  498,  498,
      498,  498,  498,  498,  498,  498,  498,  498,  500,  500,
      500,  500,  500,  500,  500,  500,  500,  500,  500,  500,
      500,  500,  500,  500,  500,  501,  501,  501,  501,  501,
      501,  501,  501,  501,  501,  501,  501,  501,  501,  501,
      501,  501,  503,    0,  504,    0,  505,    0,    0,    0,
      503,    0,  504,    0,  505,  503,  503,  504,  504,  505,
      505,    0,    0,    0,    0,  503,    0,  504,    0,  505,

        0,    0,  503,    0,  504,    0,  505,    0,    0,    0,
      503,    0,  504,    0,  505,  503,  503,  504,  504,  505,
      505,    0,  506,    0,  507,  503,  508,  504,    0,  505,
      506,    0,  507,    0,  508,  506,  506,  507,  507,  508,
      508,    0,    0,    0,    0,  506,    0,  507,    0,  508,
        0,    0,  506,    0,  507,    0,  508,    0,    0,    0,
      506,    0,  507,    0,  508,  506,  506,  507,  507,  508,
      508,    0,  509,    0,  510,  506,  511,  507,    0,  508,
      509,    0,  510,    0,  511,  509,  509,  510,  510,  511,
      511,    0,    0,    0,    0,  509,    0,  510,    0,  511,

        0,    0,  509,    0,  510,    0,  511,    0,    0,    0,
      509,    0,  510,    0,  511,  509,  509,  510,  510,  511,
      511,    0,  512,    0,  513,  509,  514,  510,    0,  511,
      512,    0,  513,    0,  514,  512,  512,  513,  513,  514,
      514,    0,    0,    0,    0,  512,    0,  513,    0,  514,
        0,    0,  512,    0,  513,    0,  514,    0,    0,    0,
      512,    0,  513,    0,  514,  512,  512,  513,  513,  514,
      514,    0,  515,    0,  516,  512,  517,  513,    0,  514,
      515,    0,  516,    0,  517,  515,  515,  516,  516,  517,
      517,    0,    0,    0,    0,  515,    0,  516,    0,  517,

        0,    0,  515,    0,  516,    0,  517,    0,    0,    0,
      515,    0,  516,    0,  517,  515,  515,  516,  516,  517,
      517,  598,  518,  598,  598,  515,    0,  516,    0,  517,
      518,  598,    0,  598,    0,  518,  518,  598,    0,    0,
      598,    0,    0,    0,    0,  518,    0,    0,    0,    0,
        0,  598,  518,  598,  598,    0,    0,    0,    0,    0,
      518,  598,    0,  598,    0,  518,  518,  598,    0,    0,
      598,    0,    0,    0,    0,  518,  519,  519,  519,  519,
      519,  519,  519,  519,  519,  519,  519,  519,  519,  519,
      519,  519,  519,  520,  520,  520,  520,  520,  520,  520,

      520,  520,  520,  520,  520,  520,  520,  520,  520,  520,
      521,  521,  521,  521,  521,  521,  521,  521,  521,  521,
      521,  521,  521,  521,  521,  521,  521,  522,  522,  522,
      522,  522,  522,  522,  522,  522,  522,  522,  522,  522,
      522,  522,  522,  522,  523,  523,  523,  523,  523,  523,
      523,  523,  523,  523,  523,  523,  523,  523,  523,  523,
      523,  524,  524,  524,  524,  524,  524,  524,  524,  524,
      524,  524,  524,  524,  524,  524,  524,  524,  525,  525,
      525,  525,  525,  525,  525,  525,  525,  525,  525,  525,
      525,  525,  525,  525,  525,  526,  526,  526,  526,  526,

      526,  526,  526,  526,  526,  526,  526,  526,  526,  526,
      526,  526,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  528,
      528,  528,  528,  528,  528,  528,  528,  528,  528,  528,
      528,  528,  528,  528,  528,  528,  530,  530,  530,  530,
      530,  530,  530,  530,  530,  530,  530,  530,  530,  530,
      530,  530,  530,  531,  531,  531,  531,  531,  531,  531,
      531,  531,  531,  531,  531,  531,  531,  531,  531,  531,
      532,    0,  533,    0,  532,  533,    0,    0,  532,    0,
      533,    0,    0,  532,  532,  533,  533,    0,    0,    0,

        0,    0,    0,  532,    0,  533,    0,    0,  534,    0,
      532,  534,  533,    0,  532,  533,  534,    0,  532,    0,
      533,  534,  534,  532,  532,  533,  533,    0,    0,    0,
        0,  534,    0,  532,  535,  533,    0,    0,  534,    0,
        0,  534,  535,    0,    0,  536,  534,  535,  535,    0,
        0,  534,  534,  536,    0,    0,  536,  535,  536,  536,
        0,  534,    0,    0,  535,    0,    0,    0,  536,    0,
        0,  537,  535,    0,    0,  536,    0,  535,  535,  537,
        0,    0,  538,  536,  537,  537,  536,  535,  536,  536,
      538,    0,    0,  538,  537,  538,  538,    0,  536,    0,

        0,  537,    0,    0,    0,  538,    0,    0,    0,  537,
        0,    0,  538,    0,  537,  537,    0,    0,    0,  539,
      538,  539,    0,  538,  537,  538,  538,  539,    0,    0,
      540,    0,  539,  539,    0,  538,  539,  539,  540,    0,
        0,    0,  539,  540,  540,    0,    0,    0,    0,  539,
        0,  539,    0,  540,    0,    0,  541,  539,    0,    0,
      540,    0,  539,  539,  541,    0,  539,  539,  540,  541,
      541,    0,  539,  540,  540,    0,    0,    0,    0,  541,
        0,    0,  542,  540,  543,    0,  541,    0,    0,    0,
      542,    0,  543,    0,  541,  542,  542,  543,  543,  541,

      541,    0,    0,    0,    0,  542,    0,  543,    0,  541,
      544,    0,  542,    0,  543,    0,    0,    0,  544,    0,
      542,    0,  543,  544,  544,  542,  542,  543,  543,    0,
        0,    0,    0,  544,    0,  542,  545,  543,  546,    0,
      544,    0,  546,    0,  545,    0,  546,    0,  544,  545,
      545,  546,  546,  544,  544,    0,    0,    0,    0,  545,
        0,  546,    0,  544,    0,    0,  545,    0,  546,    0,
        0,    0,  546,    0,  545,    0,  546,    0,    0,  545,
      545,  546,  546,    0,  547,    0,  547,  548,    0,  545,
        0,  546,  547,    0,    0,  548,    0,  547,  547,    0,

      548,  548,    0,    0,    0,  548,    0,  547,    0,    0,
      548,    0,    0,    0,  547,    0,  547,  548,    0,    0,
        0,    0,  547,    0,    0,  548,    0,  547,  547,    0,
      548,  548,    0,  549,    0,  548,  550,  547,    0,    0,
      548,  549,    0,    0,  550,    0,  549,  549,  549,  550,
      550,    0,    0,    0,    0,    0,  549,    0,    0,  550,
        0,    0,    0,  549,    0,    0,  550,    0,    0,    0,
        0,  549,    0,    0,  550,    0,  549,  549,  549,  550,
      550,    0,  551,    0,  552,    0,  549,    0,    0,  550,
      551,    0,  552,    0,    0,  551,  551,  552,  552,  551,

        0,  552,    0,    0,    0,  551,    0,  552,    0,    0,
        0,    0,  551,    0,  552,    0,    0,    0,    0,    0,
      551,    0,  552,    0,    0,  551,  551,  552,  552,  551,
      553,  552,  554,    0,    0,  551,    0,  552,  553,    0,
      554,    0,    0,  553,  553,  554,  554,    0,  553,    0,
        0,    0,    0,  553,    0,  554,    0,    0,    0,    0,
      553,    0,  554,    0,    0,    0,    0,    0,  553,    0,
      554,    0,    0,  553,  553,  554,  554,    0,  553,  555,
        0,  556,    0,  553,    0,  554,    0,  555,    0,  556,
        0,  555,  555,  555,  556,  556,  556,    0,    0,    0,

        0,    0,  555,    0,  556,    0,    0,    0,    0,  555,
        0,  556,    0,    0,    0,    0,    0,  555,    0,  556,
        0,  555,  555,  555,  556,  556,  556,  557,    0,  558,
        0,  559,  555,    0,  556,  557,    0,  558,    0,  559,
      557,  557,  558,  558,  559,  559,  557,  559,    0,    0,
      557,    0,  558,    0,  559,    0,    0,  557,    0,  558,
        0,  559,    0,    0,    0,  557,    0,  558,    0,  559,
      557,  557,  558,  558,  559,  559,  557,  559,    0,  560,
      557,  561,  558,  560,  559,    0,    0,  560,    0,  561,
        0,    0,  560,  560,  561,  561,    0,    0,    0,    0,

        0,    0,  560,    0,  561,    0,    0,  562,    0,  560,
        0,  561,    0,  560,    0,  562,    0,  560,    0,  561,
      562,  562,  560,  560,  561,  561,    0,    0,    0,    0,
      562,    0,  560,  563,  561,    0,    0,  562,    0,    0,
        0,  563,    0,    0,  563,  562,  563,  563,    0,    0,
      562,  562,    0,    0,    0,    0,  563,    0,    0,  564,
      562,    0,    0,  563,    0,    0,    0,  564,    0,    0,
      565,  563,  564,  564,  563,  564,  563,  563,  565,    0,
        0,    0,  564,  565,  565,    0,  563,    0,    0,  564,
        0,    0,    0,  565,    0,    0,  566,  564,    0,    0,

      565,    0,  564,  564,  566,  564,    0,    0,  565,  566,
      566,    0,  564,  565,  565,  566,    0,    0,    0,  566,
        0,    0,    0,  565,  568,    0,  566,    0,  567,    0,
      568,    0,  568,    0,  566,    0,  567,  568,  568,  566,
      566,  567,  567,    0,  567,  566,    0,  568,    0,  566,
        0,  567,    0,    0,  568,    0,  569,    0,  567,    0,
      568,    0,  568,    0,  569,    0,  567,  568,  568,  569,
      569,  567,  567,  569,  567,  570,    0,  568,    0,  569,
        0,  567,    0,  570,    0,    0,  569,    0,  570,  570,
        0,    0,    0,  571,  569,    0,  571,    0,  570,  569,

      569,  571,    0,  569,    0,  570,  571,  571,    0,  569,
        0,    0,    0,  570,    0,    0,  571,    0,  570,  570,
        0,  572,    0,  571,    0,    0,  571,    0,  570,  572,
        0,  571,    0,    0,  572,  572,  571,  571,    0,  574,
      574,    0,    0,    0,  572,    0,  571,  574,    0,    0,
        0,  572,  574,  574,    0,    0,    0,    0,    0,  572,
        0,    0,  574,    0,  572,  572,    0,  575,    0,  574,
      574,  576,    0,    0,  572,  575,    0,  574,    0,  576,
      575,  575,  574,  574,  576,  576,  575,    0,    0,  576,
      575,    0,  574,    0,  576,    0,    0,  575,    0,  577,

        0,  576,    0,  577,    0,  575,    0,  577,    0,  576,
      575,  575,  577,  577,  576,  576,  575,  578,    0,  576,
      575,  578,  577,    0,  576,  578,    0,    0,    0,  577,
      578,  578,    0,  577,    0,    0,  579,  577,    0,    0,
      578,    0,  577,  577,  579,    0,    0,  578,    0,  579,
      579,  578,  577,    0,  580,  578,    0,    0,    0,  579,
      578,  578,  580,    0,    0,    0,  579,  580,  580,    0,
      578,    0,    0,  581,  579,    0,    0,  580,    0,  579,
      579,  581,    0,    0,  580,    0,  581,  581,    0,  579,
      581,  582,  580,    0,    0,    0,  581,  580,  580,  582,

        0,    0,    0,  581,  582,  582,    0,  580,    0,    0,
        0,  581,    0,    0,  582,    0,  581,  581,    0,  583,
      581,  582,    0,  583,    0,    0,  581,  583,    0,  582,
        0,    0,  583,  583,  582,  582,    0,    0,  584,    0,
        0,    0,  583,  584,  582,    0,  584,    0,    0,  583,
        0,  584,  584,  583,    0,    0,  585,  583,    0,    0,
        0,  584,  583,  583,  585,    0,    0,    0,  584,  585,
      585,    0,  583,  584,    0,  586,  584,    0,  586,  585,
        0,  584,  584,  586,    0,    0,  585,    0,  586,  586,
        0,  584,    0,  587,  585,    0,    0,    0,  586,  585,

      585,  587,    0,    0,    0,  586,  587,  587,  586,  585,
        0,    0,  587,  586,    0,    0,  587,    0,  586,  586,
        0,  588,    0,  587,    0,  588,    0,    0,  586,  588,
        0,  587,    0,    0,  588,  588,  587,  587,    0,  589,
        0,    0,  587,    0,  588,    0,  587,  589,    0,    0,
        0,  588,  589,  589,    0,  588,    0,    0,    0,  588,
        0,    0,  589,    0,  588,  588,    0,    0,    0,  589,
        0,  590,    0,    0,  588,  590,    0,  589,    0,  590,
        0,    0,  589,  589,  590,  590,  590,    0,    0,  591,
        0,    0,  589,    0,  590,    0,    0,  591,    0,    0,

        0,  590,  591,  591,    0,  590,    0,    0,    0,  590,
        0,    0,  591,    0,  590,  590,  590,  592,    0,  591,
        0,  592,    0,    0,  590,  592,    0,  591,    0,    0,
      592,  592,  591,  591,    0,  593,    0,    0,    0,  690,
      592,    0,  591,  593,  690,    0,    0,  592,  593,  593,
        0,  592,    0,    0,  594,  592,    0,    0,  593,    0,
      592,  592,  594,  595,    0,  593,    0,  594,  594,    0,
      592,    0,    0,  593,  594,    0,    0,  594,  593,  593,
        0,    0,    0,    0,  594,    0,    0,  595,  593,    0,
        0,    0,  594,    0,  690,  595,    0,  594,  594,  690,

      595,  595,    0,  690,  594,  596,    0,  594,    0,  596,
      595,  690,    0,  596,  690,    0,  690,  595,  596,  596,
        0,    0,  599,    0,  599,  595,    0,    0,  596,    0,
      595,  595,  599,    0,  599,  596,    0,  597,  599,  596,
      595,  599,    0,  596,    0,  597,    0,    0,  596,  596,
      597,  597,  599,  597,  599,    0,    0,    0,  596,    0,
      597,    0,  599,    0,  599,  600,    0,  597,  599,    0,
        0,  599,    0,  600,    0,  597,    0,    0,  600,  600,
      597,  597,    0,  597,    0,    0,    0,    0,  600,    0,
      597,    0,  601,    0,    0,  600,  601,    0,    0,    0,

      601,    0,    0,  600,    0,  601,  601,    0,  600,  600,
        0,  602,    0,    0,    0,  601,    0,    0,  600,  602,
        0,    0,  601,    0,  602,  602,  601,    0,  602,  603,
      601,    0,    0,  603,  602,  601,  601,  603,    0,    0,
        0,  602,  603,  603,    0,  601,    0,    0,  604,  602,
        0,    0,  603,    0,  602,  602,  604,    0,  602,  603,
        0,  604,  604,  603,  602,    0,    0,  603,    0,    0,
        0,  604,  603,  603,    0,    0,  606,    0,  604,    0,
      605,    0,  603,    0,  606,    0,  604,    0,  605,  606,
      606,  604,  604,  605,  605,    0,  605,    0,    0,  606,

        0,  604,    0,  605,    0,    0,  606,    0,  607,    0,
      605,    0,    0,    0,  606,    0,  607,    0,  605,  606,
      606,  607,  607,  605,  605,    0,  605,  608,    0,  606,
        0,  607,    0,  605,    0,  608,    0,    0,  607,    0,
      608,  608,    0,  608,    0,    0,  607,    0,    0,    0,
      608,  607,  607,    0,    0,  609,    0,  608,    0,    0,
        0,  607,  609,  609,    0,  608,    0,    0,  609,  609,
      608,  608,    0,  608,  610,    0,    0,    0,  609,    0,
      608,    0,  610,    0,    0,  609,    0,  610,  610,    0,
      610,    0,  609,  609,    0,    0,    0,  610,  609,  609,

        0,    0,    0,    0,  610,    0,    0,    0,  609,    0,
        0,    0,  610,    0,    0,    0,    0,  610,  610,    0,
      610,    0,    0,    0,    0,    0,    0,  610,  611,  611,
        0,  611,  611,  611,  611,  611,  611,  611,  611,  694,
      694,  694,  694,  694,  694,  694,  611,  611,  611,  611,
      611,  611,  611,  611,  611,  611,  611,  611,  611,  611,
      611,  611,  611,  611,  611,  611,  611,  611,  611,  611,
      611,    0,    0,    0,    0,  611,  611,  611,  611,  611,
      611,  611,  611,  611,  611,  611,  611,  611,  611,  611,
      611,  611,  611,  611,  611,  611,  611,  611,  611,  611,

      611,    0,    0,    0,    0,  611,  611,  611,  611,  611,
      611,  611,  611,  611,  611,  611,  611,  611,  611,  611,
      611,    0,  611,  611,  611,  611,  611,  611,  611,  611,
      611,  611,  611,  611,    0,  611,  611,  611,  612,  612,
      612,  612,  612,  612,  612,  612,  612,  612,  612,  612,
      612,  612,  612,  612,  612,  613,  613,  613,  613,  613,
      613,  613,  613,  613,  613,  613,  613,  613,  613,  613,
      613,  613,  614,  614,  614,  614,  614,  614,  614,  614,
      614,  614,  614,  614,  614,  614,  614,  614,  614,  615,
      615,  615,  615,  615,  615,  615,  615,  615,  615,  615,

      615,  615,  615,  615,  615,  615,  616,  616,  616,  616,
      616,  616,  616,  616,  616,  616,  616,  616,  616,  616,
      616,  616,  616,  617,  617,  617,  617,  617,  617,  617,
      617,  617,  617,  617,  617,  617,  617,  617,  617,  617,
      618,  618,  618,  618,  618,  618,  618,  618,    0,  618,
      618,  618,  618,    0,  618,  618,  618,  619,  619,  619,
      619,  619,  619,  619,  619,  619,  619,  619,  619,  619,
      619,  619,  619,  619,  621,  621,  621,  621,  621,  621,
      621,  621,  621,  621,  621,  621,  621,  621,  621,  621,
      621,  623,  623,  623,  623,  623,  623,  623,  623,  623,

      623,  623,  623,  623,  623,  623,  623,  623,  624,  624,
      624,  624,  624,  624,  624,  624,  624,  624,  624,  624,
      624,  624,  624,  624,  624,  625,  625,  625,  625,  625,
      625,  625,  625,  625,  625,  625,  625,  625,  625,  625,
      625,  625,  626,  626,  626,  626,  626,  626,  626,  626,
      626,  626,  626,  626,  626,  626,  626,  626,  626,  627,
      627,  627,  627,  627,  627,  627,  627,  627,  627,  629,
      629,  629,  629,  629,  629,  629,  629,  629,  629,  630,
      630,  630,  630,  630,  630,  630,  630,  630,  630,  630,
      630,  630,  630,  630,  630,  630,  631,    0,  632,    0,

        0,    0,    0,    0,  631,    0,  632,    0,    0,  631,
      631,  632,  632,    0,    0,    0,    0,    0,    0,  631,
        0,  632,    0,    0,    0,    0,  631,    0,  632,    0,
        0,    0,  632,    0,  631,    0,  632,    0,    0,  631,
      631,  632,  632,  631,  633,    0,  634,    0,  635,  631,
        0,  632,  633,    0,  634,    0,  635,  633,  633,  634,
      634,  635,  635,    0,    0,    0,    0,  633,    0,  634,
        0,  635,    0,    0,  633,    0,  634,    0,  635,    0,
        0,    0,  633,    0,  634,    0,  635,  633,  633,  634,
      634,  635,  635,    0,  636,    0,  637,  633,    0,  634,

        0,  635,  636,    0,  637,    0,    0,  636,  636,  637,
      637,    0,    0,    0,    0,    0,    0,  636,    0,  637,
        0,    0,    0,    0,  636,    0,  637,    0,    0,    0,
        0,    0,  636,    0,  637,    0,    0,  636,  636,  637,
      637,    0,    0,    0,    0,    0,    0,  636,    0,  637,
      638,  638,  638,  638,  638,  638,  638,  638,  638,  638,
      638,  638,  638,  638,  638,  638,  638,  639,  639,  639,
      639,  639,  639,  639,  639,  639,  639,  639,  639,  639,
      639,  639,  639,  639,  640,  643,  643,  643,  643,  643,
      643,  643,  643,  643,  643,  643,  643,  643,  643,  643,

      643,  644,  644,  644,  644,  644,  644,  644,  644,  644,
      644,  644,  644,  644,  644,  644,  645,  645,  645,  645,
      645,  645,  645,  645,  645,  645,  645,  645,  645,  645,
      645,  645,  645,    0,    0,    0,    0,    0,    0,  640,
      647,  647,  647,  647,  647,  647,  647,  647,  647,  647,
      647,  647,  647,  647,  647,  647,  647,  648,  648,  648,
      648,  648,  648,  648,  648,  648,  648,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  640,  708,  708,
      708,  708,  708,  708,  708,  708,    0,  640,    0,  640,
      640,  640,  640,  640,  640,  640,  640,  640,  640,  640,

      640,  640,  640,  640,  640,  640,  641,  649,  649,  649,
      649,  649,  649,  649,  649,  649,  649,  649,  649,  649,
      649,  649,  649,  649,  651,  651,  651,  651,  651,  651,
      651,  651,  651,  651,  651,  651,  651,  651,  651,  651,
      651,  654,  654,  654,  654,  654,  654,  654,  654,  654,
      654,  654,  654,  654,  654,  654,  654,  654,    0,    0,
        0,  641,  655,  655,  655,  655,  655,  655,  655,  655,
      655,  655,  655,  655,  655,  655,  655,  655,  655,  656,
      656,  656,  656,  656,  656,  656,  656,  656,  656,  656,
      656,  656,  656,  656,  656,  656,  705,    0,  705,  641,

        0,  705,  705,  705,  705,  705,  705,  705,  705,  641,
        0,  641,  641,  641,  641,  641,  641,  641,  641,  641,
      641,  641,  641,  641,  641,  641,  641,  641,  653,  657,
      709,  709,  709,  709,  709,  709,  709,  709,    0,  657,
        0,  657,  657,  657,  657,  657,  657,  657,  657,  657,
      657,  657,  657,  657,  657,  657,  657,  657,  658,  658,
      658,  658,  658,  658,  658,  658,  658,  658,  658,  658,
      658,  658,  658,  658,  658,  713,  713,  713,  713,  713,
      713,  713,  713,  653,  659,  659,  659,  659,  659,  659,
      659,  659,  659,  659,  659,  659,  659,  659,  659,  659,

      659,  660,  660,  660,  660,  660,  660,  660,  660,  660,
      660,  660,  660,  660,  660,  660,  660,  660,  707,    0,
      707,  653,    0,  707,  707,  707,  707,  707,  707,  707,
      707,  653,    0,  653,  653,  653,  653,  653,  653,  653,
      653,  653,  653,  653,  653,  653,  653,  653,  653,  653,
      668,  668,  668,  668,  668,  668,  668,  668,  668,  668,
      668,  668,  668,  668,  668,  668,  668,  669,  669,  669,
      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
      669,  669,  669,  669,  670,  670,  670,  670,  670,  670,
      670,  670,  670,  670,  670,  670,  670,  670,  670,  670,

      670,  671,  671,  671,  671,  671,  671,  671,  671,  671,
      671,  671,  671,  671,  671,  671,  671,  671,  672,  672,
      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  673,  673,  673,  673,  673,
      673,  673,  673,  673,  673,  673,  673,  673,  673,  673,
      673,  673,  674,  674,  674,  674,  674,  674,  674,  674,
      674,  674,  674,  674,  674,  674,  674,  674,  674,  675,
      675,  675,  675,  675,  675,  675,  675,  675,  675,  675,
      675,  675,  675,  675,  675,  675,  676,  676,  676,  676,
      676,  676,  676,  676,  676,  676,  676,  676,  676,  676,

      676,  676,  676,  677,  677,  677,  677,  677,  677,  677,
      677,  677,  677,  677,  677,  677,  677,  677,  677,  677,
      679,  679,  679,  679,  679,  679,  679,  679,  679,  679,
      679,  679,  679,  679,  679,  679,  679,  680,  680,  680,
      680,  680,  680,  680,  680,  680,  680,  680,  680,  680,
      680,  680,  680,  680,  686,  686,  686,  686,  686,  686,
      686,  686,  686,  686,  686,  686,  686,  686,  686,  686,
      686,  687,  687,  687,  687,  687,  687,  687,  687,  687,
      687,  687,  687,  687,  687,  687,  687,  687,  688,  691,
      691,  691,  691,  691,  691,  691,  691,  691,  691,  691,

      691,  691,  691,  691,  691,  692,  692,  692,  692,  692,
      692,  692,  692,  692,  692,  692,  692,  692,  692,  692,
      693,  693,  693,  693,  693,  693,  693,  693,  693,  693,
      693,  693,  693,  693,  693,  693,  693,    0,  688,  695,
      695,  695,  695,  695,  695,  695,  695,  695,  695,  695,
      695,  695,  695,  695,  695,  695,  696,  696,  696,  696,
      696,  696,  696,  696,  696,  696,  698,  698,  698,  698,
      698,  698,  698,  698,  698,  698,  688,  714,  714,  714,
      714,  714,  714,  714,  714,    0,  688,    0,  688,  688,
      688,  688,  688,  688,  688,  688,  688,  688,  688,  688,

      688,  688,  688,  688,  688,  689,  697,  697,  697,  697,
      697,  697,  697,  697,  697,  697,  697,  697,  697,  697,
      697,  697,  697,  699,  699,  699,  699,  699,  699,  699,
      699,  699,  699,  699,  699,  699,  699,  699,  699,  699,
      710,    0,  710,    0,    0,  710,  710,  710,  710,  710,
      710,  710,  710,    0,    0,  689,  702,  702,  702,  702,
      702,  702,  702,  702,  702,  702,  702,  702,  702,  702,
      702,  702,  702,  703,  703,  703,  703,  703,  703,  703,
      703,  703,  703,  703,  703,  703,  703,  703,  703,  703,
      712,    0,  712,  689,    0,  712,  712,  712,  712,  712,

      712,  712,  712,  689,    0,  689,  689,  689,  689,  689,
      689,  689,  689,  689,  689,  689,  689,  689,  689,  689,
      689,  689,  701,  704,  704,  704,  704,  704,  704,  704,
      704,  704,  704,  704,  704,  704,  704,  704,  704,  704,
      706,  706,  706,  706,  706,  706,  706,  706,  711,  711,
      711,  711,  711,  711,  711,  711,    0,    0,    0,  706,
      881,  881,  881,  881,  881,  881,  881,  711,    0,    0,
        0,    0,  701,  715,  715,  715,  715,  715,  715,  715,
      715,  716,  716,  716,  716,  716,  716,  716,  716,  706,
        0,    0,    0,    0,    0,    0,    0,  711,  717,  717,

      717,  717,  717,  717,  717,  717,    0,    0,    0,    0,
      701,  718,  718,  718,  718,  718,  718,  718,  718,    0,
      701,    0,  701,  701,  701,  701,  701,  701,  701,  701,
      701,  701,  701,  701,  701,  701,  701,  701,  701,  728,
      728,  728,  728,  728,  728,  728,  728,  728,  728,  728,
      728,  728,  728,  728,  728,  728,  729,  729,  729,  729,
      729,  729,  729,  729,  729,  729,  729,  729,  729,  729,
      729,  729,  729,  730,  730,  730,  730,  730,  730,  730,
      730,  730,  730,  730,  730,  730,  730,  730,  730,  730,
      731,  731,  731,  731,  731,  731,  731,  731,  731,  731,

      731,  731,  731,  731,  731,  731,  731,  732,  732,  732,
      732,  732,  732,  732,  732,  732,  732,  732,  732,  732,
      732,  732,  732,  732,  733,  733,  733,  733,  733,  733,
      733,  733,  733,  733,  733,  733,  733,  733,  733,  733,
      733,  734,  734,  734,  734,  734,  734,  734,  734,  734,
      734,  734,  734,  734,  734,  734,  734,  734,  735,  735,
      735,  735,  735,  735,  735,  735,  735,  735,  735,  735,
      735,  735,  735,  735,  735,  736,  736,  736,  736,  736,
      736,  736,  736,  736,  736,  736,  736,  736,  736,  736,
      736,  736,  737,  737,  737,  737,  737,  737,  737,  737,

      737,  737,  737,  737,  737,  737,  737,  737,  737,  739,
      739,  739,  739,  739,  739,  739,  739,  739,  739,  739,
      739,  739,  739,  739,  739,  739,  740,  740,  740,  740,
      740,  740,  740,  740,  740,  740,  740,  740,  740,  740,
      740,  740,  740,  746,  746,  746,  746,  746,  746,  746,
      746,  746,  746,  746,  746,  746,  746,  746,  746,  746,
      747,  747,  747,  747,  747,  747,  747,  747,  747,  747,
      747,  747,  747,  747,  747,  747,  747,  748,  749,  749,
      749,  749,  749,  749,  749,  749,  749,  749,  749,  749,
      749,  749,  749,  749,  749,  750,  750,  750,  750,  750,

      750,  750,  750,  750,  750,  750,  750,  750,  750,  750,
      750,  750,  751,  751,  751,  751,  751,  751,  751,  751,
      751,  751,  751,  751,  751,  751,  751,  751,  751,    0,
        0,  876,  876,  876,  876,  876,  876,  876,  876,    0,
      876,  876,  876,  876,  748,  876,  876,  876,    0,    0,
        0,    0,    0,    0,  748,    0,  748,  748,  748,  748,
      748,  748,  748,  748,  748,  748,  748,  748,  748,  748,
      748,  748,  748,  759,  759,  759,  759,  759,  759,  759,
      759,  759,  759,  759,  759,  759,  759,  759,  759,  759,
      760,  760,  760,  760,  760,  760,  760,  760,  760,  760,

      760,  760,  760,  760,  760,  760,  760,  761,  761,  761,
      761,  761,  761,  761,  761,  761,  761,  761,  761,  761,
      761,  761,  761,  761,  762,  762,  762,  762,  762,  762,
      762,  762,  762,  762,  762,  762,  762,  762,  762,  762,
      762,  763,  763,  763,  763,  763,  763,  763,  763,  763,
      763,  763,  763,  763,  763,  763,  763,  763,  764,  764,
      764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
      764,  764,  764,  764,  764,  765,  765,  765,  765,  765,
      765,  765,  765,  765,  765,  765,  765,  765,  765,  765,
      765,  765,  766,  766,  766,  766,  766,  766,  766,  766,

      766,  766,  766,  766,  766,  766,  766,  766,  766,  767,
      767,  767,  767,  767,  767,  767,  767,  767,  767,  767,
      767,  767,  767,  767,  767,  767,  768,  768,  768,  768,
      768,  768,  768,  768,  768,  768,  768,  768,  768,  768,
      768,  768,  768,  770,  770,  770,  770,  770,  770,  770,
      770,  770,  770,  770,  770,  770,  770,  770,  770,  770,
      771,  771,  771,  771,  771,  771,  771,  771,  771,  771,
      771,  771,  771,  771,  771,  771,  771,  777,  777,  777,
      777,  777,  777,  777,  777,  777,  777,  777,  777,  777,
      777,  777,  777,  777,  778,  778,  778,  778,  778,  778,

      778,  778,  778,  778,  778,  778,  778,  778,  778,  778,
      778,  780,    0,  781,    0,  782,    0,    0,    0,  780,
        0,  781,    0,  782,  780,  780,  781,  781,  782,  782,
        0,    0,    0,    0,  780,    0,  781,    0,  782,    0,
        0,  780,    0,  781,    0,  782,    0,    0,    0,  780,
        0,  781,    0,  782,  780,  780,  781,  781,  782,  782,
        0,  783,    0,  784,  780,    0,  781,    0,  782,  783,
        0,  784,    0,    0,  783,  783,  784,  784,    0,    0,
        0,    0,    0,    0,  783,    0,  784,    0,    0,    0,
        0,  783,    0,  784,    0,    0,    0,    0,    0,  783,

        0,  784,    0,    0,  783,  783,  784,  784,    0,    0,
        0,    0,    0,    0,  783,    0,  784,  785,  785,  785,
      785,  785,  785,  785,  785,  785,  785,  785,  785,  785,
      785,  785,  785,  785,  786,  786,  786,  786,  786,  786,
      786,  786,  786,  786,  786,  786,  786,  786,  786,  786,
      786,  787,    0,  788,    0,    0,    0,    0,    0,  787,
        0,  788,    0,    0,  787,  787,  788,  788,    0,    0,
        0,    0,    0,    0,  787,    0,  788,    0,    0,    0,
        0,  787,    0,  788,    0,    0,    0,    0,    0,  787,
        0,  788,    0,    0,  787,  787,  788,  788,    0,  789,

        0,    0,  790,  789,  787,  790,  788,  789,    0,    0,
      790,    0,  789,  789,    0,  790,  790,    0,    0,    0,
        0,    0,  789,    0,    0,  790,    0,    0,    0,  789,
        0,    0,  790,  789,    0,  790,  791,  789,    0,    0,
      790,    0,  789,  789,  791,  790,  790,    0,  792,  791,
      791,    0,  789,    0,    0,  790,  792,    0,    0,  791,
        0,  792,  792,    0,  792,    0,  791,    0,    0,    0,
        0,  792,    0,    0,  791,    0,    0,    0,  792,  791,
      791,    0,    0,    0,    0,    0,  792,    0,    0,  791,
        0,  792,  792,    0,  792,  793,    0,  794,    0,  793,

        0,  792,    0,  793,    0,  794,    0,    0,  793,  793,
      794,  794,    0,    0,    0,    0,    0,    0,  793,    0,
      794,    0,    0,    0,    0,  793,    0,  794,    0,  793,
        0,    0,    0,  793,    0,  794,    0,    0,  793,  793,
      794,  794,    0,  795,    0,  796,    0,    0,  793,    0,
      794,  795,    0,  796,    0,    0,  795,  795,  796,  796,
        0,  795,    0,    0,    0,    0,  795,    0,  796,    0,
        0,  797,    0,  795,    0,  796,    0,    0,    0,  797,
        0,  795,    0,  796,  797,  797,  795,  795,  796,  796,
        0,  795,    0,    0,  797,    0,  795,    0,  796,  798,

        0,  797,    0,    0,    0,    0,    0,  798,    0,  797,
        0,    0,  798,  798,  797,  797,    0,  798,  799,    0,
        0,    0,  798,    0,  797,    0,  799,    0,    0,  798,
        0,  799,  799,    0,    0,    0,  799,  798,    0,    0,
        0,  799,  798,  798,    0,  800,    0,  798,  799,    0,
        0,    0,  798,  800,    0,    0,  799,    0,  800,  800,
        0,  799,  799,  800,    0,    0,  799,    0,  800,    0,
        0,  799,  801,    0,    0,  800,    0,    0,    0,    0,
      801,    0,    0,  800,    0,  801,  801,    0,  800,  800,
        0,  801,    0,  800,    0,  801,    0,    0,  800,  802,

        0,    0,  801,    0,    0,    0,    0,  802,    0,    0,
      801,    0,  802,  802,    0,  801,  801,  802,  803,    0,
        0,  801,  802,    0,    0,  801,  803,    0,    0,  802,
        0,  803,  803,    0,  803,    0,  804,  802,    0,    0,
        0,  803,  802,  802,  804,    0,    0,  802,  803,  804,
      804,    0,  802,    0,    0,  805,  803,    0,    0,  804,
        0,  803,  803,  805,  803,    0,  804,    0,  805,  805,
        0,  803,    0,  806,  804,    0,  806,    0,  805,  804,
      804,  806,    0,    0,    0,  805,  806,  806,    0,  804,
        0,    0,    0,  805,    0,    0,  806,    0,  805,  805,

        0,  807,    0,  806,    0,  808,  806,    0,  805,  807,
        0,  806,    0,  808,  807,  807,  806,  806,  808,  808,
        0,    0,    0,  808,  807,    0,  806,    0,  808,    0,
        0,  807,    0,  809,    0,  808,    0,  809,    0,  807,
        0,  809,    0,  808,  807,  807,  809,  809,  808,  808,
        0,    0,  810,  808,  807,    0,  809,    0,  808,    0,
      810,    0,    0,  809,    0,  810,  810,  809,  810,    0,
      811,  809,    0,    0,    0,  810,  809,  809,  811,    0,
        0,    0,  810,  811,  811,    0,  809,    0,    0,    0,
      810,    0,    0,  811,    0,  810,  810,    0,  810,    0,

      811,    0,  812,    0,  813,  810,    0,    0,  811,  812,
      812,    0,  813,  811,  811,  812,  812,  813,  813,  813,
        0,    0,    0,  811,    0,  812,    0,  813,    0,    0,
      814,    0,  812,    0,  813,    0,    0,    0,  814,  812,
      812,    0,  813,  814,  814,  812,  812,  813,  813,  813,
        0,    0,    0,  814,    0,  812,    0,  813,  815,    0,
      814,    0,    0,    0,    0,    0,  815,    0,  814,    0,
        0,  815,  815,  814,  814,  815,  816,    0,    0,    0,
        0,  815,    0,  814,  816,    0,    0,    0,  815,  816,
      816,    0,  816,    0,    0,  817,  815,    0,    0,  816,

        0,  815,  815,  817,    0,  815,  816,    0,  817,  817,
        0,  815,    0,  818,  816,    0,    0,    0,  817,  816,
      816,  818,  816,    0,    0,  817,  818,  818,    0,  816,
        0,    0,  819,  817,    0,    0,  818,    0,  817,  817,
      819,    0,    0,  818,    0,  819,  819,    0,  817,    0,
      820,  818,    0,    0,    0,  819,  818,  818,  820,    0,
        0,    0,  819,  820,  820,    0,  818,    0,  820,  821,
      819,    0,    0,  820,    0,  819,  819,  821,    0,    0,
      820,  821,  821,  821,    0,  819,    0,  822,  820,    0,
        0,    0,  821,  820,  820,  822,    0,    0,  820,  821,

      822,  822,    0,  820,    0,    0,  823,  821,    0,    0,
      822,  821,  821,  821,  823,    0,    0,  822,  823,  823,
      823,    0,  821,    0,  824,  822,    0,    0,  824,  823,
      822,  822,  824,    0,    0,    0,  823,  824,  824,    0,
      822,    0,    0,  825,  823,    0,    0,  824,  823,  823,
      823,  825,    0,    0,  824,    0,  825,  825,  824,  823,
        0,  825,  824,    0,    0,    0,  825,  824,  824,    0,
      826,    0,    0,  825,    0,    0,    0,  824,  826,    0,
        0,  825,    0,  826,  826,    0,  825,  825,    0,    0,
        0,  825,    0,  826,    0,    0,  825,  828,    0,    0,

      826,  828,    0,    0,    0,  828,    0,    0,  826,    0,
      828,  828,    0,  826,  826,    0,  829,    0,    0,    0,
      828,    0,    0,  826,  829,    0,    0,  828,    0,  829,
      829,  828,    0,  829,  829,  828,    0,    0,    0,  829,
      828,  828,    0,    0,  830,    0,  829,    0,  831,    0,
      828,  830,  830,    0,  829,    0,  831,  830,  830,  829,
      829,  831,  831,  829,  829,    0,    0,  830,    0,  829,
        0,  831,    0,    0,  830,    0,  832,    0,  831,  832,
        0,  830,  830,    0,  832,    0,  831,  830,  830,  832,
      832,  831,  831,    0,  833,    0,    0,  830,  833,  832,

        0,  831,  833,    0,    0,    0,  832,  833,  833,  832,
        0,    0,    0,  834,  832,    0,    0,  833,    0,  832,
      832,  834,    0,    0,  833,    0,  834,  834,  833,  832,
        0,    0,  833,    0,    0,    0,  834,  833,  833,    0,
        0,  836,    0,  834,    0,  835,    0,  833,    0,  836,
        0,  834,    0,  835,  836,  836,  834,  834,  835,  835,
        0,  835,    0,    0,  836,    0,  834,    0,  835,    0,
        0,  836,    0,    0,    0,  835,    0,    0,    0,  836,
        0,    0,  837,  835,  836,  836,    0,    0,  835,  835,
      837,  835,    0,  838,  836,  837,  837,    0,  835,    0,

      837,  838,    0,    0,    0,  837,  838,  838,    0,    0,
        0,    0,  837,    0,    0,    0,  838,    0,    0,  839,
      837,  839,    0,  838,    0,  837,  837,  839,    0,    0,
      837,  838,  839,  839,    0,  837,  838,  838,    0,    0,
        0,    0,  839,    0,    0,  840,  838,  841,    0,  839,
      841,  839,    0,  840,    0,  841,    0,  839,  840,  840,
      841,  841,  839,  839,    0,    0,    0,  840,  840,    0,
      841,    0,  839,    0,    0,  840,    0,  841,    0,    0,
      841,    0,    0,  840,    0,  841,    0,    0,  840,  840,
      841,  841,    0,  842,    0,    0,    0,  840,  840,    0,

      841,  842,    0,    0,  843,    0,  842,  842,    0,    0,
        0,  842,  843,    0,    0,  843,  842,  843,  843,    0,
        0,    0,    0,  842,    0,    0,    0,  843,    0,    0,
      844,  842,    0,    0,  843,    0,  842,  842,  844,    0,
        0,  842,  843,  844,  844,  843,  842,  843,  843,    0,
        0,    0,    0,  844,    0,    0,  845,  843,  845,    0,
      844,    0,    0,    0,  845,    0,    0,    0,  844,  845,
      845,    0,    0,  844,  844,    0,    0,    0,    0,  845,
        0,    0,  846,  844,    0,    0,  845,    0,  845,    0,
      846,    0,    0,  847,  845,  846,  846,    0,  846,  845,

      845,  847,    0,    0,    0,  846,  847,  847,    0,  845,
        0,    0,  846,    0,    0,    0,  847,    0,    0,  849,
      846,    0,    0,  847,    0,  846,  846,  849,  846,    0,
      850,  847,  849,  849,    0,  846,  847,  847,  850,    0,
        0,    0,  849,  850,  850,    0,  847,    0,  850,  849,
        0,    0,    0,  850,    0,    0,  852,  849,    0,    0,
      850,    0,  849,  849,  852,    0,    0,  851,  850,  852,
      852,    0,  849,  850,  850,  851,    0,    0,  850,  852,
      851,  851,    0,  850,    0,  851,  852,    0,    0,    0,
      851,    0,    0,    0,  852,    0,    0,  851,    0,  852,

      852,    0,    0,    0,  853,  851,    0,    0,  853,  852,
      851,  851,  853,    0,    0,  851,    0,  853,  853,    0,
      851,    0,  854,    0,    0,    0,    0,  853,    0,    0,
      854,    0,    0,    0,  853,  854,  854,    0,  853,    0,
      854,  855,  853,    0,    0,  854,    0,  853,  853,  855,
        0,    0,  854,    0,  855,  855,    0,  853,    0,  855,
      854,    0,    0,    0,  855,  854,  854,    0,  856,    0,
      854,  855,    0,    0,    0,  854,  856,    0,    0,  855,
        0,  856,  856,    0,  855,  855,    0,    0,    0,  855,
        0,  856,  856,    0,  855,  857,    0,    0,  856,  857,

        0,    0,    0,  857,    0,    0,  856,    0,  857,  857,
        0,  856,  856,    0,    0,    0,    0,    0,  857,    0,
        0,  856,  856,  858,    0,  857,    0,  859,  858,  857,
        0,  858,    0,  857,    0,  859,  858,  858,  857,  857,
      859,  859,    0,    0,    0,    0,  858,    0,  857,    0,
      859,    0,    0,  858,    0,    0,    0,  859,  858,    0,
      860,  858,    0,  860,    0,  859,  858,  858,  860,    0,
      859,  859,    0,  860,  860,    0,  858,    0,  861,    0,
      859,    0,    0,  860,  861,    0,  861,    0,    0,    0,
      860,  861,  861,  860,    0,    0,    0,    0,  860,    0,

        0,  861,    0,  860,  860,    0,    0,    0,  861,    0,
        0,  862,    0,  860,  861,  862,  861,    0,    0,  862,
        0,  861,  861,    0,  862,  862,    0,    0,    0,  863,
        0,  861,    0,    0,  862,    0,    0,  863,    0,    0,
        0,  862,  863,  863,    0,  862,    0,    0,  864,  862,
        0,    0,  863,    0,  862,  862,  864,    0,    0,  863,
        0,  864,  864,    0,  862,    0,    0,  863,    0,    0,
        0,  864,  863,  863,    0,    0,    0,    0,  864,    0,
        0,    0,  863,    0,    0,    0,  864,    0,    0,    0,
        0,  864,  864,  940,  940,  940,  940,  940,  940,  940,

      940,  864,  868,  868,  868,  868,  868,  868,  868,  868,
      868,  868,  868,  868,  868,  868,  868,  868,  868,  869,
      869,  869,  869,  869,  869,  869,  869,  869,  869,  869,
      869,  869,  869,  869,  869,  869,  870,  870,  870,  870,
      870,  870,  870,  870,  870,  870,  870,  870,  870,  870,
      870,  870,  870,  871,  871,  871,  871,  871,  871,  871,
      871,  871,  871,  871,  871,  871,  871,  871,  871,  871,
      872,  872,  872,  872,  872,  872,  872,  872,  872,  872,
      872,  872,  872,  872,  872,  872,  872,  873,  873,  873,
      873,  873,  873,  873,  873,  873,  873,  873,  873,  873,

      873,  873,  873,  873,  874,  874,  874,  874,  874,  874,
      874,  874,  874,  874,  874,  874,  874,  874,  874,  874,
      874,  877,  877,  877,  877,  877,  877,  877,  877,  877,
      877,  877,  877,  877,  877,  877,  877,  877,  878,  878,
      878,  878,  878,  878,  878,  878,  878,  878,  878,  878,
      878,  878,  878,  878,  878,  879,  879,  879,  879,  879,
      879,  879,  879,  879,  879,  879,  879,  879,  879,  879,
      879,  879,  880,  880,  880,  880,  880,  880,  880,  880,
      880,  880,  880,  880,  880,  880,  880,  880,  880,  882,
      882,  882,  882,  882,  882,  882,  882,  882,  882,  882,

      882,  882,  882,  882,  882,  882,  883,  883,  883,  883,
      883,  883,  883,  883,  883,  883,  883,  883,  883,  883,
      883,  883,  883,  884,  884,  884,  884,  884,  884,  884,
      884,  884,  884,  884,  884,  884,  884,  884,  884,  884,
      885,  885,  885,  885,  885,  885,  885,  885,  885,  885,
      885,  885,  885,  885,  885,  885,  885,  886,  886,  886,
      886,  886,  886,  886,  886,  886,  886,  888,  888,  888,
      888,  888,  888,  888,  888,  888,  888,  889,  889,  889,
      889,  889,  889,  889,  889,  889,  889,  889,  889,  889,
      889,  889,  889,  889,  896,  896,  896,  896,  896,  896,

      896,  896,  896,  896,  896,  896,  896,  896,  896,  896,
      896,  897,  897,  897,  897,  897,  897,  897,  897,  897,
      897,  897,  897,  897,  897,  897,  897,  897,  898,  898,
      898,  898,  898,  898,  898,  898,  898,  898,  898,  898,
      898,  898,  898,  898,  898,  899,  899,  899,  899,  899,
      899,  899,  899,  899,  899,  899,  899,  899,  899,  899,
      899,  899,  900,  900,  900,  900,  900,  900,  900,  900,
      900,  900,  900,  900,  900,  900,  900,  900,  900,  901,
      901,  901,  901,  901,  901,  901,  901,  901,  901,  901,
      901,  901,  901,  901,  901,  901,  902,  902,  902,  902,

      902,  902,  902,  902,  902,  902,  902,  902,  902,  902,
      902,  902,  902,  903,  903,  903,  903,  903,  903,  903,
      903,  903,  903,  903,  903,  903,  903,  903,  903,  903,
      904,  904,  904,  904,  904,  904,  904,  904,  904,  904,
      904,  904,  904,  904,  904,  904,  904,  905,  905,  905,
      905,  905,  905,  905,  905,  905,  905,  905,  905,  905,
      905,  905,  905,  905,  907,  907,  907,  907,  907,  907,
      907,  907,  907,  907,  907,  907,  907,  907,  907,  907,
      907,  908,  908,  908,  908,  908,  908,  908,  908,  908,
      908,  908,  908,  908,  908,  908,  908,  908,  909,    0,

      910,    0,    0,    0,    0,    0,  909,    0,  910,    0,
        0,  909,  909,  910,  910,    0,    0,    0,    0,    0,
        0,  909,    0,  910,    0,    0,  911,    0,  909,    0,
      910,    0,  909,    0,  911,    0,  909,    0,  910,  911,
      911,  909,  909,  910,  910,    0,    0,    0,    0,  911,
        0,  909,    0,  910,    0,    0,  911,    0,    0,    0,
        0,    0,    0,    0,  911,    0,    0,    0,    0,  911,
      911,  941,  941,  941,  941,  941,  941,  941,  941,  911,
      912,  913,  913,  913,  913,  913,  913,  913,  913,  913,
      913,  913,  913,  913,  913,  913,  913,  913,  915,  915,

      915,  915,  915,  915,  915,  915,  915,  915,  915,  915,
      915,  915,  915,  915,  915,  916,  916,  916,  916,  916,
      916,  916,  916,  916,  916,  916,  916,  916,  916,  916,
      916,  916,    0,    0,    0,  912,  917,  917,  917,  917,
      917,  917,  917,  917,  917,  917,  917,  917,  917,  917,
      917,  917,  917,  918,  918,  918,  918,  918,  918,  918,
      918,  918,  918,  918,  918,  918,  918,  918,  918,  918,
        0,    0,    0,  912,  942,  942,  942,  942,  942,  942,
      942,  942,    0,  912,    0,  912,  912,  912,  912,  912,
      912,  912,  912,  912,  912,  912,  912,  912,  912,  912,

      912,  912,  919,  919,  919,  919,  919,  919,  919,  919,
      919,  919,  919,  919,  919,  919,  919,  919,  919,  920,
      920,  920,  920,  920,  920,  920,  920,  920,  920,  920,
      920,  920,  920,  920,  920,  920,  921,  921,  921,  921,
      921,  921,  921,  921,  921,  921,  921,  921,  921,  921,
      921,  921,  921,  927,  927,  927,  927,  927,  927,  927,
      927,  927,  927,  927,  927,  927,  927,  927,  927,  927,
      928,  928,  928,  928,  928,  928,  928,  928,  928,  928,
      928,  928,  928,  928,  928,  928,  928,  930,  931,  931,
      931,  931,  931,  931,  931,  931,  931,  931,  931,  931,

      931,  931,  931,  931,  931,  933,  933,  933,  933,  933,
      933,  933,  933,  933,  933,  933,  933,  933,  933,  933,
      933,  933,  943,  943,  943,  943,  943,  943,  943,  943,
        0,    0,    0,    0,    0,    0,    0,  930,  934,  934,
      934,  934,  934,  934,  934,  934,  934,  934,  934,  934,
      934,  934,  934,  934,  934,  935,  935,  935,  935,  935,
      935,  935,  935,  935,  935,  935,  935,  935,  935,  935,
      935,  935,    0,    0,    0,  930,  944,  944,  944,  944,
      944,  944,  944,  944,    0,  930,    0,  930,  930,  930,
      930,  930,  930,  930,  930,  930,  930,  930,  930,  930,

      930,  930,  930,  930,  936,  936,  936,  936,  936,  936,
      936,  936,  936,  936,  936,  936,  936,  936,  936,  936,
      936,  937,  937,  937,  937,  937,  937,  937,  937,  937,
      937,  937,  937,  937,  937,  937,  937,  937,  938,  938,
      938,  938,  938,  938,  938,  938,  938,  938,  938,  938,
      938,  938,  938,  938,  938,  939,  939,  939,  939,  939,
      939,  939,  939,  939,  939,  939,  939,  939,  939,  939,
      939,  939,  945,  945,  945,  945,  945,  945,  945,  945,
      946,  946,  946,  946,  946,  946,  946,  946,  947,  947,
      947,  947,  947,  947,  947,  947,  953,  953,  953,  953,

      953,  953,  953,  953,  953,  953,  953,  953,  953,  953,
      953,  953,  953,  954,  954,  954,  954,  954,  954,  954,
      954,  954,  954,  954,  954,  954,  954,  954,  954,  954,
      961,  961,  961,  961,  961,  961,  961,  961,  961,  961,
      961,  961,  961,  961,  961,  961,  961,  962,  962,  962,
      962,  962,  962,  962,  962,  962,  962,  962,  962,  962,
      962,  962,  962,  962,  964,    0,  965,    0,  966,    0,
        0,    0,  964,    0,  965,    0,  966,  964,  964,  965,
      965,  966,  966,    0,    0,    0,    0,  964,    0,  965,
        0,  966,    0,    0,  964,    0,  965,    0,  966,    0,

        0,    0,  964,    0,  965,    0,  966,  964,  964,  965,
      965,  966,  966,    0,  967,    0,  968,  964,  969,  965,
        0,  966,  967,    0,  968,    0,  969,  967,  967,  968,
      968,  969,  969,    0,    0,  969,    0,  967,    0,  968,
        0,  969,    0,    0,  967,    0,  968,    0,  969,    0,
        0,    0,  967,    0,  968,    0,  969,  967,  967,  968,
      968,  969,  969,    0,  970,  969,    0,  967,    0,  968,
        0,  969,  970,    0,    0,  971,    0,  970,  970,    0,
        0,    0,  970,  971,    0,    0,    0,  970,  971,  971,
        0,  971,    0,    0,  970,    0,    0,    0,  971,    0,

        0,  972,  970,    0,    0,  971,    0,  970,  970,  972,
        0,    0,  970,  971,  972,  972,    0,  970,  971,  971,
        0,  971,    0,    0,  972,    0,    0,  973,  971,  974,
        0,  972,    0,  974,    0,  973,    0,  974,    0,  972,
      973,  973,  974,  974,  972,  972,    0,    0,    0,    0,
      973,    0,  974,    0,  972,    0,    0,  973,    0,  974,
        0,  975,    0,  974,    0,  973,    0,  974,    0,  975,
      973,  973,  974,  974,  975,  975,    0,    0,    0,  976,
      973,    0,  974,    0,  975,    0,    0,  976,    0,    0,
      976,  975,  976,  976,    0,    0,    0,    0,    0,  975,

        0,    0,  976,    0,  975,  975,    0,    0,    0,  976,
        0,  977,    0,  978,  975,  977,    0,  976,    0,  977,
      976,  978,  976,  976,  977,  977,  978,  978,    0,    0,
        0,    0,  976,    0,  977,    0,  978,    0,    0,  979,
        0,  977,    0,  978,    0,  977,    0,  979,    0,  977,
        0,  978,  979,  979,  977,  977,  978,  978,    0,    0,
        0,    0,  979,    0,  977,    0,  978,  980,    0,  979,
        0,  980,    0,    0,    0,  980,    0,  979,    0,    0,
      980,  980,  979,  979,    0,  981,    0,    0,    0,    0,
      980,    0,  979,  981,    0,    0,    0,  980,  981,  981,

        0,  980,  981,    0,    0,  980,    0,    0,  981,    0,
      980,  980,    0,  983,    0,  981,    0,  982,    0,    0,
      980,  983,    0,  981,    0,  982,  983,  983,  981,  981,
      982,  982,  981,  982,    0,    0,  983,    0,  981,    0,
      982,    0,    0,  983,    0,  984,    0,  982,    0,    0,
        0,  983,    0,  984,    0,  982,  983,  983,  984,  984,
      982,  982,    0,  982,  985,    0,  983,    0,  984,    0,
      982,    0,  985,    0,    0,  984,    0,  985,  985,    0,
        0,    0,    0,  984,    0,    0,    0,  985,  984,  984,
        0,  986,    0,  985,  985,    0,    0,  986,  984,  986,

        0,    0,  985,    0,  986,  986,    0,  985,  985,    0,
      987,    0,    0,    0,  986,    0,    0,  985,  987,    0,
        0,  986,    0,  987,  987,    0,    0,  986,  988,  986,
        0,    0,    0,  987,  986,  986,  988,    0,    0,    0,
      987,  988,  988,    0,  986,    0,  988,  989,  987,    0,
        0,  988,    0,  987,  987,  989,    0,    0,  988,    0,
      989,  989,    0,  987,    0,  990,  988,    0,    0,    0,
      989,  988,  988,  990,    0,    0,  988,  989,  990,  990,
        0,  988,    0,    0,    0,  989,    0,    0,  990,    0,
      989,  989,    0,  991,    0,  990,    0,  991,    0,    0,

      989,  991,    0,  990,    0,    0,  991,  991,  990,  990,
        0,  992,    0,    0,    0,  992,  991,    0,  990,  992,
        0,    0,    0,  991,  992,  992,    0,  991,    0,    0,
      993,  991,    0,    0,  992,    0,  991,  991,  993,    0,
        0,  992,    0,  993,  993,  992,  991,    0,  994,  992,
        0,    0,    0,  993,  992,  992,  994,    0,    0,    0,
      993,  994,  994,    0,  992,    0,    0,  995,  993,    0,
        0,  994,    0,  993,  993,  995,    0,    0,  994,    0,
      995,  995,    0,  993,    0,  996,  994,    0,    0,    0,
      995,  994,  994,  996,    0,    0,    0,  995,  996,  996,

        0,  994,    0,    0,    0,  995,    0,    0,  996,    0,
      995,  995,    0,  999,    0,  996,    0,  998,    0,    0,
      995,  999,    0,  996,    0,  998,  999,  999,  996,  996,
      998,  998,    0,  998,    0,    0,  999,    0,  996,    0,
      998,    0,    0,  999,    0, 1000,    0,  998,    0, 1000,
        0,  999,    0, 1000,    0,  998,  999,  999, 1000, 1000,
      998,  998,    0,  998, 1001,    0,  999,    0, 1000,    0,
      998,    0, 1001,    0,    0, 1000,    0, 1001, 1001, 1000,
        0,    0, 1002, 1000,    0,    0,    0, 1001, 1000, 1000,
     1002,    0,    0,    0, 1001, 1002, 1002,    0, 1000,    0,

        0, 1003, 1001,    0,    0, 1002,    0, 1001, 1001, 1003,
        0,    0, 1002,    0, 1003, 1003,    0, 1001,    0, 1003,
     1002,    0,    0,    0, 1003, 1002, 1002,    0, 1004,    0,
        0, 1003,    0,    0,    0, 1002, 1004,    0,    0, 1003,
        0, 1004, 1004,    0, 1003, 1003,    0, 1005,    0, 1003,
        0, 1004,    0,    0, 1003, 1005,    0,    0, 1004,    0,
     1005, 1005,    0,    0,    0, 1006, 1004,    0,    0,    0,
     1005, 1004, 1004, 1006,    0,    0,    0, 1005, 1006, 1006,
        0, 1004,    0,    0, 1007, 1005,    0, 1006, 1006,    0,
     1005, 1005, 1007,    0,    0, 1006,    0, 1007, 1007,    0,

     1005,    0, 1008, 1006,    0,    0, 1008, 1007, 1006, 1006,
     1008,    0,    0,    0, 1007, 1008, 1008, 1006, 1006,    0,
        0, 1009, 1007,    0,    0, 1008,    0, 1007, 1007, 1009,
        0,    0, 1008,    0, 1009, 1009, 1008, 1007,    0, 1010,
     1008,    0,    0,    0, 1009, 1008, 1008, 1010,    0,    0,
        0, 1009, 1010, 1010,    0, 1008,    0,    0,    0, 1009,
        0,    0, 1010,    0, 1009, 1009,    0, 1011,    0, 1010,
        0, 1011,    0,    0, 1009, 1011,    0, 1010,    0,    0,
     1011, 1011, 1010, 1010,    0, 1012,    0,    0,    0, 1012,
     1011,    0, 1010, 1012,    0,    0,    0, 1011, 1012, 1012,

        0, 1011,    0,    0, 1013, 1011,    0, 1013, 1012,    0,
     1011, 1011, 1013,    0,    0, 1012,    0, 1013, 1013, 1012,
     1011,    0, 1014, 1012,    0,    0,    0, 1013, 1012, 1012,
     1014,    0,    0,    0, 1013, 1014, 1014, 1013, 1012,    0,
     1014, 1015, 1013,    0,    0, 1014,    0, 1013, 1013, 1015,
        0,    0, 1014,    0, 1015, 1015,    0, 1013,    0, 1016,
     1014, 1016,    0,    0, 1015, 1014, 1014, 1016,    0,    0,
     1014, 1015, 1016, 1016,    0, 1014,    0,    0,    0, 1015,
        0,    0, 1016,    0, 1015, 1015,    0, 1021,    0, 1016,
        0, 1016,    0,    0, 1015, 1021,    0, 1016,    0,    0,

     1021, 1021, 1016, 1016,    0, 1021, 1022,    0,    0,    0,
     1021,    0, 1016,    0, 1022,    0,    0, 1021,    0, 1022,
     1022,    0,    0, 1022, 1023, 1021,    0,    0,    0, 1022,
     1021, 1021, 1023,    0,    0, 1021, 1022, 1023, 1023,    0,
     1021,    0,    0, 1024, 1022,    0, 1024, 1023,    0, 1022,
     1022, 1024,    0, 1022, 1023,    0, 1024, 1024,    0, 1022,
        0, 1025, 1023,    0,    0,    0, 1024, 1023, 1023, 1025,
        0,    0,    0, 1024, 1025, 1025, 1024, 1023,    0,    0,
     1026, 1024,    0,    0, 1025,    0, 1024, 1024, 1026,    0,
        0, 1025,    0, 1026, 1026,    0, 1024,    0, 1027, 1025,

        0,    0,    0, 1026, 1025, 1025, 1027,    0,    0,    0,
     1026, 1027, 1027,    0, 1025,    0,    0,    0, 1026,    0,
        0, 1027,    0, 1026, 1026,    0, 1029,    0, 1027,    0,
     1028,    0,    0, 1026, 1029,    0, 1027,    0, 1028, 1029,
     1029, 1027, 1027, 1028, 1028,    0, 1028,    0,    0, 1029,
        0, 1027,    0, 1028,    0,    0, 1029,    0, 1030,    0,
     1028,    0,    0,    0, 1029,    0, 1030,    0, 1028, 1029,
     1029, 1030, 1030, 1028, 1028,    0, 1028, 1031,    0, 1029,
        0, 1030,    0, 1028,    0, 1031,    0,    0, 1030,    0,
     1031, 1031,    0,    0,    0, 1032, 1030,    0,    0,    0,

     1031, 1030, 1030, 1032,    0,    0,    0, 1031, 1032, 1032,
        0, 1030,    0,    0,    0, 1031,    0,    0, 1032,    0,
     1031, 1031,    0, 1033,    0, 1032,    0, 1033,    0,    0,
     1031, 1033,    0, 1032,    0,    0, 1033, 1033, 1032, 1032,
        0, 1034,    0,    0,    0,    0, 1033,    0, 1032, 1034,
        0,    0,    0, 1033, 1034, 1034,    0, 1033,    0,    0,
     1035, 1033,    0,    0, 1034,    0, 1033, 1033, 1035,    0,
        0, 1034,    0, 1035, 1035,    0, 1033,    0,    0, 1034,
        0,    0,    0, 1035, 1034, 1034,    0,    0,    0,    0,
     1035,    0,    0,    0, 1034,    0,    0,    0, 1035,    0,

        0,    0,    0, 1035, 1035,    0,    0,    0,    0,    0,
        0,    0,    0, 1035, 1045, 1045, 1045, 1045, 1045, 1045,
     1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045,
     1045, 1046, 1046, 1046, 1046, 1046, 1046, 1046, 1046, 1046,
     1046, 1046, 1046, 1046, 1046, 1046, 1046, 1046, 1047, 1047,
     1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047,
     1047, 1047, 1047, 1047, 1047, 1048, 1048, 1048, 1048, 1048,
     1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048,
     1048, 1048, 1049, 1049, 1049, 1049, 1049, 1049, 1049, 1049,
     1049, 1049, 1049, 1049, 1049, 1049, 1049, 1049, 1049, 1050,

     1050, 1050, 1050, 1050, 1050, 1050, 1050, 1050, 1050, 1050,
     1050, 1050, 1050, 1050, 1050, 1050, 1051, 1051, 1051, 1051,
     1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051,
     1051, 1051, 1051, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1053, 1053, 1053, 1053, 1053, 1053, 1053, 1053, 1053, 1053,
     1053, 1053, 1053, 1053, 1053, 1053, 1053, 1054, 1054, 1054,
     1054, 1054, 1054, 1054, 1054, 1054, 1054, 1054, 1054, 1054,
     1054, 1054, 1054, 1054, 1056, 1056, 1056, 1056, 1056, 1056,
     1056, 1056, 1056, 1056, 1056, 1056, 1056, 1056, 1056, 1056,

     1056, 1057, 1057, 1057, 1057, 1057, 1057, 1057, 1057, 1057,
     1057, 1057, 1057, 1057, 1057, 1057, 1057, 1057, 1063, 1063,
     1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063,
     1063, 1063, 1063, 1063, 1063, 1064, 1064, 1064, 1064, 1064,
     1064, 1064, 1064, 1064, 1064, 1064, 1064, 1064, 1064, 1064,
     1064, 1064, 1065,    0,    0,    0,    0,    0,    0,    0,
     1065,    0,    0,    0,    0, 1065, 1065,    0,    0,    0,
        0,    0,    0,    0,    0, 1065,    0,    0,    0,    0,
        0,    0, 1065,    0,    0,    0,    0,    0,    0,    0,
     1065,    0,    0,    0,    0, 1065, 1065,    0,    0,    0,

        0,    0,    0,    0,    0, 1065, 1067, 1068, 1068, 1068,
     1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068,
     1068, 1068, 1068, 1068, 1069, 1069, 1069, 1069, 1069, 1069,
     1069, 1069, 1069, 1069, 1069, 1069, 1069, 1069, 1069, 1069,
     1069, 1070, 1070, 1070, 1070, 1070, 1070, 1070, 1070, 1070,
     1070, 1070, 1070, 1070, 1070, 1070, 1070, 1070,    0,    0,
        0, 1067, 1074, 1074, 1074, 1074, 1074, 1074, 1074, 1074,
     1074, 1074, 1074, 1074, 1074, 1074, 1074, 1074, 1074, 1075,
     1075, 1075, 1075, 1075, 1075, 1075, 1075, 1075, 1075, 1075,
     1075, 1075, 1075, 1075, 1075, 1075,    0,    0,    0, 1067,

        0,    0,    0,    0,    0,    0,    0,    0,    0, 1067,
        0, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067,
     1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 1073, 1076,
     1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
     1076, 1076, 1076, 1076, 1076, 1076, 1079,    0,    0, 1080,
        0, 1080, 1079,    0, 1079,    0,    0, 1080,    0, 1079,
     1079,    0, 1080, 1080,    0,    0,    0,    0,    0, 1079,
        0,    0, 1080,    0,    0,    0, 1079,    0, 1073, 1080,
        0, 1080, 1079,    0, 1079,    0,    0, 1080,    0, 1079,
     1079,    0, 1080, 1080,    0,    0,    0,    0,    0, 1079,

        0,    0, 1080,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 1073,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 1073,    0, 1073, 1073,
     1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073,
     1073, 1073, 1073, 1073, 1073, 1081,    0, 1082,    0, 1083,
        0,    0,    0, 1081,    0, 1082,    0, 1083, 1081, 1081,
     1082, 1082, 1083, 1083,    0,    0, 1082,    0, 1081,    0,
     1082,    0, 1083,    0,    0, 1081,    0, 1082,    0, 1083,
        0,    0,    0, 1081,    0, 1082,    0, 1083, 1081, 1081,
     1082, 1082, 1083, 1083,    0, 1084, 1082, 1085, 1081,    0,

     1082,    0, 1083, 1084,    0, 1085,    0,    0, 1084, 1084,
     1085, 1085, 1085,    0,    0,    0,    0,    0, 1084,    0,
     1085, 1087, 1087, 1087, 1087, 1084,    0, 1085,    0,    0,
        0,    0,    0, 1084,    0, 1085,    0,    0, 1084, 1084,
     1085, 1085, 1085, 1086,    0,    0,    0,    0, 1084,    0,
     1085, 1086,    0,    0,    0, 1087, 1086, 1086,    0,    0,
        0, 1086,    0, 1087,    0,    0, 1086,    0, 1087, 1087,
        0,    0,    0, 1086,    0,    0,    0,    0, 1087,    0,
        0, 1086,    0,    0,    0, 1087, 1086, 1086,    0, 1088,
     1088, 1086, 1089, 1087, 1089,    0, 1086, 1088, 1087, 1087,

     1089,    0, 1088, 1088,    0, 1089, 1089,    0, 1087,    0,
        0,    0, 1088,    0, 1090, 1089,    0,    0,    0, 1088,
     1088,    0, 1089,    0, 1089,    0, 1091, 1088,    0,    0,
     1089,    0, 1088, 1088, 1091, 1089, 1089,    0, 1090, 1091,
     1091,    0, 1088,    0,    0, 1089, 1090,    0,    0, 1091,
        0, 1090, 1090,    0,    0,    0, 1091,    0,    0,    0,
        0, 1090,    0,    0, 1091,    0,    0,    0, 1090, 1091,
     1091,    0, 1092,    0,    0, 1093, 1090, 1093,    0, 1091,
     1092, 1090, 1090, 1093,    0, 1092, 1092,    0, 1093, 1093,
        0, 1090,    0,    0,    0, 1092,    0,    0, 1093,    0,

        0,    0, 1092,    0,    0, 1093,    0, 1093,    0, 1094,
     1092,    0,    0, 1093,    0, 1092, 1092, 1094, 1093, 1093,
        0,    0, 1094, 1094,    0, 1092,    0,    0, 1093,    0,
        0,    0, 1094, 1095, 1095, 1095, 1095,    0,    0, 1094,
        0,    0,    0,    0,    0,    0,    0, 1094,    0,    0,
        0,    0, 1094, 1094,    0, 1096,    0,    0,    0,    0,
        0,    0, 1094, 1096,    0, 1096,    0, 1095, 1096, 1096,
        0,    0,    0,    0,    0, 1095,    0,    0, 1096,    0,
     1095, 1095,    0,    0,    0, 1096,    0,    0,    0,    0,
     1095,    0,    0, 1096,    0, 1096,    0, 1095, 1096, 1096,

        0, 1097,    0,    0,    0, 1095,    0,    0, 1096, 1097,
     1095, 1095,    0, 1098, 1097, 1097,    0, 1097,    0,    0,
     1095, 1098,    0,    0, 1097,    0, 1098, 1098,    0, 1098,
        0, 1097,    0,    0,    0,    0, 1098,    0,    0, 1097,
        0,    0,    0, 1098, 1097, 1097,    0, 1097,    0,    0,
     1099, 1098,    0,    0, 1097,    0, 1098, 1098, 1099, 1098,
        0, 1100,    0, 1099, 1099,    0, 1098,    0, 1099, 1100,
        0,    0,    0, 1099, 1100, 1100,    0,    0, 1100,    0,
     1099,    0,    0,    0, 1100,    0,    0,    0, 1099,    0,
        0, 1100,    0, 1099, 1099,    0,    0,    0, 1099, 1100,

        0,    0, 1101, 1099, 1100, 1100,    0,    0, 1100,    0,
     1101,    0,    0, 1102, 1100, 1101, 1101,    0,    0, 1101,
        0, 1102,    0,    0,    0, 1101, 1102, 1102,    0,    0,
        0,    0, 1101,    0,    0,    0, 1102,    0,    0, 1103,
     1101,    0,    0, 1102,    0, 1101, 1101, 1103,    0, 1101,
     1104, 1102, 1103, 1103,    0, 1101, 1102, 1102, 1104,    0,
        0,    0, 1103, 1104, 1104,    0, 1102,    0,    0, 1103,
        0,    0,    0, 1104,    0,    0, 1105, 1103,    0, 1105,
     1104,    0, 1103, 1103, 1105,    0,    0,    0, 1104, 1105,
     1105,    0, 1103, 1104, 1104,    0,    0,    0,    0, 1105,

        0,    0, 1106, 1104,    0,    0, 1105,    0,    0, 1105,
     1106,    0,    0, 1107, 1105, 1106, 1106,    0, 1106, 1105,
     1105, 1107,    0,    0,    0, 1106, 1107, 1107,    0, 1105,
        0,    0, 1106,    0,    0,    0, 1107,    0,    0, 1109,
     1106,    0,    0, 1107,    0, 1106, 1106, 1109, 1106,    0,
     1108, 1107, 1109, 1109,    0, 1106, 1107, 1107, 1108,    0,
        0,    0, 1109, 1108, 1108,    0, 1107, 1108,    0, 1109,
        0,    0,    0, 1108,    0,    0,    0, 1109,    0,    0,
     1108,    0, 1109, 1109,    0,    0,    0, 1110, 1108,    0,
        0,    0, 1109, 1108, 1108, 1110,    0, 1108, 1111,    0,

     1110, 1110, 1111, 1108,    0, 1110, 1111,    0,    0,    0,
     1110, 1111, 1111,    0,    0,    0,    0, 1110,    0,    0,
        0, 1111,    0,    0,    0, 1110,    0,    0, 1111,    0,
     1110, 1110, 1111,    0,    0, 1110, 1111,    0,    0, 1117,
     1110, 1111, 1111,    0,    0,    0,    0, 1117,    0,    0,
     1118, 1111, 1117, 1117,    0,    0,    0,    0, 1118,    0,
        0,    0, 1117, 1118, 1118,    0,    0,    0,    0, 1117,
        0,    0,    0, 1118,    0,    0,    0, 1117,    0,    0,
     1118,    0, 1117, 1117,    0,    0,    0, 1119, 1118,    0,
        0,    0, 1117, 1118, 1118, 1119,    0,    0,    0, 1120,

     1119, 1119,    0, 1118, 1119, 1120,    0, 1120,    0,    0,
     1119,    0, 1120, 1120,    0,    0,    0, 1119,    0,    0,
        0,    0, 1120,    0,    0, 1119,    0,    0,    0, 1120,
     1119, 1119,    0, 1121, 1119, 1120,    0, 1120,    0,    0,
     1119, 1121, 1120, 1120,    0, 1122, 1121, 1121,    0,    0,
        0,    0, 1120, 1122,    0,    0, 1121,    0, 1122, 1122,
        0, 1122,    0, 1121,    0,    0,    0,    0, 1122,    0,
        0, 1121,    0,    0,    0, 1122, 1121, 1121,    0, 1123,
        0,    0, 1124, 1122,    0,    0, 1121, 1123, 1122, 1122,
     1124, 1122, 1123, 1123,    0, 1124, 1124,    0, 1122,    0,

        0,    0, 1123,    0,    0, 1124,    0,    0,    0, 1123,
        0,    0, 1124,    0,    0,    0, 1134, 1123,    0,    0,
     1124,    0, 1123, 1123, 1134, 1124, 1124,    0, 1125, 1134,
     1134,    0, 1123, 1134,    0, 1124, 1125,    0,    0, 1134,
        0, 1125, 1125,    0, 1125,    0, 1134,    0,    0,    0,
        0, 1125,    0,    0, 1134,    0,    0,    0, 1125, 1134,
     1134,    0,    0, 1134,    0,    0, 1125,    0,    0, 1134,
        0, 1125, 1125,    0, 1125,    0,    0,    0,    0,    0,
        0, 1125, 1131, 1131, 1131, 1131, 1131, 1131, 1131, 1131,
     1131, 1131, 1131, 1131, 1131, 1131, 1131, 1131, 1131, 1132,

     1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132,
     1132, 1132, 1132, 1132, 1132, 1132, 1135,    0,    0, 1136,
     1135, 1136,    0,    0, 1135,    0,    0, 1136,    0, 1135,
     1135,    0, 1136, 1136,    0,    0,    0,    0,    0, 1135,
        0,    0, 1136,    0,    0,    0, 1135,    0,    0, 1136,
     1135, 1136,    0, 1137, 1135,    0,    0, 1136,    0, 1135,
     1135, 1137, 1136, 1136,    0,    0, 1137, 1137,    0, 1135,
     1137, 1138, 1136,    0,    0, 1138, 1137,    0,    0, 1138,
        0,    0,    0, 1137, 1138, 1138,    0,    0,    0,    0,
     1139, 1137,    0,    0, 1138,    0, 1137, 1137, 1139,    0,

     1137, 1138,    0, 1139, 1139, 1138, 1137,    0, 1141, 1138,
        0,    0, 1141, 1139, 1138, 1138, 1141,    0,    0,    0,
     1139, 1141, 1141,    0, 1138,    0,    0, 1142, 1139,    0,
        0, 1141,    0, 1139, 1139, 1142,    0,    0, 1141,    0,
     1142, 1142, 1141, 1139,    0, 1142, 1141,    0,    0,    0,
     1142, 1141, 1141,    0, 1144,    0,    0, 1142,    0,    0,
        0, 1141, 1144,    0,    0, 1142,    0, 1144, 1144,    0,
     1142, 1142,    0, 1146,    0, 1142,    0, 1144,    0,    0,
     1142, 1146,    0,    0, 1144,    0, 1146, 1146,    0,    0,
        0, 1147, 1144,    0,    0,    0, 1146, 1144, 1144, 1147,

        0,    0,    0, 1146, 1147, 1147,    0, 1144,    0,    0,
     1148, 1146,    0,    0, 1147,    0, 1146, 1146, 1148,    0,
        0, 1147,    0, 1148, 1148,    0, 1146,    0, 1149, 1147,
     1149,    0,    0, 1148, 1147, 1147, 1149,    0,    0,    0,
     1148, 1149, 1149,    0, 1147,    0,    0,    0, 1148,    0,
        0, 1149,    0, 1148, 1148,    0, 1150,    0, 1149,    0,
     1149,    0,    0, 1148, 1150,    0, 1149,    0,    0, 1150,
     1150, 1149, 1149,    0, 1151,    0,    0,    0,    0, 1150,
        0, 1149, 1151,    0,    0,    0, 1150, 1151, 1151,    0,
        0,    0,    0,    0, 1150,    0,    0, 1151,    0, 1150,

     1150,    0, 1152,    0, 1151,    0, 1153,    0,    0, 1150,
     1152,    0, 1151, 1152, 1153, 1152, 1152, 1151, 1151, 1153,
     1153,    0,    0,    0,    0, 1152,    0, 1151,    0, 1153,
        0,    0, 1152,    0,    0,    0, 1153,    0,    0, 1154,
     1152,    0,    0, 1152, 1153, 1152, 1152, 1154,    0, 1153,
     1153, 1154, 1154, 1154,    0, 1152,    0, 1155,    0, 1153,
        0,    0, 1154,    0,    0, 1155,    0,    0,    0, 1154,
     1155, 1155,    0,    0,    0,    0, 1156, 1154,    0,    0,
     1155, 1154, 1154, 1154, 1156,    0,    0, 1155,    0, 1156,
     1156,    0, 1154,    0, 1157, 1155,    0,    0,    0, 1156,

     1155, 1155, 1157,    0,    0,    0, 1156, 1157, 1157,    0,
     1155,    0,    0, 1162, 1156,    0,    0, 1157,    0, 1156,
     1156, 1162,    0,    0, 1157,    0, 1162, 1162,    0, 1156,
        0, 1163, 1157,    0,    0,    0, 1162, 1157, 1157, 1163,
        0,    0,    0, 1162, 1163, 1163,    0, 1157,    0,    0,
     1164, 1162,    0,    0, 1163,    0, 1162, 1162, 1164,    0,
        0, 1163,    0, 1164, 1164,    0, 1162,    0, 1164, 1163,
        0,    0,    0, 1164, 1163, 1163,    0, 1165,    0,    0,
     1164, 1165,    0,    0, 1163, 1165,    0,    0, 1164,    0,
     1165, 1165,    0, 1164, 1164,    0,    0,    0, 1164,    0,

     1165,    0,    0, 1164, 1166,    0,    0, 1165, 1166,    0,
        0, 1165, 1166,    0,    0, 1165,    0, 1166, 1166,    0,
     1165, 1165,    0, 1168,    0,    0,    0, 1166,    0,    0,
     1165, 1168,    0,    0, 1166,    0, 1168, 1168, 1166,    0,
        0, 1169, 1166,    0,    0,    0, 1168, 1166, 1166, 1169,
        0,    0,    0, 1168, 1169, 1169,    0, 1166,    0,    0,
     1170, 1168,    0,    0, 1169,    0, 1168, 1168, 1170,    0,
        0, 1169,    0, 1170, 1170,    0, 1168,    0, 1170, 1169,
        0,    0,    0, 1170, 1169, 1169,    0, 1171,    0,    0,
     1170,    0,    0,    0, 1169, 1171,    0,    0, 1170,    0,

     1171, 1171,    0, 1170, 1170,    0, 1172,    0, 1170,    0,
     1171,    0,    0, 1170, 1172,    0,    0, 1171,    0, 1172,
     1172,    0,    0,    0, 1175, 1171,    0,    0,    0, 1172,
     1171, 1171, 1175,    0,    0,    0, 1172, 1175, 1175,    0,
     1171,    0,    0, 1176, 1172,    0,    0, 1175,    0, 1172,
     1172, 1176,    0,    0, 1175,    0, 1176, 1176,    0, 1172,
        0, 1178, 1175,    0,    0,    0, 1176, 1175, 1175, 1178,
        0,    0,    0, 1176, 1178, 1178,    0, 1175,    0,    0,
        0, 1176,    0,    0, 1178,    0, 1176, 1176,    0, 1180,
        0, 1178,    0, 1181,    0, 1181, 1176, 1180,    0, 1178,

     1180, 1181, 1180, 1180, 1178, 1178, 1181, 1181,    0,    0,
        0,    0, 1180,    0, 1178,    0, 1181,    0,    0, 1180,
        0, 1182,    0, 1181,    0, 1181,    0, 1180, 1182, 1182,
     1180, 1181, 1180, 1180, 1182, 1182, 1181, 1181,    0, 1183,
        0,    0, 1180,    0, 1182,    0, 1181, 1183,    0,    0,
        0, 1182, 1183, 1183,    0,    0,    0,    0, 1182, 1182,
        0,    0, 1183,    0, 1182, 1182,    0, 1184,    0, 1183,
        0, 1185,    0,    0, 1182, 1184,    0, 1183,    0, 1185,
     1184, 1184, 1183, 1183, 1185, 1185,    0, 1185,    0,    0,
     1184,    0, 1183,    0, 1185,    0,    0, 1184,    0, 1190,

        0, 1185,    0,    0,    0, 1184,    0, 1190,    0, 1185,
     1184, 1184, 1190, 1190, 1185, 1185, 1190, 1185, 1191,    0,
     1184,    0, 1190,    0, 1185,    0, 1191,    0,    0, 1190,
        0, 1191, 1191,    0,    0,    0, 1192, 1190,    0, 1192,
        0, 1191, 1190, 1190, 1192,    0, 1190,    0, 1191, 1192,
     1192,    0, 1190,    0,    0,    0, 1191,    0,    0, 1192,
        0, 1191, 1191,    0, 1193,    0, 1192,    0, 1197, 1192,
     1197, 1191, 1193,    0, 1192,    0, 1197, 1193, 1193, 1192,
     1192, 1197, 1197,    0,    0,    0,    0, 1193,    0, 1192,
        0, 1197,    0,    0, 1193,    0, 1199,    0, 1197,    0,

     1197,    0, 1193,    0, 1199,    0, 1197, 1193, 1193, 1199,
     1199, 1197, 1197,    0, 1200,    0,    0, 1193,    0, 1199,
        0, 1197, 1200,    0,    0,    0, 1199, 1200, 1200,    0,
        0,    0,    0,    0, 1199,    0,    0, 1200,    0, 1199,
     1199,    0, 1201,    0, 1200,    0, 1201,    0,    0, 1199,
     1201,    0, 1200,    0,    0, 1201, 1201, 1200, 1200,    0,
     1202,    0,    0,    0,    0, 1201,    0, 1200, 1202,    0,
        0,    0, 1201, 1202, 1202,    0, 1201,    0,    0, 1203,
     1201,    0,    0, 1202,    0, 1201, 1201, 1203,    0,    0,
     1202,    0, 1203, 1203,    0, 1201,    0, 1204, 1202,    0,

        0,    0, 1203, 1202, 1202, 1204,    0,    0,    0, 1203,
     1204, 1204,    0, 1202,    0,    0, 1208, 1203,    0,    0,
     1204,    0, 1203, 1203, 1208,    0,    0, 1204,    0, 1208,
     1208,    0, 1203,    0, 1210, 1204,    0,    0,    0, 1208,
     1204, 1204, 1210,    0,    0,    0, 1208, 1210, 1210,    0,
     1204, 1210,    0, 1214, 1208,    0,    0, 1210,    0, 1208,
     1208, 1214,    0,    0, 1210,    0, 1214, 1214,    0, 1208,
        0, 1214, 1210,    0,    0,    0, 1214, 1210, 1210,    0,
     1216, 1210,    0, 1214,    0,    0,    0, 1210, 1216,    0,
        0, 1214,    0, 1216, 1216,    0, 1214, 1214,    0, 1219,

        0, 1214,    0, 1216,    0,    0, 1214, 1219,    0,    0,
     1216,    0, 1219, 1219,    0,    0,    0,    0, 1216,    0,
        0,    0, 1219, 1216, 1216,    0,    0,    0,    0, 1219,
        0,    0,    0, 1216,    0,    0,    0, 1219,    0,    0,
        0,    0, 1219, 1219,    0,    0,    0,    0,    0,    0,
        0,    0, 1219, 1227,    0, 1227, 1227, 1227, 1227, 1228,
        0, 1228, 1228, 1228, 1228, 1229, 1229, 1229,    0, 1229,
     1230,    0, 1230, 1230, 1230, 1230, 1231, 1231, 1231,    0,
     1231, 1232, 1232, 1232, 1232, 1233, 1233, 1233,    0, 1233,
     1235, 1235, 1235,    0, 1235, 1236, 1236, 1236, 1236, 1236,

     1236, 1237, 1237, 1237, 1237, 1237, 1237, 1238, 1238, 1239,
        0, 1239, 1239, 1239, 1239, 1240,    0, 1240, 1240, 1240,
     1240, 1241,    0, 1241, 1241, 1241, 1241, 1242, 1242, 1242,
     1242, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,

     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226
    } ;

static yyconst flex_int16_t yy_rule_linenum[167] =
    {   0,
      251,  252,  253,  254,  255,  256,  257,  258,  259,  260,
      261,  262,  263,  264,  265,  266,  267,  268,  269,  270,
      271,  272,  273,  274,  275,  276,  277,  278,  279,  280,
      281,  282,  283,  284,  285,  286,  287,  288,  289,  290,
      291,  292,  293,  294,  295,  296,  297,  298,  299,  300,
      301,  302,  303,  304,  305,  306,  307,  308,  309,  310,
      311,  312,  313,  314,  315,  316,  317,  318,  319,  320,
      321,  322,  323,  324,  325,  326,  327,  328,  329,  330,
      331,  332,  333,  334,  335,  336,  337,  338,  339,  340,
      341,  342,  343,  344,  345,  346,  347,  348,  349,  350,

      351,  352,  353,  354,  355,  356,  357,  358,  359,  360,
      361,  362,  363,  364,  365,  366,  367,  368,  369,  370,
      371,  372,  373,  374,  375,  376,  377,  378,  379,  380,
      381,  382,  383,  384,  385,  386,  387,  388,  389,  390,
      391,  392,  393,  394,  395,  396,  397,  398,  399,  400,
      401,  402,  403,  404,  405,  406,  407,  408,  409,  410,
      411,  412,  413,  414,  415,  418
    } ;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
#line 1 "lib/SPARQLfedScanner.lpp"
/* $Id: SPARQLfedScanner.lpp,v 1.4 2008-10-03 07:06:03 eric Exp $ -*- mode: c++ -*- */
/* from yacker grammar http://www.w3.org/2005/01/yacker/uploads/SPARUL_EGP/SPARUL_EGPScanner.ll */
/** Flex scanner for SPARQL + SPARUL */
#line 6 "lib/SPARQLfedScanner.lpp"

#include "SPARQLfedParser/SPARQLfedParser.hpp"
#include "SPARQLfedScanner.hpp"

/* import the parser's token type into a local typedef */
typedef w3c_sw::SPARQLfedParser::token token;
typedef w3c_sw::SPARQLfedParser::token_type token_type;

/* Work around an incompatibility in flex (at least versions 2.5.31 through
 * 2.5.33): it generates code that does not conform to C89.  See Debian bug
 * 333231 <http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=333231>.  */
// #undef yywrap	// ##flex2.5
// #define yywrap() 1	// ##flex2.5

/* By default yylex returns int, we use token_type. Unfortunately yyterminate
 * by default returns 0, which is not of token_type. */
#define yyterminate() return token::__EOF__

/* This disables inclusion of unistd.h, which is not available under Visual C++
 * on Win32. The C++ scanner uses STL streams instead. */
#define YY_NO_UNISTD_H

/*** Flex Declarations and Options ***/
/* enable c++ scanner class generation */
/* change the name of the scanner class. results in "SPARQLfedFlexLexer" */
/* consider using class instead
 * %option yyclass="SPARQLfedScanner"
 * void SPARQLfedFlexLexer::LexerError( yyconst char msg[] )
 */
/* the manual says "somewhat more optimized" */
/* enable scanner to generate debug output. disable this for release
 * versions. */
/* no support for include files is planned */
/* enables the use of start condition stacks */
/* The following paragraph suffices to track locations accurately. Each time
 * yylex is invoked, the begin position is moved onto the end position. */
#line 61 "lib/SPARQLfedScanner.lpp"
#define YY_USER_ACTION  yylloc->columns(yyleng);
#define YY_FATAL_ERROR(msg) do {		\
    throw msg;   \
} while(0)
/* START patterns for SPARQLfed terminals */
/* <IRI_REF> ::= "<" (( [^<>\"{}|^`\\] - [#0000- ] ))* ">" */
/* <STRING_LITERAL_LONG2> ::= "'''" (( (( "'" | "''" ))? ( [^'\\] | ECHAR ) ))* "'''" */
/* END patterns for SPARQLfed terminals */
/* START semantic actions for SPARQLfed terminals */
#line 5151 "lib/SPARQLfedScanner.cpp"

#define INITIAL 0

#ifndef YY_NO_UNISTD_H
/* Special case for "unistd.h", since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
#include <unistd.h>
/* %endif */
#endif

#ifndef YY_EXTRA_TYPE
#define YY_EXTRA_TYPE void *
#endif

/* %if-c-only Reentrant structure and macros (non-C++). */
/* %if-reentrant */
/* %if-c-only */
/* %endif */
/* %if-reentrant */
/* %endif */
/* %endif End reentrant structures and macros. */
/* %if-bison-bridge */
/* %endif */
/* %not-for-header */

/* %ok-for-header */

/* %endif */

#ifndef yytext_ptr
static void yy_flex_strncpy (char *,yyconst char *,int );
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * );
#endif

#ifndef YY_NO_INPUT
/* %if-c-only Standard (non-C++) definition */
/* %not-for-header */

/* %ok-for-header */

/* %endif */
#endif

/* %if-c-only */
/* %endif */

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k */
#define YY_READ_BUF_SIZE 16384
#else
#define YY_READ_BUF_SIZE 8192
#endif /* __ia64__ */
#endif

/* Copy whatever the last rule matched to the standard output. */
#ifndef ECHO
/* %if-c-only Standard (non-C++) definition */
/* %endif */
/* %if-c++-only C++ definition */
#define ECHO LexerOutput( yytext, yyleng )
/* %endif */
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
/* %% [5.0] fread()/read() definition of YY_INPUT goes here unless we're doing C++ \ */\
\
/* %if-c++-only C++ definition \ */\
	if ( (result = LexerInput( (char *) buf, max_size )) < 0 ) \
		YY_FATAL_ERROR( "input in flex scanner failed" );
/* %endif */

#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
/* %if-c-only */
/* %endif */
/* %if-c++-only */
#define YY_FATAL_ERROR(msg) LexerError( msg )
/* %endif */
#endif

/* %if-tables-serialization structures and prototypes */
/* %not-for-header */

/* %ok-for-header */

/* %not-for-header */

/* %tables-yydmap generated elements */
/* %endif */
/* end tables serialization structures and prototypes */

/* %ok-for-header */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1
/* %if-c-only Standard (non-C++) definition */
/* %endif */
/* %if-c++-only C++ definition */
#define YY_DECL int yyFlexLexer::yylex()
/* %endif */
#endif /* !YY_DECL */

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK break;
#endif

/* %% [6.0] YY_RULE_SETUP definition goes here */
#define YY_RULE_SETUP \
	YY_USER_ACTION

/* %not-for-header */

/** The main scanner function which does all the work.
 */
YY_DECL
{
	register yy_state_type yy_current_state;
	register char *yy_cp, *yy_bp;
	register int yy_act;
    
/* %% [7.0] user's declarations go here */
#line 250 "lib/SPARQLfedScanner.lpp"

#line 5315 "lib/SPARQLfedScanner.cpp"

	if ( !(yy_init) )
		{
		(yy_init) = 1;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! (yy_start) )
			(yy_start) = 1;	/* first start state */

		if ( ! yyin )
/* %if-c-only */
/* %endif */
/* %if-c++-only */
			yyin = & std::cin;
/* %endif */

		if ( ! yyout )
/* %if-c-only */
/* %endif */
/* %if-c++-only */
			yyout = & std::cout;
/* %endif */

		if ( ! YY_CURRENT_BUFFER ) {
			yyensure_buffer_stack ();
			YY_CURRENT_BUFFER_LVALUE =
				yy_create_buffer( yyin, YY_BUF_SIZE );
		}

		yy_load_buffer_state(  );
		}

	while ( 1 )		/* loops until end-of-file is reached */
		{
/* %% [8.0] yymore()-related code goes here */
		yy_cp = (yy_c_buf_p);

		/* Support of yytext. */
		*yy_cp = (yy_hold_char);

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

/* %% [9.0] code to set up and find next match goes here */
		yy_current_state = (yy_start);
yy_match:
		do
			{
			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
			if ( yy_accept[yy_current_state] )
				{
				(yy_last_accepting_state) = yy_current_state;
				(yy_last_accepting_cpos) = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 1227 )
					yy_c = yy_meta[(unsigned int) yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			++yy_cp;
			}
		while ( yy_current_state != 1226 );
		yy_cp = (yy_last_accepting_cpos);
		yy_current_state = (yy_last_accepting_state);

yy_find_action:
/* %% [10.0] code to find the action number goes here */
		yy_act = yy_accept[yy_current_state];

		YY_DO_BEFORE_ACTION;

/* %% [11.0] code for yylineno update goes here */

do_action:	/* This label is used only to access EOF actions. */

/* %% [12.0] debug code goes here */
		if ( yy_flex_debug )
			{
			if ( yy_act == 0 )
				std::cerr << "--scanner backing up\n";
			else if ( yy_act < 167 )
				std::cerr << "--accepting rule at line " << yy_rule_linenum[yy_act] <<
				         "(\"" << yytext << "\")\n";
			else if ( yy_act == 167 )
				std::cerr << "--accepting default rule (\"" << yytext << "\")\n";
			else if ( yy_act == 168 )
				std::cerr << "--(end of buffer or a NUL)\n";
			else
				std::cerr << "--EOF (start condition " << YY_START << ")\n";
			}

		switch ( yy_act )
	{ /* beginning of action switch */
/* %% [13.0] actions go here */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = (yy_hold_char);
			yy_cp = (yy_last_accepting_cpos);
			yy_current_state = (yy_last_accepting_state);
			goto yy_find_action;

case 1:
/* rule 1 can match eol */
YY_RULE_SETUP
#line 251 "lib/SPARQLfedScanner.lpp"
{ yylloc->end.lines(1); }
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 252 "lib/SPARQLfedScanner.lpp"
{ yylloc->step(); /* @@ needed? useful? */ }
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 253 "lib/SPARQLfedScanner.lpp"
{return token::IT_BASE;}
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 254 "lib/SPARQLfedScanner.lpp"
{return token::IT_PREFIX;}
	YY_BREAK
case 5:
YY_RULE_SETUP
#line 255 "lib/SPARQLfedScanner.lpp"
{return token::IT_SELECT;}
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 256 "lib/SPARQLfedScanner.lpp"
{return token::IT_DISTINCT;}
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 257 "lib/SPARQLfedScanner.lpp"
{return token::IT_REDUCED;}
	YY_BREAK
case 8:
YY_RULE_SETUP
#line 258 "lib/SPARQLfedScanner.lpp"
{return token::IT_AS;}
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 259 "lib/SPARQLfedScanner.lpp"
{return token::GT_LPAREN;}
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 260 "lib/SPARQLfedScanner.lpp"
{return token::GT_RPAREN;}
	YY_BREAK
case 11:
YY_RULE_SETUP
#line 261 "lib/SPARQLfedScanner.lpp"
{return token::GT_TIMES;}
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 262 "lib/SPARQLfedScanner.lpp"
{return token::IT_CONSTRUCT;}
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 263 "lib/SPARQLfedScanner.lpp"
{return token::IT_DESCRIBE;}
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 264 "lib/SPARQLfedScanner.lpp"
{return token::IT_ASK;}
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 265 "lib/SPARQLfedScanner.lpp"
{return token::IT_FROM;}
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 266 "lib/SPARQLfedScanner.lpp"
{return token::IT_NAMED;}
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 267 "lib/SPARQLfedScanner.lpp"
{return token::IT_WHERE;}
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 268 "lib/SPARQLfedScanner.lpp"
{return token::IT_GROUP;}
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 269 "lib/SPARQLfedScanner.lpp"
{return token::IT_BY;}
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 270 "lib/SPARQLfedScanner.lpp"
{return token::IT_HAVING;}
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 271 "lib/SPARQLfedScanner.lpp"
{return token::IT_ORDER;}
	YY_BREAK
case 22:
YY_RULE_SETUP
#line 272 "lib/SPARQLfedScanner.lpp"
{return token::IT_ASC;}
	YY_BREAK
case 23:
YY_RULE_SETUP
#line 273 "lib/SPARQLfedScanner.lpp"
{return token::IT_DESC;}
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 274 "lib/SPARQLfedScanner.lpp"
{return token::IT_LIMIT;}
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 275 "lib/SPARQLfedScanner.lpp"
{return token::IT_OFFSET;}
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 276 "lib/SPARQLfedScanner.lpp"
{return token::IT_BINDINGS;}
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 277 "lib/SPARQLfedScanner.lpp"
{return token::GT_LCURLEY;}
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 278 "lib/SPARQLfedScanner.lpp"
{return token::GT_RCURLEY;}
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 279 "lib/SPARQLfedScanner.lpp"
{return token::IT_UNDEF;}
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 280 "lib/SPARQLfedScanner.lpp"
{return token::GT_SEMI;}
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 281 "lib/SPARQLfedScanner.lpp"
{return token::IT_LOAD;}
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 282 "lib/SPARQLfedScanner.lpp"
{return token::IT_INTO;}
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 283 "lib/SPARQLfedScanner.lpp"
{return token::IT_CLEAR;}
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 284 "lib/SPARQLfedScanner.lpp"
{return token::IT_SILENT;}
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 285 "lib/SPARQLfedScanner.lpp"
{return token::IT_DROP;}
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 286 "lib/SPARQLfedScanner.lpp"
{return token::IT_CREATE;}
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 287 "lib/SPARQLfedScanner.lpp"
{return token::IT_ADD;}
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 288 "lib/SPARQLfedScanner.lpp"
{return token::IT_TO;}
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 289 "lib/SPARQLfedScanner.lpp"
{return token::IT_MOVE;}
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 290 "lib/SPARQLfedScanner.lpp"
{return token::IT_COPY;}
	YY_BREAK
case 41:
/* rule 41 can match eol */
YY_RULE_SETUP
#line 291 "lib/SPARQLfedScanner.lpp"
{return token::GT_INSERT_LBRACKET_SPACECHAR_TAB_RETURN_LINEFEED_RBRACKET_PLUS_DATA;}
	YY_BREAK
case 42:
/* rule 42 can match eol */
YY_RULE_SETUP
#line 292 "lib/SPARQLfedScanner.lpp"
{return token::GT_DELETE_LBRACKET_SPACECHAR_TAB_RETURN_LINEFEED_RBRACKET_PLUS_DATA;}
	YY_BREAK
case 43:
/* rule 43 can match eol */
YY_RULE_SETUP
#line 293 "lib/SPARQLfedScanner.lpp"
{return token::GT_DELETE_LBRACKET_SPACECHAR_TAB_RETURN_LINEFEED_RBRACKET_PLUS_WHERE;}
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 294 "lib/SPARQLfedScanner.lpp"
{return token::IT_WITH;}
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 295 "lib/SPARQLfedScanner.lpp"
{return token::IT_DELETE;}
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 296 "lib/SPARQLfedScanner.lpp"
{return token::IT_INSERT;}
	YY_BREAK
case 47:
YY_RULE_SETUP
#line 297 "lib/SPARQLfedScanner.lpp"
{return token::IT_USING;}
	YY_BREAK
case 48:
YY_RULE_SETUP
#line 298 "lib/SPARQLfedScanner.lpp"
{return token::IT_DEFAULT;}
	YY_BREAK
case 49:
YY_RULE_SETUP
#line 299 "lib/SPARQLfedScanner.lpp"
{return token::IT_GRAPH;}
	YY_BREAK
case 50:
YY_RULE_SETUP
#line 300 "lib/SPARQLfedScanner.lpp"
{return token::IT_ALL;}
	YY_BREAK
case 51:
YY_RULE_SETUP
#line 301 "lib/SPARQLfedScanner.lpp"
{return token::GT_DOT;}
	YY_BREAK
case 52:
YY_RULE_SETUP
#line 302 "lib/SPARQLfedScanner.lpp"
{return token::IT_PRINT;}
	YY_BREAK
case 53:
YY_RULE_SETUP
#line 303 "lib/SPARQLfedScanner.lpp"
{return token::IT_OPTIONAL;}
	YY_BREAK
case 54:
YY_RULE_SETUP
#line 304 "lib/SPARQLfedScanner.lpp"
{return token::IT_SERVICE;}
	YY_BREAK
case 55:
YY_RULE_SETUP
#line 305 "lib/SPARQLfedScanner.lpp"
{return token::IT_BIND;}
	YY_BREAK
case 56:
YY_RULE_SETUP
#line 306 "lib/SPARQLfedScanner.lpp"
{return token::IT_MINUS;}
	YY_BREAK
case 57:
YY_RULE_SETUP
#line 307 "lib/SPARQLfedScanner.lpp"
{return token::IT_UNION;}
	YY_BREAK
case 58:
YY_RULE_SETUP
#line 308 "lib/SPARQLfedScanner.lpp"
{return token::IT_FILTER;}
	YY_BREAK
case 59:
YY_RULE_SETUP
#line 309 "lib/SPARQLfedScanner.lpp"
{return token::GT_COMMA;}
	YY_BREAK
case 60:
YY_RULE_SETUP
#line 310 "lib/SPARQLfedScanner.lpp"
{return token::IT_a;}
	YY_BREAK
case 61:
YY_RULE_SETUP
#line 311 "lib/SPARQLfedScanner.lpp"
{return token::GT_PIPE;}
	YY_BREAK
case 62:
YY_RULE_SETUP
#line 312 "lib/SPARQLfedScanner.lpp"
{return token::GT_DIVIDE;}
	YY_BREAK
case 63:
YY_RULE_SETUP
#line 313 "lib/SPARQLfedScanner.lpp"
{return token::GT_CARROT;}
	YY_BREAK
case 64:
YY_RULE_SETUP
#line 314 "lib/SPARQLfedScanner.lpp"
{return token::GT_OPT;}
	YY_BREAK
case 65:
YY_RULE_SETUP
#line 315 "lib/SPARQLfedScanner.lpp"
{return token::GT_PLUS;}
	YY_BREAK
case 66:
YY_RULE_SETUP
#line 316 "lib/SPARQLfedScanner.lpp"
{return token::GT_NOT;}
	YY_BREAK
case 67:
YY_RULE_SETUP
#line 317 "lib/SPARQLfedScanner.lpp"
{return token::GT_LBRACKET;}
	YY_BREAK
case 68:
YY_RULE_SETUP
#line 318 "lib/SPARQLfedScanner.lpp"
{return token::GT_RBRACKET;}
	YY_BREAK
case 69:
YY_RULE_SETUP
#line 319 "lib/SPARQLfedScanner.lpp"
{return token::IT_MEMBERS;}
	YY_BREAK
case 70:
YY_RULE_SETUP
#line 320 "lib/SPARQLfedScanner.lpp"
{return token::IT_STARTS;}
	YY_BREAK
case 71:
YY_RULE_SETUP
#line 321 "lib/SPARQLfedScanner.lpp"
{return token::IT_ENDS;}
	YY_BREAK
case 72:
YY_RULE_SETUP
#line 322 "lib/SPARQLfedScanner.lpp"
{return token::IT_ANY;}
	YY_BREAK
case 73:
YY_RULE_SETUP
#line 323 "lib/SPARQLfedScanner.lpp"
{return token::IT_UNORDERED;}
	YY_BREAK
case 74:
YY_RULE_SETUP
#line 324 "lib/SPARQLfedScanner.lpp"
{return token::GT_OR;}
	YY_BREAK
case 75:
YY_RULE_SETUP
#line 325 "lib/SPARQLfedScanner.lpp"
{return token::GT_AND;}
	YY_BREAK
case 76:
YY_RULE_SETUP
#line 326 "lib/SPARQLfedScanner.lpp"
{return token::GT_EQUAL;}
	YY_BREAK
case 77:
YY_RULE_SETUP
#line 327 "lib/SPARQLfedScanner.lpp"
{return token::GT_NEQUAL;}
	YY_BREAK
case 78:
YY_RULE_SETUP
#line 328 "lib/SPARQLfedScanner.lpp"
{return token::GT_LT;}
	YY_BREAK
case 79:
YY_RULE_SETUP
#line 329 "lib/SPARQLfedScanner.lpp"
{return token::GT_GT;}
	YY_BREAK
case 80:
YY_RULE_SETUP
#line 330 "lib/SPARQLfedScanner.lpp"
{return token::GT_LE;}
	YY_BREAK
case 81:
YY_RULE_SETUP
#line 331 "lib/SPARQLfedScanner.lpp"
{return token::GT_GE;}
	YY_BREAK
case 82:
YY_RULE_SETUP
#line 332 "lib/SPARQLfedScanner.lpp"
{return token::IT_IN;}
	YY_BREAK
case 83:
YY_RULE_SETUP
#line 333 "lib/SPARQLfedScanner.lpp"
{return token::IT_NOT;}
	YY_BREAK
case 84:
YY_RULE_SETUP
#line 334 "lib/SPARQLfedScanner.lpp"
{return token::GT_MINUS;}
	YY_BREAK
case 85:
YY_RULE_SETUP
#line 335 "lib/SPARQLfedScanner.lpp"
{return token::IT_STR;}
	YY_BREAK
case 86:
YY_RULE_SETUP
#line 336 "lib/SPARQLfedScanner.lpp"
{return token::IT_LANG;}
	YY_BREAK
case 87:
YY_RULE_SETUP
#line 337 "lib/SPARQLfedScanner.lpp"
{return token::IT_LANGMATCHES;}
	YY_BREAK
case 88:
YY_RULE_SETUP
#line 338 "lib/SPARQLfedScanner.lpp"
{return token::IT_DATATYPE;}
	YY_BREAK
case 89:
YY_RULE_SETUP
#line 339 "lib/SPARQLfedScanner.lpp"
{return token::IT_BOUND;}
	YY_BREAK
case 90:
YY_RULE_SETUP
#line 340 "lib/SPARQLfedScanner.lpp"
{return token::IT_IRI;}
	YY_BREAK
case 91:
YY_RULE_SETUP
#line 341 "lib/SPARQLfedScanner.lpp"
{return token::IT_URI;}
	YY_BREAK
case 92:
YY_RULE_SETUP
#line 342 "lib/SPARQLfedScanner.lpp"
{return token::IT_BNODE;}
	YY_BREAK
case 93:
YY_RULE_SETUP
#line 343 "lib/SPARQLfedScanner.lpp"
{return token::IT_RAND;}
	YY_BREAK
case 94:
YY_RULE_SETUP
#line 344 "lib/SPARQLfedScanner.lpp"
{return token::IT_ABS;}
	YY_BREAK
case 95:
YY_RULE_SETUP
#line 345 "lib/SPARQLfedScanner.lpp"
{return token::IT_CEIL;}
	YY_BREAK
case 96:
YY_RULE_SETUP
#line 346 "lib/SPARQLfedScanner.lpp"
{return token::IT_FLOOR;}
	YY_BREAK
case 97:
YY_RULE_SETUP
#line 347 "lib/SPARQLfedScanner.lpp"
{return token::IT_ROUND;}
	YY_BREAK
case 98:
YY_RULE_SETUP
#line 348 "lib/SPARQLfedScanner.lpp"
{return token::IT_CONCAT;}
	YY_BREAK
case 99:
YY_RULE_SETUP
#line 349 "lib/SPARQLfedScanner.lpp"
{return token::IT_STRLEN;}
	YY_BREAK
case 100:
YY_RULE_SETUP
#line 350 "lib/SPARQLfedScanner.lpp"
{return token::IT_UCASE;}
	YY_BREAK
case 101:
YY_RULE_SETUP
#line 351 "lib/SPARQLfedScanner.lpp"
{return token::IT_LCASE;}
	YY_BREAK
case 102:
YY_RULE_SETUP
#line 352 "lib/SPARQLfedScanner.lpp"
{return token::IT_ENCODE_FOR_URI;}
	YY_BREAK
case 103:
YY_RULE_SETUP
#line 353 "lib/SPARQLfedScanner.lpp"
{return token::IT_CONTAINS;}
	YY_BREAK
case 104:
YY_RULE_SETUP
#line 354 "lib/SPARQLfedScanner.lpp"
{return token::IT_STRSTARTS;}
	YY_BREAK
case 105:
YY_RULE_SETUP
#line 355 "lib/SPARQLfedScanner.lpp"
{return token::IT_STRENDS;}
	YY_BREAK
case 106:
YY_RULE_SETUP
#line 356 "lib/SPARQLfedScanner.lpp"
{return token::IT_YEAR;}
	YY_BREAK
case 107:
YY_RULE_SETUP
#line 357 "lib/SPARQLfedScanner.lpp"
{return token::IT_MONTH;}
	YY_BREAK
case 108:
YY_RULE_SETUP
#line 358 "lib/SPARQLfedScanner.lpp"
{return token::IT_DAY;}
	YY_BREAK
case 109:
YY_RULE_SETUP
#line 359 "lib/SPARQLfedScanner.lpp"
{return token::IT_HOURS;}
	YY_BREAK
case 110:
YY_RULE_SETUP
#line 360 "lib/SPARQLfedScanner.lpp"
{return token::IT_MINUTES;}
	YY_BREAK
case 111:
YY_RULE_SETUP
#line 361 "lib/SPARQLfedScanner.lpp"
{return token::IT_SECONDS;}
	YY_BREAK
case 112:
YY_RULE_SETUP
#line 362 "lib/SPARQLfedScanner.lpp"
{return token::IT_TIMEZONE;}
	YY_BREAK
case 113:
YY_RULE_SETUP
#line 363 "lib/SPARQLfedScanner.lpp"
{return token::IT_NOW;}
	YY_BREAK
case 114:
YY_RULE_SETUP
#line 364 "lib/SPARQLfedScanner.lpp"
{return token::IT_MD5;}
	YY_BREAK
case 115:
YY_RULE_SETUP
#line 365 "lib/SPARQLfedScanner.lpp"
{return token::IT_SHA1;}
	YY_BREAK
case 116:
YY_RULE_SETUP
#line 366 "lib/SPARQLfedScanner.lpp"
{return token::IT_SHA224;}
	YY_BREAK
case 117:
YY_RULE_SETUP
#line 367 "lib/SPARQLfedScanner.lpp"
{return token::IT_SHA256;}
	YY_BREAK
case 118:
YY_RULE_SETUP
#line 368 "lib/SPARQLfedScanner.lpp"
{return token::IT_SHA384;}
	YY_BREAK
case 119:
YY_RULE_SETUP
#line 369 "lib/SPARQLfedScanner.lpp"
{return token::IT_SHA512;}
	YY_BREAK
case 120:
YY_RULE_SETUP
#line 370 "lib/SPARQLfedScanner.lpp"
{return token::IT_COALESCE;}
	YY_BREAK
case 121:
YY_RULE_SETUP
#line 371 "lib/SPARQLfedScanner.lpp"
{return token::IT_IF;}
	YY_BREAK
case 122:
YY_RULE_SETUP
#line 372 "lib/SPARQLfedScanner.lpp"
{return token::IT_STRLANG;}
	YY_BREAK
case 123:
YY_RULE_SETUP
#line 373 "lib/SPARQLfedScanner.lpp"
{return token::IT_STRDT;}
	YY_BREAK
case 124:
YY_RULE_SETUP
#line 374 "lib/SPARQLfedScanner.lpp"
{return token::IT_sameTerm;}
	YY_BREAK
case 125:
YY_RULE_SETUP
#line 375 "lib/SPARQLfedScanner.lpp"
{return token::IT_isIRI;}
	YY_BREAK
case 126:
YY_RULE_SETUP
#line 376 "lib/SPARQLfedScanner.lpp"
{return token::IT_isURI;}
	YY_BREAK
case 127:
YY_RULE_SETUP
#line 377 "lib/SPARQLfedScanner.lpp"
{return token::IT_isBLANK;}
	YY_BREAK
case 128:
YY_RULE_SETUP
#line 378 "lib/SPARQLfedScanner.lpp"
{return token::IT_isLITERAL;}
	YY_BREAK
case 129:
YY_RULE_SETUP
#line 379 "lib/SPARQLfedScanner.lpp"
{return token::IT_isNUMERIC;}
	YY_BREAK
case 130:
YY_RULE_SETUP
#line 380 "lib/SPARQLfedScanner.lpp"
{return token::IT_REGEX;}
	YY_BREAK
case 131:
YY_RULE_SETUP
#line 381 "lib/SPARQLfedScanner.lpp"
{return token::IT_SUBSTR;}
	YY_BREAK
case 132:
YY_RULE_SETUP
#line 382 "lib/SPARQLfedScanner.lpp"
{return token::IT_EXISTS;}
	YY_BREAK
case 133:
YY_RULE_SETUP
#line 383 "lib/SPARQLfedScanner.lpp"
{return token::IT_COUNT;}
	YY_BREAK
case 134:
YY_RULE_SETUP
#line 384 "lib/SPARQLfedScanner.lpp"
{return token::IT_GROUP_CONCAT;}
	YY_BREAK
case 135:
YY_RULE_SETUP
#line 385 "lib/SPARQLfedScanner.lpp"
{return token::IT_SUM;}
	YY_BREAK
case 136:
YY_RULE_SETUP
#line 386 "lib/SPARQLfedScanner.lpp"
{return token::IT_MIN;}
	YY_BREAK
case 137:
YY_RULE_SETUP
#line 387 "lib/SPARQLfedScanner.lpp"
{return token::IT_MAX;}
	YY_BREAK
case 138:
YY_RULE_SETUP
#line 388 "lib/SPARQLfedScanner.lpp"
{return token::IT_AVG;}
	YY_BREAK
case 139:
YY_RULE_SETUP
#line 389 "lib/SPARQLfedScanner.lpp"
{return token::IT_SAMPLE;}
	YY_BREAK
case 140:
YY_RULE_SETUP
#line 390 "lib/SPARQLfedScanner.lpp"
{return token::IT_SEPARATOR;}
	YY_BREAK
case 141:
YY_RULE_SETUP
#line 391 "lib/SPARQLfedScanner.lpp"
{return token::GT_DTYPE;}
	YY_BREAK
case 142:
YY_RULE_SETUP
#line 392 "lib/SPARQLfedScanner.lpp"
{yylval->p_BooleanRDFLiteral = driver->getBooleanRDFLiteral("true", 1); return token::IT_true;}
	YY_BREAK
case 143:
YY_RULE_SETUP
#line 393 "lib/SPARQLfedScanner.lpp"
{yylval->p_BooleanRDFLiteral = driver->getBooleanRDFLiteral("false", 0); return token::IT_false;}
	YY_BREAK
case 144:
YY_RULE_SETUP
#line 394 "lib/SPARQLfedScanner.lpp"
{yylval->p_URI = resolveBase(yytext, true); return token::IRI_REF;}
	YY_BREAK
case 145:
YY_RULE_SETUP
#line 395 "lib/SPARQLfedScanner.lpp"
{yylval->p_URI = driver->ignorePrefix() ? driver->getURI(yytext) : resolvePrefix(yytext); return token::PNAME_NS;}
	YY_BREAK
case 146:
YY_RULE_SETUP
#line 396 "lib/SPARQLfedScanner.lpp"
{yylval->p_URI = resolvePrefix(yytext); return token::PNAME_LN;}
	YY_BREAK
case 147:
YY_RULE_SETUP
#line 397 "lib/SPARQLfedScanner.lpp"
{yylval->p_TTerm = driver->getBNode(yytext+2); return token::BLANK_NODE_LABEL;}
	YY_BREAK
case 148:
YY_RULE_SETUP
#line 398 "lib/SPARQLfedScanner.lpp"
{yylval->p_Variable = driver->getVariable(yytext+1); return token::VAR1;}
	YY_BREAK
case 149:
YY_RULE_SETUP
#line 399 "lib/SPARQLfedScanner.lpp"
{yylval->p_Variable = driver->getVariable(yytext+1); return token::VAR2;}
	YY_BREAK
case 150:
YY_RULE_SETUP
#line 400 "lib/SPARQLfedScanner.lpp"
{yylval->p_LANGTAG = new LANGTAG(yytext+1); return token::LANGTAG;}
	YY_BREAK
case 151:
YY_RULE_SETUP
#line 401 "lib/SPARQLfedScanner.lpp"
{return typedLiteral(yylval, token::INTEGER);}
	YY_BREAK
case 152:
YY_RULE_SETUP
#line 402 "lib/SPARQLfedScanner.lpp"
{return typedLiteral(yylval, token::DECIMAL);}
	YY_BREAK
case 153:
YY_RULE_SETUP
#line 403 "lib/SPARQLfedScanner.lpp"
{return typedLiteral(yylval, token::DOUBLE);}
	YY_BREAK
case 154:
YY_RULE_SETUP
#line 404 "lib/SPARQLfedScanner.lpp"
{return typedLiteral(yylval, token::INTEGER_POSITIVE);}
	YY_BREAK
case 155:
YY_RULE_SETUP
#line 405 "lib/SPARQLfedScanner.lpp"
{return typedLiteral(yylval, token::DECIMAL_POSITIVE);}
	YY_BREAK
case 156:
YY_RULE_SETUP
#line 406 "lib/SPARQLfedScanner.lpp"
{return typedLiteral(yylval, token::DOUBLE_POSITIVE);}
	YY_BREAK
case 157:
YY_RULE_SETUP
#line 407 "lib/SPARQLfedScanner.lpp"
{return typedLiteral(yylval, token::INTEGER_NEGATIVE);}
	YY_BREAK
case 158:
YY_RULE_SETUP
#line 408 "lib/SPARQLfedScanner.lpp"
{return typedLiteral(yylval, token::DECIMAL_NEGATIVE);}
	YY_BREAK
case 159:
YY_RULE_SETUP
#line 409 "lib/SPARQLfedScanner.lpp"
{return typedLiteral(yylval, token::DOUBLE_NEGATIVE);}
	YY_BREAK
case 160:
YY_RULE_SETUP
#line 410 "lib/SPARQLfedScanner.lpp"
{return unescape(yylval, 1, token::STRING_LITERAL1);}
	YY_BREAK
case 161:
YY_RULE_SETUP
#line 411 "lib/SPARQLfedScanner.lpp"
{return unescape(yylval, 1, token::STRING_LITERAL2);}
	YY_BREAK
case 162:
/* rule 162 can match eol */
YY_RULE_SETUP
#line 412 "lib/SPARQLfedScanner.lpp"
{return unescape(yylval, 3, token::STRING_LITERAL_LONG1);}
	YY_BREAK
case 163:
/* rule 163 can match eol */
YY_RULE_SETUP
#line 413 "lib/SPARQLfedScanner.lpp"
{return unescape(yylval, 3, token::STRING_LITERAL_LONG2);}
	YY_BREAK
case 164:
/* rule 164 can match eol */
YY_RULE_SETUP
#line 414 "lib/SPARQLfedScanner.lpp"
{return token::NIL;}
	YY_BREAK
case 165:
/* rule 165 can match eol */
YY_RULE_SETUP
#line 415 "lib/SPARQLfedScanner.lpp"
{yylval->p_TTerm = driver->createBNode(); return token::ANON;}
	YY_BREAK
case YY_STATE_EOF(INITIAL):
#line 417 "lib/SPARQLfedScanner.lpp"
{ yyterminate();}
	YY_BREAK
case 166:
YY_RULE_SETUP
#line 418 "lib/SPARQLfedScanner.lpp"
{
    std::stringstream s;
    s << "unexpected input: '" << yytext << "'";
    driver->error(*yylloc, s.str());
}
	YY_BREAK
case 167:
YY_RULE_SETUP
#line 424 "lib/SPARQLfedScanner.lpp"
YY_FATAL_ERROR( "flex scanner jammed" );
	YY_BREAK
#line 6275 "lib/SPARQLfedScanner.cpp"

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = (yy_hold_char);
		YY_RESTORE_YY_MORE_OFFSET

		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state(  );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = (yytext_ptr) + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++(yy_c_buf_p);
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
/* %% [14.0] code to do back-up for compressed tables and set up yy_cp goes here */
				yy_cp = (yy_last_accepting_cpos);
				yy_current_state = (yy_last_accepting_state);
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer(  ) )
			{
			case EOB_ACT_END_OF_FILE:
				{
				(yy_did_buffer_switch_on_eof) = 0;

				if ( yywrap(  ) )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				(yy_c_buf_p) =
					(yytext_ptr) + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				(yy_c_buf_p) =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
} /* end of yylex */
/* %ok-for-header */

/* %if-c++-only */
/* %not-for-header */

/* The contents of this function are C++ specific, so the () macro is not used.
 */
yyFlexLexer::yyFlexLexer( std::istream* arg_yyin, std::ostream* arg_yyout )
{
	yyin = arg_yyin;
	yyout = arg_yyout;
	yy_c_buf_p = 0;
	yy_init = 0;
	yy_start = 0;
	yy_flex_debug = 0;
	yylineno = 1;	// this will only get updated if %option yylineno

	yy_did_buffer_switch_on_eof = 0;

	yy_looking_for_trail_begin = 0;
	yy_more_flag = 0;
	yy_more_len = 0;
	yy_more_offset = yy_prev_more_offset = 0;

	yy_start_stack_ptr = yy_start_stack_depth = 0;
	yy_start_stack = NULL;

	yy_buffer_stack = 0;
	yy_buffer_stack_top = 0;
	yy_buffer_stack_max = 0;

	yy_state_buf = 0;

}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
yyFlexLexer::~yyFlexLexer()
{
	delete [] yy_state_buf;
	SPARQLfedfree(yy_start_stack  );
	yy_delete_buffer( YY_CURRENT_BUFFER );
	SPARQLfedfree(yy_buffer_stack  );
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
void yyFlexLexer::switch_streams( std::istream* new_in, std::ostream* new_out )
{
	if ( new_in )
		{
		yy_delete_buffer( YY_CURRENT_BUFFER );
		yy_switch_to_buffer( yy_create_buffer( new_in, YY_BUF_SIZE  ) );
		}

	if ( new_out )
		yyout = new_out;
}

#ifdef YY_INTERACTIVE
int yyFlexLexer::LexerInput( char* buf, int /* max_size */ )
#else
int yyFlexLexer::LexerInput( char* buf, int max_size )
#endif
{
	if ( yyin->eof() || yyin->fail() )
		return 0;

#ifdef YY_INTERACTIVE
	yyin->get( buf[0] );

	if ( yyin->eof() )
		return 0;

	if ( yyin->bad() )
		return -1;

	return 1;

#else
	(void) yyin->read( buf, max_size );

	if ( yyin->bad() )
		return -1;
	else
		return yyin->gcount();
#endif
}

void yyFlexLexer::LexerOutput( const char* buf, int size )
{
	(void) yyout->write( buf, size );
}
/* %ok-for-header */

/* %endif */

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
int yyFlexLexer::yy_get_next_buffer()
/* %endif */
{
    	register char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
	register char *source = (yytext_ptr);
	register int number_to_move, i;
	int ret_val;

	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr)) - 1;

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;

	else
		{
			int num_to_read =
			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = YY_CURRENT_BUFFER;

			int yy_c_buf_p_offset =
				(int) ((yy_c_buf_p) - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					SPARQLfedrealloc((void *) b->yy_ch_buf,b->yy_buf_size + 2  );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = 0;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			(yy_c_buf_p) = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
						number_to_move - 1;

			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
			(yy_n_chars), (size_t) num_to_read );

		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	if ( (yy_n_chars) == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin  );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	if ((yy_size_t) ((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
		/* Extend the array by 50%, plus the number we really need. */
		yy_size_t new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) SPARQLfedrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size  );
		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
	}

	(yy_n_chars) += number_to_move;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;

	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];

	return ret_val;
}

/* yy_get_previous_state - get the state just before the EOB char was reached */

/* %if-c-only */
/* %not-for-header */

/* %endif */
/* %if-c++-only */
    yy_state_type yyFlexLexer::yy_get_previous_state()
/* %endif */
{
	register yy_state_type yy_current_state;
	register char *yy_cp;
    
/* %% [15.0] code to get the start state into yy_current_state goes here */
	yy_current_state = (yy_start);

	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
		{
/* %% [16.0] code to find the next state goes here */
		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		if ( yy_accept[yy_current_state] )
			{
			(yy_last_accepting_state) = yy_current_state;
			(yy_last_accepting_cpos) = yy_cp;
			}
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 1227 )
				yy_c = yy_meta[(unsigned int) yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
		}

	return yy_current_state;
}

/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    yy_state_type yyFlexLexer::yy_try_NUL_trans( yy_state_type yy_current_state )
/* %endif */
{
	register int yy_is_jam;
    /* %% [17.0] code to find the next state, and perhaps do backing up, goes here */
	register char *yy_cp = (yy_c_buf_p);

	register YY_CHAR yy_c = 1;
	if ( yy_accept[yy_current_state] )
		{
		(yy_last_accepting_state) = yy_current_state;
		(yy_last_accepting_cpos) = yy_cp;
		}
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 1227 )
			yy_c = yy_meta[(unsigned int) yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
	yy_is_jam = (yy_current_state == 1226);

	return yy_is_jam ? 0 : yy_current_state;
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yyunput( int c, register char* yy_bp)
/* %endif */
{
	register char *yy_cp;
    
    yy_cp = (yy_c_buf_p);

	/* undo effects of setting up yytext */
	*yy_cp = (yy_hold_char);

	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		register int number_to_move = (yy_n_chars) + 2;
		register char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
		register char *source =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];

		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;

		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;

/* %% [18.0] update yylineno here */

	(yytext_ptr) = yy_bp;
	(yy_hold_char) = *yy_cp;
	(yy_c_buf_p) = yy_cp;
}
/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    int yyFlexLexer::yyinput()
/* %endif */
{
	int c;
    
	*(yy_c_buf_p) = (yy_hold_char);

	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			/* This was really a NUL. */
			*(yy_c_buf_p) = '\0';

		else
			{ /* need more input */
			int offset = (yy_c_buf_p) - (yytext_ptr);
			++(yy_c_buf_p);

			switch ( yy_get_next_buffer(  ) )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin );

					/*FALLTHROUGH*/

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap(  ) )
						return EOF;

					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					(yy_c_buf_p) = (yytext_ptr) + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
	*(yy_c_buf_p) = '\0';	/* preserve yytext */
	(yy_hold_char) = *++(yy_c_buf_p);

/* %% [19.0] update BOL and yylineno */

	return c;
}
/* %if-c-only */
/* %endif */

/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 * 
 * @note This function does not reset the start condition to @c INITIAL .
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yyrestart( std::istream* input_file )
/* %endif */
{
    
	if ( ! YY_CURRENT_BUFFER ){
        yyensure_buffer_stack ();
		YY_CURRENT_BUFFER_LVALUE =
            yy_create_buffer( yyin, YY_BUF_SIZE );
	}

	yy_init_buffer( YY_CURRENT_BUFFER, input_file );
	yy_load_buffer_state(  );
}

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 * 
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
/* %endif */
{
    
	/* TODO. We should be able to replace this entire function body
	 * with
	 *		yypop_buffer_state();
	 *		yypush_buffer_state(new_buffer);
     */
	yyensure_buffer_stack ();
	if ( YY_CURRENT_BUFFER == new_buffer )
		return;

	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	YY_CURRENT_BUFFER_LVALUE = new_buffer;
	yy_load_buffer_state(  );

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	(yy_did_buffer_switch_on_eof) = 1;
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_load_buffer_state()
/* %endif */
{
    	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
	(yy_hold_char) = *(yy_c_buf_p);
}

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * 
 * @return the allocated buffer state.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    YY_BUFFER_STATE yyFlexLexer::yy_create_buffer( std::istream* file, int size )
/* %endif */
{
	YY_BUFFER_STATE b;
    
	b = (YY_BUFFER_STATE) SPARQLfedalloc(sizeof( struct yy_buffer_state )  );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) SPARQLfedalloc(b->yy_buf_size + 2  );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file );

	return b;
}

/** Destroy the buffer.
 * @param b a buffer created with yy_create_buffer()
 * 
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_delete_buffer( YY_BUFFER_STATE b )
/* %endif */
{
    
	if ( ! b )
		return;

	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		SPARQLfedfree((void *) b->yy_ch_buf  );

	SPARQLfedfree((void *) b  );
}

/* %if-c-only */
/* %endif */

/* %if-c++-only */

extern "C" int isatty (int ) throw();

/* %endif */

/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a yyrestart() or at EOF.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_init_buffer( YY_BUFFER_STATE b, std::istream* file )
/* %endif */

{
	int oerrno = errno;
    
	yy_flush_buffer( b );

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then yy_init_buffer was _probably_
     * called from yyrestart() or through yy_get_next_buffer.
     * In that case, we don't want to reset the lineno or column.
     */
    if (b != YY_CURRENT_BUFFER){
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    }

/* %if-c-only */
/* %endif */
/* %if-c++-only */
	b->yy_is_interactive = 0;
/* %endif */
	errno = oerrno;
}

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * 
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_flush_buffer( YY_BUFFER_STATE b )
/* %endif */
{
    	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == YY_CURRENT_BUFFER )
		yy_load_buffer_state(  );
}

/* %if-c-or-c++ */
/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  if necessary.
 *  @param new_buffer The new state.
 *  
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::yypush_buffer_state (YY_BUFFER_STATE new_buffer)
/* %endif */
{
    	if (new_buffer == NULL)
		return;

	yyensure_buffer_stack();

	/* This block is copied from yy_switch_to_buffer. */
	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	/* Only push if top exists. Otherwise, replace top. */
	if (YY_CURRENT_BUFFER)
		(yy_buffer_stack_top)++;
	YY_CURRENT_BUFFER_LVALUE = new_buffer;

	/* copied from yy_switch_to_buffer. */
	yy_load_buffer_state(  );
	(yy_did_buffer_switch_on_eof) = 1;
}
/* %endif */

/* %if-c-or-c++ */
/** Removes and deletes the top of the stack, if present.
 *  The next element becomes the new top.
 *  
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::yypop_buffer_state (void)
/* %endif */
{
    	if (!YY_CURRENT_BUFFER)
		return;

	yy_delete_buffer(YY_CURRENT_BUFFER );
	YY_CURRENT_BUFFER_LVALUE = NULL;
	if ((yy_buffer_stack_top) > 0)
		--(yy_buffer_stack_top);

	if (YY_CURRENT_BUFFER) {
		yy_load_buffer_state(  );
		(yy_did_buffer_switch_on_eof) = 1;
	}
}
/* %endif */

/* %if-c-or-c++ */
/* Allocates the stack if it does not exist.
 *  Guarantees space for at least one push.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::yyensure_buffer_stack(void)
/* %endif */
{
	int num_to_alloc;
    
	if (!(yy_buffer_stack)) {

		/* First allocation is just for 2 elements, since we don't know if this
		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
		 * immediate realloc on the next call.
         */
		num_to_alloc = 1;
		(yy_buffer_stack) = (struct yy_buffer_state**)SPARQLfedalloc
								(num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
								  
		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
				
		(yy_buffer_stack_max) = num_to_alloc;
		(yy_buffer_stack_top) = 0;
		return;
	}

	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){

		/* Increase the buffer to prepare for a possible push. */
		int grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = (yy_buffer_stack_max) + grow_size;
		(yy_buffer_stack) = (struct yy_buffer_state**)SPARQLfedrealloc
								((yy_buffer_stack),
								num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		/* zero only the new slots.*/
		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
		(yy_buffer_stack_max) = num_to_alloc;
	}
}
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_push_state( int new_state )
/* %endif */
{
    	if ( (yy_start_stack_ptr) >= (yy_start_stack_depth) )
		{
		yy_size_t new_size;

		(yy_start_stack_depth) += YY_START_STACK_INCR;
		new_size = (yy_start_stack_depth) * sizeof( int );

		if ( ! (yy_start_stack) )
			(yy_start_stack) = (int *) SPARQLfedalloc(new_size  );

		else
			(yy_start_stack) = (int *) SPARQLfedrealloc((void *) (yy_start_stack),new_size  );

		if ( ! (yy_start_stack) )
			YY_FATAL_ERROR( "out of memory expanding start-condition stack" );
		}

	(yy_start_stack)[(yy_start_stack_ptr)++] = YY_START;

	BEGIN(new_state);
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_pop_state()
/* %endif */
{
    	if ( --(yy_start_stack_ptr) < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN((yy_start_stack)[(yy_start_stack_ptr)]);
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    int yyFlexLexer::yy_top_state()
/* %endif */
{
    	return (yy_start_stack)[(yy_start_stack_ptr) - 1];
}

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::LexerError( yyconst char msg[] )
{
    	std::cerr << msg << std::endl;
	exit( YY_EXIT_FAILURE );
}
/* %endif */

/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		yytext[yyleng] = (yy_hold_char); \
		(yy_c_buf_p) = yytext + yyless_macro_arg; \
		(yy_hold_char) = *(yy_c_buf_p); \
		*(yy_c_buf_p) = '\0'; \
		yyleng = yyless_macro_arg; \
		} \
	while ( 0 )

/* Accessor  methods (get/set functions) to struct members. */

/* %if-c-only */
/* %if-reentrant */
/* %endif */
/* %if-reentrant */
/* %endif */
/* %endif */

/* %if-reentrant */
/* %if-bison-bridge */
/* %endif */
/* %endif if-c-only */

/* %if-c-only */
/* %endif */

/* %if-c-only SNIP! this currently causes conflicts with the c++ scanner */
/* %if-reentrant */
/* %endif */
/* %endif */

/*
 * Internal utility routines.
 */

#ifndef yytext_ptr
static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )
{
	register int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
}
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * s )
{
	register int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
}
#endif

void *SPARQLfedalloc (yy_size_t  size )
{
	return (void *) malloc( size );
}

void *SPARQLfedrealloc  (void * ptr, yy_size_t  size )
{
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return (void *) realloc( (char *) ptr, size );
}

void SPARQLfedfree (void * ptr )
{
	free( (char *) ptr );	/* see SPARQLfedrealloc() for (char *) cast */
}

/* %if-tables-serialization definitions */
/* %define-yytables   The name for this specific scanner's tables. */
#define YYTABLES_NAME "yytables"
/* %endif */

/* %ok-for-header */

#line 424 "lib/SPARQLfedScanner.lpp"


/* END semantic actions for SPARQLfed terminals */

/* START SPARQLfedScanner */
namespace w3c_sw {

SPARQLfedScanner::SPARQLfedScanner (SPARQLfedDriver* driver, std::istream* in, std::ostream* out) : SPARQLfedFlexLexer(in, out), driver(driver) {  }
SPARQLfedScanner::~SPARQLfedScanner () {  }

SPARQLfedParser::token_type SPARQLfedScanner::typedLiteral (SPARQLfedParser::semantic_type*& yylval, SPARQLfedParser::token_type tok) {
    std::istringstream is(yytext);

    switch (tok) {
    case token::INTEGER:
    case token::INTEGER_POSITIVE:
    case token::INTEGER_NEGATIVE:
	int i;
	is >> i;
	yylval->p_NumericRDFLiteral = driver->getNumericRDFLiteral(yytext, i);
	return tok;
    case token::DECIMAL:
    case token::DECIMAL_POSITIVE:
    case token::DECIMAL_NEGATIVE:
	float f;
	is >> f;
	yylval->p_NumericRDFLiteral = driver->getNumericRDFLiteral(yytext, f);
	return tok;
    case token::DOUBLE:
    case token::DOUBLE_POSITIVE:
    case token::DOUBLE_NEGATIVE:
	double d;
	is >> d;
	yylval->p_NumericRDFLiteral = driver->getNumericRDFLiteral(yytext, d);
	return tok;
    default: throw(new std::exception());
    }
}

SPARQLfedParser::token_type SPARQLfedScanner::unescape (SPARQLfedParser::semantic_type*& yylval, size_t skip, SPARQLfedParser::token_type tok){
    std::string* space = new std::string;
    for (size_t i = skip; i < yyleng-skip; i++) {
	if (yytext[i] == '\\') {
	    switch (yytext[++i]) {
	    case 't': (*space) += '\t'; break;
	    case 'n': (*space) += '\n'; break;
	    case 'r': (*space) += '\r'; break;
	    case 'b': (*space) += '\b'; break;
	    case 'f': (*space) += '\f'; break;
	    case '"': (*space) += '\"'; break;
	    case '\'': (*space) += '\''; break;
	    case '\\': (*space) += '\\'; break;
	    default: throw(new std::exception());
	    }
	} else {
	    (*space) += yytext[i];
	}
    }
    yylval->p_string = space;
    return tok;
}


const URI* SPARQLfedScanner::resolvePrefix (const char* yytext){
    std::string ret(yytext);
    size_t index = ret.find(':');
    if (index == std::string::npos)
	throw(std::runtime_error("Inexplicable lack of ':' in prefix"));
    const URI* nspace = driver->getNamespace(ret.substr(0, index), true);
    if (nspace == NULL) {
	std::stringstream err;
	err << "Unknown prefix: \"" << ret.substr(0, index) << "\"";
	throw(std::runtime_error(err.str()));
    }
    ret.replace(0, index+1, nspace->getLexicalValue());
    return resolveBase(ret.c_str(), false);
}

void SPARQLfedScanner::set_debug(bool b)
{
    yy_flex_debug = b;
}

/* END SPARQLfedScanner */

const URI* SPARQLfedScanner::resolveBase (const char* p_rel, bool stripDelims) {
    std::string stripped(p_rel);
    if (stripDelims) {
	stripped.replace(0, 1, "");
	stripped.replace(stripped.size()-1, 1, "");
    }
    return driver->getAbsoluteURI(stripped.c_str());

#if 0
    // was a transliteration of _generic.pm
    static const boost::regex re_scheme("^([a-zA-Z][a-zA-Z0-9.+-]*):");
    static const boost::regex re_authority("^((?:[a-zA-Z][a-zA-Z0-9.+-]*)?)(?://([^/?\\#]*))?(.*)$");
    static const boost::regex re_path("^((?:[^:/?\\#]+:)?(?://[^/?\\#]*)?)([^?\\#]*)(.*)$");

    boost::smatch what;
    URI* baseURI = driver->getBase();
    std::string base;
    if (baseURI != NULL)
	std::string base = baseURI->getLexicalValue();
    std::string base_scheme;
    if (base.size() > 0 && boost::regex_search(base, what, re_scheme))
	base_scheme = what[1];
    if (boost::regex_search(self, what, re_scheme) &&
	what[1] != base_schema)
	return driver->getURI(self.c_str());
    if (base.size() == 0)
	throw(std::runtime_error(((std::string)"no base declared while resolving relative URI ").append(abs)));

    std::string abs(self);
    if (!boost::regex_search(base, what, re_scheme))
	throw(std::runtime_error(((std::string)"resolving against base URI with no scheme ").append(base)));
    // !!! abs->scheme = base_scheme
    if (false) ; // ...

    if (!boost::regex_search(base, what, re_authority))
	throw(std::runtime_error(((std::string)"resolving against base URI with no authority ").append(base)));
    std::string base_authority(what[2]);

    if (!boost::regex_search(rel, what, re_path))
	throw(std::runtime_error(((std::string)"oddly failed to match re_path on ").append(rel)));
    std::string rel_path(what[2]);
    if (rel_path.find("/") == 0) return driver->getURI(abs.c_str());

#endif
}
} // END namespace w3c_sw

/* This implementation of SPARQLfedFlexLexer::yylex() is required to fill the
 * vtable of the class SPARQLfedFlexLexer. We define the scanner's main yylex
 * function via YY_DECL to reside in the SPARQLfedScanner class instead. */

#ifdef yylex
#undef yylex
#endif

int SPARQLfedFlexLexer::yylex()
{
    std::cerr << "in SPARQLfedFlexLexer::yylex() !" << std::endl;
    return 0;
}



#line 2 "lib/MapSetScanner.cpp"

#line 4 "lib/MapSetScanner.cpp"

#define  YY_INT_ALIGNED short int

/* A lexical scanner generated by flex */

/* %not-for-header */

/* %if-c-only */
/* %if-not-reentrant */
/* %endif */
/* %endif */
/* %ok-for-header */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 5
#define YY_FLEX_SUBMINOR_VERSION 35
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

/* %if-c++-only */
    /* The c++ scanner is a mess. The FlexLexer.h header file relies on the
     * following macro. This is required in order to pass the c++-multiple-scanners
     * test in the regression suite. We get reports that it breaks inheritance.
     * We will address this in a future release of flex, or omit the C++ scanner
     * altogether.
     */
    #define yyFlexLexer MapSetFlexLexer
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */
/* %if-c-only */
/* %endif */

/* %if-tables-serialization */
/* %endif */
/* end standard C headers. */

/* %if-c-or-c++ */
/* flex integer type definitions */

#ifndef FLEXINT_H
#define FLEXINT_H

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L

/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
 * if you want the limit (max/min) macros for int types. 
 */
#ifndef __STDC_LIMIT_MACROS
#define __STDC_LIMIT_MACROS 1
#endif

#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t; 
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;

/* Limits of integral types. */
#ifndef INT8_MIN
#define INT8_MIN               (-128)
#endif
#ifndef INT16_MIN
#define INT16_MIN              (-32767-1)
#endif
#ifndef INT32_MIN
#define INT32_MIN              (-2147483647-1)
#endif
#ifndef INT8_MAX
#define INT8_MAX               (127)
#endif
#ifndef INT16_MAX
#define INT16_MAX              (32767)
#endif
#ifndef INT32_MAX
#define INT32_MAX              (2147483647)
#endif
#ifndef UINT8_MAX
#define UINT8_MAX              (255U)
#endif
#ifndef UINT16_MAX
#define UINT16_MAX             (65535U)
#endif
#ifndef UINT32_MAX
#define UINT32_MAX             (4294967295U)
#endif

#endif /* ! C99 */

#endif /* ! FLEXINT_H */

/* %endif */

/* %if-c++-only */
/* begin standard C++ headers. */
#include <iostream> 
#include <errno.h>
#include <cstdlib>
#include <cstdio>
#include <cstring>
/* end standard C++ headers. */
/* %endif */

#ifdef __cplusplus

/* The "const" storage-class-modifier is valid. */
#define YY_USE_CONST

#else	/* ! __cplusplus */

/* C99 requires __STDC__ to be defined as 1. */
#if defined (__STDC__)

#define YY_USE_CONST

#endif	/* defined (__STDC__) */
#endif	/* ! __cplusplus */

#ifdef YY_USE_CONST
#define yyconst const
#else
#define yyconst
#endif

/* %not-for-header */

/* Returned upon end-of-file. */
#define YY_NULL 0
/* %ok-for-header */

/* %not-for-header */

/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index.  If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */
#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)
/* %ok-for-header */

/* %if-reentrant */
/* %endif */

/* %if-not-reentrant */

/* %endif */

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN (yy_start) = 1 + 2 *

/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START (((yy_start) - 1) / 2)
#define YYSTATE YY_START

/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)

/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin  )

#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#ifndef YY_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k.
 * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
 * Ditto for the __ia64__ case accordingly.
 */
#define YY_BUF_SIZE 32768
#else
#define YY_BUF_SIZE 16384
#endif /* __ia64__ */
#endif

/* The state buf must be large enough to hold one state per character in the main buffer.
 */
#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

/* %if-not-reentrant */
extern int yyleng;
/* %endif */

/* %if-c-only */
/* %if-not-reentrant */
/* %endif */
/* %endif */

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2

    #define YY_LESS_LINENO(n)
    
/* Return all but the first "n" matched characters back to the input stream. */
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		*yy_cp = (yy_hold_char); \
		YY_RESTORE_YY_MORE_OFFSET \
		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )

#define unput(c) yyunput( c, (yytext_ptr)  )

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef size_t yy_size_t;
#endif

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{
/* %if-c-only */
/* %endif */

/* %if-c++-only */
	std::istream* yy_input_file;
/* %endif */

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	yy_size_t yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */
    
	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

/* %if-c-only Standard (non-C++) definition */
/* %not-for-header */

/* %if-not-reentrant */
/* %endif */
/* %ok-for-header */

/* %endif */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or NULL.
 */
#define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
                          : NULL)

/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */
#define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]

/* %if-c-only Standard (non-C++) definition */
/* %if-not-reentrant */
/* %not-for-header */

/* %ok-for-header */

/* %endif */
/* %endif */

void *MapSetalloc (yy_size_t  );
void *MapSetrealloc (void *,yy_size_t  );
void MapSetfree (void *  );

#define yy_new_buffer yy_create_buffer

#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){ \
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
	}

#define yy_set_bol(at_bol) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){\
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
	}

#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)

/* %% [1.0] yytext/yyin/yyout/yy_state_type/yylineno etc. def's & init go here */
/* Begin user sect3 */
#define YY_SKIP_YYWRAP

#define FLEX_DEBUG

typedef unsigned char YY_CHAR;

#define yytext_ptr yytext

#include <FlexLexer.h>

int yyFlexLexer::yywrap() { return 1; }

/* %if-c-only Standard (non-C++) definition */
/* %endif */

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	(yytext_ptr) = yy_bp; \
/* %% [2.0] code to fiddle yytext and yyleng for yymore() goes here \ */\
	yyleng = (size_t) (yy_cp - yy_bp); \
	(yy_hold_char) = *yy_cp; \
	*yy_cp = '\0'; \
/* %% [3.0] code to copy yytext_ptr to yytext[] goes here, if %array \ */\
	(yy_c_buf_p) = yy_cp;

/* %% [4.0] data tables for the DFA and the user's section 1 definitions go here */
#define YY_NUM_RULES 156
#define YY_END_OF_BUFFER 157
/* This struct is not used in this scanner,
   but its presence is necessary. */
struct yy_trans_info
	{
	flex_int32_t yy_verify;
	flex_int32_t yy_nxt;
	};
static yyconst flex_int16_t yy_accept[1223] =
    {   0,
        0,    0,  157,  155,    2,    1,    1,   55,  155,    2,
      155,  155,  155,   21,   22,   23,   54,   48,   73,   41,
       51,  140,  134,   40,   67,   65,   68,   53,  155,  155,
      155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
      155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
      155,   56,   57,   52,  155,   49,  155,  155,   37,   50,
       38,  155,  155,  155,  155,  155,  155,  155,  155,  155,
      155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
        2,    1,   66,    0,  150,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    2,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,  138,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,   64,    0,  149,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  153,    0,  143,    0,  146,  141,  141,  140,
        0,  135,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   69,  133,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   70,  137,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,  139,    0,    0,  134,    0,
        0,    0,   20,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
       29,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  110,   71,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      154,  130,    0,    0,    0,   63,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  150,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  138,  138,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  138,
      138,  138,  138,  138,  138,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  149,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  144,
      144,    0,  147,  147,    0,    0,  141,    0,    0,  142,

      135,    0,  135,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  135,  135,  135,  135,  135,
      135,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  137,  137,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  137,  137,  137,  137,
      137,  137,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,   83,   61,   32,  127,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   97,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   79,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  126,    0,    0,  125,    0,
        0,   72,  102,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   74,    0,  124,    0,    0,    0,    0,    0,
       80,    0,    0,    0,    0,  136,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    2,    0,    0,    0,  138,  138,  138,  138,  138,
      138,  138,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  138,  138,  138,  138,  138,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      144,    0,    0,  145,    0,  147,    0,    0,  148,    0,

      142,    0,  142,  135,  135,  135,  135,  135,  135,  135,
      135,  135,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  135,  135,  135,  135,  135,
        0,    0,    0,    0,    0,    0,  137,  137,  137,  137,
      137,  137,  137,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  137,  137,  137,  137,
      137,    0,    0,  139,    0,    0,    0,    0,    0,    0,
        0,   17,   44,    0,    0,   84,    0,    0,    0,    0,
        0,    0,   33,    0,    0,   60,    0,    0,    0,   25,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,   75,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,   82,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        5,    0,    0,   95,  136,    0,  136,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  136,
      136,  136,  136,  136,  136,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  131,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,  138,  138,  138,  138,  138,    0,    0,  138,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      145,    0,  145,    0,  148,    0,  148,  135,  135,  135,
      135,  135,    0,    0,  135,  137,  137,  137,  137,  137,
        0,    0,  137,    0,    0,   81,   78,    0,    0,    0,
        0,  122,    0,    0,    0,    0,    0,    0,   85,   16,
       28,    0,   98,    0,    0,  114,    0,    0,  115,   15,
        0,   90,   34,  103,    0,   45,    0,   96,   26,    0,
        0,   31,    0,    0,    0,    0,  119,    0,   86,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,  112,    0,    0,    0,    0,    0,    0,
       89,   39,   46,    0,    0,   27,  136,  136,  136,  136,
      136,  136,  136,  136,  136,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  136,  136,
      136,  136,  136,    0,    0,  132,  152,    0,    0,    0,
        0,  138,  151,    0,    0,    0,    0,  135,  137,    0,
        0,   87,    0,    0,    0,    0,    0,    0,  121,   47,
        0,   30,    0,    0,    0,    0,    0,    0,    0,   35,
        0,    0,   18,    0,    0,    0,    0,  128,    0,   19,
        0,    4,    0,  104,    0,    0,    0,    0,    0,   59,

        0,    0,    0,   88,    0,  120,    0,    0,    0,  136,
      136,  136,  136,  136,    0,    0,  136,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  116,    0,    0,
        0,   58,   99,    0,    0,    0,    0,    0,    0,  100,
        0,   43,    0,    0,    0,    0,    0,    8,   94,  111,
        0,    0,    0,    0,  136,   36,  109,    0,   92,    7,
       77,    0,    0,    0,    0,    0,    0,    0,   42,    6,
        0,    0,    0,  113,    0,  105,  106,  107,  108,    0,
        0,  101,    0,   13,   24,   14,    0,    0,    0,  117,
      118,    0,    0,    0,    0,  129,    0,   93,   62,    0,

        0,    0,    0,    9,    0,    3,   10,    0,    0,    0,
       76,   12,    0,  123,   11,    0,    0,    0,    0,    0,
       91,    0
    } ;

static yyconst flex_int32_t yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    4,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    5,    6,    7,    8,    9,   10,   11,   12,   13,
       14,   15,   16,   17,   18,   19,   20,   21,   22,   23,
       24,   25,   26,   27,   21,   28,   21,   29,   30,   31,
       32,   33,   34,   35,   36,   37,   38,   39,   40,   41,
       42,   43,   44,   45,   46,   47,   48,   49,   50,   51,
       45,   52,   53,   54,   55,   56,   57,   58,   59,   60,
       61,   62,   63,   64,   65,    1,   66,   67,   68,   69,

       70,   71,   72,   73,   74,   75,   76,   77,   78,   79,
       80,   81,   75,   82,   83,   84,   85,   86,   87,   88,
       89,   90,   91,   92,   93,   10,   10,   94,   95,   96,
       96,   96,   96,   97,   98,   98,   98,   98,   98,   99,
       99,   98,  100,  101,  101,  101,  101,  101,  101,  101,
      102,  103,  103,  103,  103,  103,  103,  103,  103,  104,
      104,  104,  104,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,  105,  106,  106,  106,  106,  106,
      106,  106,  107,  108,  108,  108,  108,  108,  108,  109,
      110,  111,  111,  112,  113,  114,  114,  114,  114,  114,

      114,  114,  114,  115,  116,  117,  117,  117,  117,  117,
      117,  117,  117,  117,  117,  117,  117,  117,  117,  117,
      117,  117,  117,  118,  119,  120,  121,  122,  122,  122,
      122,  122,  122,  122,  122,  122,  123,  124,  125,  126,
      127,  127,  127,  128,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111
    } ;

static yyconst flex_int32_t yy_meta[129] =
    {   0,
        1,    1,    2,    2,    1,    1,    1,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        4,    4,    4,    4,    4,    4,    4,    4,    3,    3,
        1,    3,    3,    3,    3,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        3,    1,    3,    1,    6,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        1,    1,    1,    7,    8,    8,    8,    8,    8,    6,

        8,    8,    8,    8,    8,    8,    8,    8,    8,    6,
        7,    3,    6,    6,    3,    6,    6,    6,    6,    6,
        6,    6,    6,    3,    6,    6,    6,    3
    } ;

static yyconst flex_int16_t yy_base[1239] =
    {   0,
        0,    0,  498,16069,  127,16069,  494,  462,  126,   30,
      160,  478,  276,  157,16069,16069,  151,16069,  168,  176,
    16069,  270,  310,16069,  406,16069,  453,  440,    0,  550,
      263,  265,  404,  405,  637,  413,  642,  689,  650,  710,
      751,  749,  799,  790,  847,  852,  867,  891,  912,  932,
      927,  161,16069,  418,  452,    0,  970,  972,16069,  387,
    16069,  111,  259,  965,  982,  999, 1016, 1033, 1050,   28,
     1067,   76, 1084, 1101, 1118, 1135, 1152,   62, 1155, 1172,
      220,16069,16069, 1276,  471,  673, 1190, 1206, 1221,  123,
     1245, 1262, 1311, 1265, 1328,  229, 1339, 1374, 1390, 1405,

      273, 1422, 1439, 1449, 1459, 1476,  276, 1566, 1600, 1617,
     1634, 1651, 1668, 1685, 1702, 1719,  339, 1736,  403, 1753,
     1770, 1787, 1804, 1821,  370, 1824, 1841,16069, 1940,  461,
     1946, 1865, 1881, 1975,  704, 1992, 1896, 2009, 2019, 2036,
      406,  778,16069,  837, 2128, 1356, 2138, 2148, 2159, 2188,
     2011, 2241, 2136, 2275, 2292, 2309, 2326, 2343, 2360, 2377,
      474, 2394,  925, 2411, 2428, 2445, 2462, 2153,  506, 2472,
     2489, 2567,    0,16069, 2507, 2523, 2538, 1336, 2555, 2602,
     2612, 2622, 2639, 1238,16069, 2729, 2763, 2780, 2797, 2814,
     2831, 2848, 2865, 2882,  643, 2899, 1491, 2916, 2933, 2950,

     2967, 2984,  536, 2987, 3004,  450, 3078, 3087, 3079, 3086,
     3154, 3171, 3176, 3186, 3179, 3196, 3213, 3230, 3247, 3264,
     3281,  360, 3298, 3315, 3332, 3349, 3366, 1914, 3383, 3400,
     3417, 3434, 3451,  595, 3454, 3471, 3545, 3546, 3547, 3555,
     3586, 3599, 3608, 3630, 3639, 3668, 3689, 3699, 3727, 3740,
     3742, 3780, 3778, 3795, 3800, 3835, 3848, 3856, 3857, 3901,
     3907, 3939, 3952, 3954, 3967, 3992, 4007, 4012, 4051, 4027,
     4075, 4080, 4120, 4118, 4135, 4156, 4171, 4209, 4215, 4247,
     4256, 4271, 4295, 4316, 4303, 4331, 4351, 4371, 4356, 1952,
    16069,16069, 4363, 4438, 4455,16069, 4460, 4470, 4495, 4505,

     4510, 4515, 4520, 4513, 4530, 4547, 4564, 4581, 4598, 4615,
     4632, 4649, 4666,  894, 4683, 4700,16069, 4804, 4718,  401,
     4735, 4752, 4773, 4790, 4839, 4856, 4873, 4890,  396, 4907,
     4924, 4941, 4958, 4975, 4992, 5009,    0,    0, 5026, 5043,
     5060, 5077, 5094, 5111, 5128,  348, 5145, 5162, 5179, 5196,
     1937, 5213, 5230, 5247, 5264, 5281,  717, 5284, 5301,    0,
        0,    0,    0,    0,    0, 5318, 5335, 5352, 5369, 5386,
     5403, 5420, 5437, 5454, 5471, 1897, 5488, 5505,16069, 5604,
     5523,  389, 5540, 5573, 5590, 5639, 5656, 5673, 5690, 5780,
     5788, 4885, 5808, 5816, 5635, 5685, 5839, 5866, 2168, 2198,

        0,    0,    0, 5816, 5833, 5850, 5867, 5884, 5901, 5918,
      344, 5935, 5952, 5969, 5986, 6003, 2096, 6020, 6037, 6054,
     6071, 5774,  849, 5794, 6088,    0,    0,    0,    0,    0,
        0, 6105, 6122, 6139, 6156, 6173, 6190, 6207, 6224, 6241,
     6258, 2164, 6275, 6292, 6309,  385, 6326, 6343, 6360, 6377,
     6394, 6411, 6428,    0,    0, 6445, 6462, 6479, 6496, 6513,
     6530, 6547,  336, 6564, 6581, 6598, 6615, 2564, 6632, 6649,
     6666, 6683, 6700,  935, 6703, 6720,    0,    0,    0,    0,
        0,    0, 6737, 6754, 6771, 6788, 6805, 6822, 6839, 6856,
     6873, 6890, 2652, 6907, 6924,    0, 6998, 6999, 7000, 7008,

     7039, 7052, 7060, 7061, 7092, 7100, 7105, 7113, 7144, 7137,
     7154, 7171, 7188, 7205, 7222, 7239, 7256, 7273, 7290, 3011,
     7307, 7324, 7398, 7400, 7406, 7441, 7451, 7456, 7494, 7473,
     7518, 7516, 7526, 7554, 7574, 7576, 7582, 7621, 7629, 7646,
     7677, 7682, 7690, 7699, 7734, 7735, 7756, 7743, 7787, 7795,
     7800, 7835, 7848, 7840, 7850, 7879,  408, 7888, 7901, 7910,
     7932, 7942, 7963, 7964, 7985, 7995, 8017, 8026, 8039, 8067,
     8082, 8087, 8077, 8118, 8135, 8127, 8159, 8183, 8174, 8191,
     8215, 8235, 8256, 8255, 8287, 8307, 8308, 8309, 8347, 8352,
     8362, 8372, 8400, 8410, 8420, 8489, 8523, 8540, 8557, 8574,

     8591, 8608, 7109, 8625, 1904, 8642, 3042, 8659, 8676, 8693,
     8710, 8727, 1522, 8730, 8747, 8415, 8821, 8822, 8823, 8831,
     8862, 8875, 8868, 8885, 8989, 9111, 7639, 8903, 8919, 8934,
     3481, 8958, 8975, 9025, 8978, 9042, 3521, 9233, 9059, 9080,
     9097, 9141, 9176, 9202, 9219,    0,    0,    0,    0,    0,
        0,    0, 9268, 9285, 9302, 9319, 9336, 9353, 9370, 9387,
     9404, 9421, 3109, 9438, 9455,    0,    0,    0,    0,    0,
     9472, 9489, 9588, 9705, 8854, 9507, 9523, 9538, 4124, 9557,
     9574, 9624, 9577, 9641, 3604, 9822, 9674, 9691, 9741, 9192,
     9831, 9314, 9069, 9221, 9736, 9839, 9786, 9266, 9668, 9864,

     9872, 9889, 9902,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 9857, 9874, 9891, 9908, 9925, 9942, 9959, 9976,
     9993,10010, 3139,10027,10044,    0,    0,    0,    0,    0,
    10061,10078,10156,10096,10113,10130,    0,    0,    0,    0,
        0,    0,    0,10191,10208,10225,10242,10259,10276,10293,
    10310,10327,10344, 3623,10361,10378,    0,    0,    0,    0,
        0,10395,10412,  407,10486,10487,10488,10496,10527,10520,
    10537,10611,10612,10613,10663,10664,10669,10704,10719,10725,
    10740,10760,10769,10784,10819,10804,10824,10844,10864,10869,
    10889,10884,10904,10924,10929,10964,10949,10984,11004,11005,

    11048,11057,10939,11063,  410,11092,11101,11121,11130,11152,
    11161,11181,11202,11212,11217,11253,11255,11268,11293,11306,
    11315,11337,11354,11359,11376,11404, 3106,11412,11432,11417,
    11452,11472,11477,11492,11512,11532,11533,11553,11577,11592,
    11597,11621,11642,11636,    0,    0,    0,11635,11652,11669,
    11686,11703,11720,11737,  314,10149,11754,11771,11788,11805,
     4339,11822,11839,11856,11873,10490, 1552,10494,11890,    0,
        0,    0,    0,    0,    0,11907,11924,11941,11958,11975,
    11992,12009,12026,12043,12060, 3653,12077,12094,12168,12169,
    12170,12250,12164,  324,12181,12198,12219,12236,12285,12302,

    12319,    0,    0,    0,    0,    0,12336,12353,    0,12452,
    12371,  322,12388,12421,12438,12487,12504,12521,12538,10649,
    12187,12206,12218,12330,12478,12532,12628,    0,    0,    0,
        0,    0,12563,12580,    0,    0,    0,    0,    0,    0,
    12597,12614,    0,12688,12689,12690,12698,12729,12746,12754,
    12767,12782,12806,12807,12827,12842,12851,12871,12866,12895,
    12910,12923,12931,12948,12963,12976,12984,13004,13019,13024,
    13029,13044,13064,16069,13069,13079,13089,13104,13117,13132,
    13142,13152,13157,13192,13202,13177,13212,13233,13253,13273,
    13274,13298,13326,13334,13336,13358,  372,  211,  322,  325,

    13390,13396,13398,13411,13446,13451,13452,13487,13496,13509,
    13518,13531,13553,13559,13574,13584,    0,    0,    0,    0,
        0,    0,    0,    0,    0,13577,13594,13611,13628,13645,
    13662,13679,13696,13713,13730, 3693,13747,13764,    0,    0,
        0,    0,    0,13781,13798,13872,16069,13952,13866,13883,
    13900,    0,16069,14069,13921,13938,13988,    0,    0,14062,
    14068,14063,14161,14162,14170,14171,14214,14222,14223,14224,
    14274,14276,14282,14291,14326,14332,14367,14327,14380,14382,
    14388,14420,14433,14442,14455,14477,14483,14505,14515,14530,
    14536,14558,14568,16069,  316,  304,  292,  288,14590,14596,

    14611,14621,14649,14643,14671,14681,14696,14706,14728,    0,
        0,    0,    0,    0,14721,14738,    0,14812,14813,14814,
    14822,14866,14867,14875,  243,14876,14926,14920,14935,14967,
    14987,14982,14995,15030,15043,15038,15078,15083,15093,15091,
    15131,15136,  272,  263,  260,  223,15146,15141,15151,15186,
    15191,15201,15206,15211,    0,15242,15251,15259,15280,15295,
    15304,15312,  211,15333,15343,15364,15365,15393,15403,15408,
    15418,15428,15456,15476,15478,16069,16069,16069,16069,15484,
    15516,15531,15536,15537,15572,15581,  230,15589,15587,15625,
    15634,15640,15665,15678,15700,15706,15721,15731,15741,  240,

    15766,15756,15781,15791,15801,15806,15816,  251,15844,15854,
    15859,15864,  129,15869,15904,   74,  125,  249,  254,  265,
    16069,16069,15990,15996,15999,16007,16010,16016,16019,  126,
    16024,16032,16038,16041,16046,16052,16058,16062
    } ;

static yyconst flex_int16_t yy_def[1239] =
    {   0,
     1222,    1, 1222, 1222, 1222, 1222, 1222, 1222, 1223, 1224,
     1225, 1222, 1226, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1227, 1222, 1228, 1222, 1222, 1229, 1230, 1222,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30, 1222, 1222, 1222, 1222,   30,   30,   30, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1223, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1224, 1222, 1222, 1222,

     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1226, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1228,  172, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,

     1222, 1222, 1222, 1222, 1222, 1230,   30,   30, 1227,   30,
       30,   30,   30,   30, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30, 1222,
     1222, 1222, 1231,   30,   30, 1222,   30,   30,   30,   30,

       30,   30,   30, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1232, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222,  108,  108, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,  108,
      108,  108,  108,  108,  108, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1233,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,

      152,  152,  152, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222,  152,  152,  152,  152,  152,
      152, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222,  186,  186, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222,  186,  186,  186,  186,
      186,  186, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1234,   30,   30,   30,   30,

       30,   30,   30,   30,   30,   30,   30,   30,   30, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30, 1222,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30, 1222, 1222, 1222, 1222, 1222,

     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222,   30,   30,   30,   30,   30,
       30,   30, 1222, 1222, 1232, 1232, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1235, 1222, 1222,
     1222, 1236, 1222, 1222, 1222,  108,  108,  108,  108,  108,
      108,  108, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222,  108,  108,  108,  108,  108,
     1222, 1222, 1233, 1233, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1237, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,

     1222, 1222, 1222,  152,  152,  152,  152,  152,  152,  152,
      152,  152, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222,  152,  152,  152,  152,  152,
     1222, 1222, 1238, 1222, 1222, 1222,  186,  186,  186,  186,
      186,  186,  186, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222,  186,  186,  186,  186,
      186, 1222, 1222, 1234,   30,   30,   30,   30,   30, 1222,
     1222,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,

       30,   30,   30,   30, 1222,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30, 1222,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,  596,  596,  596, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,  596,
      596,  596,  596,  596,  596, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,   30,   30,
       30, 1232, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,

     1222,  108,  108,  108,  108,  108, 1222, 1222,  108, 1233,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222,  152,  152,  152,
      152,  152, 1222, 1222,  152,  186,  186,  186,  186,  186,
     1222, 1222,  186,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30, 1222,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30, 1222, 1222, 1222, 1222,

       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,  596,  596,  596,  596,
      596,  596,  596,  596,  596, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,  596,  596,
      596,  596,  596, 1222, 1222,   30, 1222, 1232, 1222, 1222,
     1222,  108, 1222, 1233, 1222, 1222, 1222,  152,  186,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30, 1222, 1222, 1222, 1222, 1222,   30,   30,

       30,   30,   30,   30,   30,   30,   30,   30,   30,  596,
      596,  596,  596,  596, 1222, 1222,  596,   30,   30,   30,
       30,   30,   30,   30, 1222,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30, 1222, 1222, 1222, 1222,   30,   30,   30,   30,
       30,   30,   30,   30,  596,   30,   30,   30,   30,   30,
       30,   30, 1222,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30, 1222, 1222, 1222, 1222,   30,
       30,   30,   30,   30,   30,   30, 1222,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30, 1222,

       30,   30,   30,   30,   30,   30,   30, 1222,   30,   30,
       30,   30, 1222,   30,   30, 1222, 1222, 1222, 1222, 1222,
     1222,    0, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222
    } ;

static yyconst flex_int16_t yy_nxt[16198] =
    {   0,
        4,    5,    6,    7,    5,    8,    9,   10,   11,    4,
       12,   13,   14,   15,   16,   17,   18,   19,   20,   21,
       22,   22,   22,   22,   22,   22,   22,   22,   23,   24,
       25,   26,   27,   28,   29,   30,   31,   32,   33,   34,
       35,   36,   37,   38,   39,   39,   40,   41,   42,   43,
       44,   45,   46,   47,   48,   49,   50,   39,   51,   39,
       52,    4,   53,   54,   55,   56,   31,   32,   33,   34,
       57,   36,   37,   38,   39,   39,   40,   41,   42,   43,
       44,   45,   46,   58,   48,   49,   50,   39,   51,   39,
       59,   60,   61,    4,   62,   63,   64,   62,   62,   62,

       62,   62,   62,   62,   62,   62,   65,   66,   66,   67,
        4,    4,   68,   69,    4,   70,   71,   72,   73,   74,
       75,   76,   77,    4,   78,   79,   80,    4,   81,   98,
      206,   81,   85,  303,  303,  303, 1218,  303, 1217,   99,
     1216,  100,  100,  100,  100,  100,  100,  101,  102,  102,
      102,  102,  103,  104,  104,  105,  106,  107,  142,  142,
      142,  142,  290,  290,  290,  290,  313,  313,  314,  144,
      143,  145,  145,  145,  145,  145,  145,  145,  145,  304,
      304,  304,  304,  304,  304,  304,  146,   86,  147,  147,
      147,  147,  147,  147,  147,  147,  148,  148,  148,  148,

      148,  148,  148,  148,  297,  297,  297,  297,  297,  297,
      297,  297,  297,  297,  297,  297,  297,  297,  297,  297,
      297,   81, 1187,  291,   81,   87,  321,  321,  321,  321,
      321,  321,  321, 1095, 1179,   88, 1096,   89,   89,   89,
       89,   89,   89,   90,   91,   91,   91,   91,   92,   93,
       93,   94,   95,   96,  109,  110,  111,  109,  109,  109,
      109,  109,  109,  109,  109,  109,  112,  113,  113,  114,
     1200, 1178,  115,  116, 1177,  117,  118,  119,  120,  121,
      122,  123,  124, 1176,  125,  126,  127,  130,  149, 1208,
      150,  150,  150,  150,  150,  150,  150,  150,  237,  210,

     1200,  210, 1213, 1219,  242, 1220,  238, 1163, 1221,  151,
     1146,  239,  240,  210,  243,  210, 1145,  210,  210, 1208,
      210,  241,  327,  327,  327,  327,  327,  327,  237,  210,
     1144,  210, 1213, 1219,  242, 1220,  238,  131, 1221,  151,
     1143,  239,  240,  210,  243,  210, 1098,  210,  210, 1097,
      210,  241,  298,  298,  298,  298,  298,  298,  298,  298,
      298,  298,  298,  298,  298,  298,  298,  298,  298,  336,
      336,  336,  336,  336,  336,  132,  330,  330,  330,  330,
      330,  330,  330, 1094,  673,  133,  625,  134,  134,  134,
      134,  134,  134,  135,  136,  136,  136,  136,  137,  138,

      138,  139,  140,  141,  153,  154,  155,  153,  153,  153,
      153,  153,  153,  153,  153,  153,  156,  157,  157,  158,
      845,  974,  159,  160,  496,  161,  162,  163,  164,  165,
      166,  167,  168,  805,  169,  170,  171,  173,  174,  244,
      210,  210,  454,  245,  365,  365,  365,  172,  365,  210,
      401,  129,  210,  247,  337,  246,  210,  210,   97,  210,
      210,  210,  248,   84,  252,  210,  207,  496,  210,  244,
      210,  210,  380,  245,  375,  375,  376,  318,  296,  210,
      293,  292,  210,  247,  185,  246,  210,  210,  128,  210,
      210,  210,  248,   83,  252,  210,   82, 1222,  210,  389,

      389,  389,  389,  389,  389,  175,  366,  366,  366,  366,
      366,  366,  366, 1222, 1222,  176, 1222,  177,  177,  177,
      177,  177,  177,  178,  179,  179,  179,  179,  180,  181,
      181,  182,  183,  184,  187,  188,  189,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  190,  191,  191,  192,
     1222, 1222,  193,  194, 1222,  195,  196,  197,  198,  199,
      200,  201,  202, 1222,  203,  204,  205,  207,  208, 1222,
      207,  207,  207,  207,  207,  207,  207,  207,  209,  431,
      431,  431, 1222,  431, 1222,  210,  211,  210,  210,  210,
      210,  210,  210,  210,  210,  210,  210,  210,  212,  210,

      210,  210,  213,  210,  210,  214,  210,  210,  210,  210,
      441,  441,  442, 1222,  210,  210,  211,  210,  210,  210,
      210,  210,  210,  210,  210,  210,  210,  210,  212,  210,
      210,  210,  213,  210,  210,  214,  210,  210,  210,  210,
      492,  492,  493, 1222,  215,  216,  217,  218,  218,  218,
      218,  218,  218,  218,  218,  218,  219,  220,  220,  221,
     1222,  222,  223,  224,  225,  226,  227,  228,  229,  230,
      231,  232,  233,  210,  234,  235,  236,  253,  210,   84,
      249, 1222, 1222,  250,   84,  210,  210, 1222,  251,  210,
      210,  254,  210, 1222,  210, 1222, 1222,  210,  210,  519,

      519,  520,  210,  210, 1222,  210, 1222,  253,  210, 1222,
      249, 1222, 1222,  250, 1222,  210,  210, 1222,  251,  210,
      210,  254,  210, 1222,  210,  210, 1222,  210,  210,  255,
     1222, 1222,  210, 1222,   84,  210, 1222,  256, 1222,   84,
      257,  258, 1222,   84,  210,  259,  210,  260,  482,  482,
      482,   84,  482,  261,   84,  210,   84, 1222,  210,  255,
     1222, 1222,  210, 1222, 1222,  210, 1222,  256, 1222, 1222,
      257,  258, 1222, 1222,  210,  259,  210,  260, 1222,  142,
      142,  142,  142,  261,  267,  210,  262,  210,  210,  263,
      264,  143,  210, 1222,  265,  210, 1222,  210,  268,  210,

      266,  210, 1222,  210,  210, 1222,  210,  383,  383,  383,
      383,  383,  383,  383,  267,  210,  262,  210, 1222,  263,
      264,  662,  662,  663,  265,  272,  210,  210,  268,  210,
      266,  210, 1222,  210,  210,  210,  210, 1222,  210,  269,
     1222,  273,  210, 1222, 1222,  210, 1222,  210, 1222,  270,
      271,  210, 1222, 1222,  210,  272,  210,  390,  390,  390,
      390,  390,  390,  390,  390,  210, 1222, 1222,  210,  269,
     1222,  273,  210, 1222, 1222,  210, 1222,  210, 1222,  270,
      271,  210,  274,  210,  210, 1222,  275,  277,  210, 1222,
     1222,  278, 1222, 1222,  279,  210,  276, 1222, 1222,  210,

      210, 1222,  210,  210,  210,  280,  281,  210, 1222, 1222,
      282, 1222,  274,  210, 1222,  210,  275,  277,  210,  210,
     1222,  278,  210, 1222,  279,  210,  276,  210,  283,  210,
      210, 1222,  210,  210,  210,  280,  281,  210, 1222,  284,
      282, 1222,  285,  286, 1222,  210,  210,  287,  210,  210,
     1222, 1222,  210,  722,  722,  723, 1222,  210,  283, 1222,
      210, 1222, 1222,  210,  210, 1222,  289,  210,  210,  284,
     1222, 1222,  285,  286,  288,  210,  210,  287,  210,  210,
      210, 1222,  210, 1222,  210, 1222, 1222,  210, 1222, 1222,
      210, 1222, 1222,  210,  210, 1222,  289,  210,  210,  622,

      622,  622,  622,  622,  288,  210,  210, 1222,  210,  210,
      210, 1222,  210,  249,  210,  282,  250,  210,  210, 1222,
      210,  251,  210, 1222,  210,  210, 1222,  210,  432,  432,
      432,  432,  432,  432,  432,  294,  210, 1222,  210,  753,
      753,  754, 1222,  249, 1222,  282,  250, 1222,  210, 1222,
      210,  251,  210,  295,  210,  210, 1222,  210,  298,  298,
      298,  298,  298,  298,  298,  297,  297,  297,  297,  297,
      297,  297,  297,  297,  297,  299,  299,  299,  299,  299,
      299,  299,  297,  297,  297,  297,  297,  297,  297,  297,
      297,  297,  300,  300,  300,  300,  300,  300,  300,  300,

      300,  300,  300,  300,  300,  300,  300,  300,  300,  301,
      301,  301,  301,  301,  301,  301,  301,  301,  301,  301,
      301,  300,  300,  300,  297,  297,  302,  302,  302,  302,
      302,  302,  302,  302, 1222,  302,  302,  302,  302, 1222,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      303,  303,  303,  303,  303,  303,  303,  303,  303,  303,
      303,  303,  303,  303,  303,  303,  303,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  306,  307,  308,  308,  308,  308,

      308,  308,  308,  308,  308,  308,  309,  309,  309,  309,
      308,  310,  308,  308,  308,  308,  308,  308,  308,  308,
      308,  308,  308,  308,  308,  308,  308,  308,  311,  311,
      311,  311,  311,  311,  311,  311,  311,  311,  311,  311,
      311,  311,  311,  311,  311,  312,  312,  312,  312,  312,
      312,  312,  312,  312,  312,  315,  315,  315,  315,  315,
      315,  315,  315,  315,  315,  316,  316,  316,  316,  316,
      316,  316,  316,  316,  316,  316,  316,  316,  316,  316,
      316,  316,  317,  319,  319,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319,  319,  319,  320,

      320,  320,  320,  320,  320,  320,  320,  320,  320,  320,
      320,  320,  320,  320,   84,   84,   84,   84,   84,   84,
       84,   84,   84,   84,   84,   84,   84,   84,   84,   84,
       84,  453,  453,  453,  453,  453,  453,   86,  322,  322,
      322,  322,  322,  322,  322,  322,  322,  322,  322,  322,
      322,  322,  322,  322,  322,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  325,  325,  325,  325,  325,
      325,  325,  325,  325,  325,   87,  393,  393,  393,  393,
      393,  393,  393,  393, 1222,   88, 1222,   89,   89,   89,
       89,   89,   89,   90,   91,   91,   91,   91,   92,   93,

       93,   94,   95,   96,  324,  324,  324,  324,  324,  324,
      324,  324,  324,  324,  324,  324,  324,  324,  324,  324,
      324,  326,  326,  326,  326,  326,  326,  326,  326,  326,
      326,  326,  326,  326,  326,  326,  326,  326,   98,  447,
      447,  447,  447,  447,  447,  447, 1222, 1222,   99, 1222,
      100,  100,  100,  100,  100,  100,  101,  102,  102,  102,
      102,  103,  104,  104,  105,  106,  107,  328,  328,  328,
      328,  328,  328,  328,  328,  328,  328,  328,  328,  328,
      328,  328,  328,  329,  329,  329,  329,  329,  329,  329,
      329,  329,  329,  329,  329,  329,  329,  329,   97,   97,

       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,  331,  331,  331,  331,  331,
      331,  331,  331,  331,  331,  331,  331,  331,  331,  331,
      331,  331,  332,  332,  332,  332,  332,  332,  332,  332,
      332,  332,  333,  333,  333,  333,  333,  333,  333,  333,
      333,  333,  333,  333,  333,  333,  333,  333,  333,  334,
      334,  334,  334,  334,  334,  334,  334,  334,  334,  335,
      335,  335,  335,  335,  335,  335,  335,  335,  335,  335,
      335,  335,  335,  335,  335,  335,  337,  337,  337,  337,
      337,  337,  337,  337,  483,  483,  483,  483,  483,  483,

      483,  338,  338,  338,  338,  338,  338,  338,  338,  338,
      338,  338,  338,  338,  338,  338,  338,  338,  338,  338,
      338,  338,  338,  338,  338,  338,  885,  885,  886, 1222,
      338,  338,  338,  338,  338,  338,  338,  338,  338,  338,
      338,  338,  338,  338,  338,  338,  338,  338,  338,  338,
      338,  338,  338,  338,  338,  338, 1035, 1035, 1036, 1222,
      339,  340,  341,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  343,  344,  344,  345, 1222,  346,  347,  348,
     1222,  349,  350,  351,  352,  353,  354,  355,  356, 1222,
      357,  358,  359,  360,  360,  360,  360,  360,  360,  360,

      360,  360,  360,  360,  360,  360,  360,  360,  360,  360,
      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  360,  360,  360,  360,  360,  360,
      360,  360,  360,  360,  362,  362,  362,  362,  362,  362,
      362,  360,  360,  360,  360,  360,  360,  360,  360,  360,
      360,  363,  363,  363,  363,  363,  363,  363,  363,  363,
      363,  363,  363,  363,  363,  363,  363,  363,  364,  364,
      364,  364,  364,  364,  364,  364,  364,  364,  364,  364,
      363,  363,  363,  360,  360,  108,  108,  108,  108,  108,

      108,  108,  108, 1222,  108,  108,  108,  108, 1222,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  365,
      365,  365,  365,  365,  365,  365,  365,  365,  365,  365,
      365,  365,  365,  365,  365,  365,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  368,  369,  370,  370,  370,  370,  370,
      370,  370,  370,  370,  370,  371,  371,  371,  371,  370,
      372,  370,  370,  370,  370,  370,  370,  370,  370,  370,
      370,  370,  370,  370,  370,  370,  370,  373,  373,  373,

      373,  373,  373,  373,  373,  373,  373,  373,  373,  373,
      373,  373,  373,  373,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  377,  377,  377,  377,  377,  377,
      377,  377,  377,  377,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  379,  129,  290,  290,  290,  290,  129,  381,  381,
      381,  381,  381,  381,  381,  381,  381,  381,  381,  381,
      381,  381,  381,  381,  382,  382,  382,  382,  382,  382,
      382,  382,  382,  382,  382,  382,  382,  382,  382,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385, 1222,

     1222,  131,  670,  670,  670,  670,  670,  129, 1222,  875,
      875,  875,  129,  875,  291, 1222,  129,  510,  510,  510,
      510,  510,  510,  510,  129, 1222,  399,  129,  399,  129,
     1222,  400,  400,  400,  400,  400,  400,  400,  400,  132,
      653,  653,  653,  653,  653,  653,  653, 1222, 1222,  133,
     1222,  134,  134,  134,  134,  134,  134,  135,  136,  136,
      136,  136,  137,  138,  138,  139,  140,  141,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,

      384,  384,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  386,  386,  386,  386,  386,  386,  386,  386,  387,
      387,  387,  387,  387,  387,  387,  387,  387,  387,  388,
      388,  388,  388,  388,  388,  388,  388,  388,  388,  388,
      388,  388,  388,  388,  388,  388,  391, 1222,  145,  145,
      145,  145,  145,  145,  145,  145,  394, 1222,  147,  147,
      147,  147,  147,  147,  147,  147, 1222,  392,  148,  148,
      148,  148,  148,  148,  148,  148, 1222,  395, 1222,  397,
      397,  397,  397,  397,  397,  397,  397,  396,  400,  400,
      400,  400,  400,  400,  400,  400, 1222,  392,  398,  713,

      713,  713,  713,  713,  713,  713,  149,  395,  150,  150,
      150,  150,  150,  150,  150,  150, 1222,  396,  400,  400,
      400,  400,  400,  400,  400,  400, 1222,  151,  398,  426,
      426,  426,  426,  426,  426,  426,  426,  426,  426,  426,
      426,  426,  426,  426,  426,  426,  440,  440,  440,  440,
      440,  440,  440,  440,  440,  440, 1222,  151,  401,  402,
     1222,  401,  401,  401,  401,  401,  401,  401,  401,  730,
      730,  730,  730,  730, 1222, 1222,  403,  403,  403,  403,
      403,  403,  403,  403,  403,  403,  403,  403,  403,  403,
      403,  403,  403,  403,  403,  403,  403,  403,  403,  403,

      403, 1222, 1222, 1222, 1222,  403,  403,  403,  403,  403,
      403,  403,  403,  403,  403,  403,  403,  403,  403,  403,
      403,  403,  403,  403,  403,  403,  403,  403,  403,  403,
      403, 1222, 1222, 1222, 1222,  404,  405,  406,  407,  407,
      407,  407,  407,  407,  407,  407,  407,  408,  409,  409,
      410, 1222,  411,  412,  413,  414,  415,  416,  417,  418,
      419,  420,  421,  422, 1222,  423,  424,  425,  427,  427,
      427,  427,  427,  427,  427,  427,  427,  427,  427,  427,
      427,  427,  427,  427,  427,  427,  427,  427,  427,  427,
      427,  427,  426,  426,  426,  426,  426,  426,  426,  426,

      426,  426,  428,  428,  428,  428,  428,  428,  428,  426,
      426,  426,  426,  426,  426,  426,  426,  426,  426,  429,
      429,  429,  429,  429,  429,  429,  429,  429,  429,  429,
      429,  429,  429,  429,  429,  429,  430,  430,  430,  430,
      430,  430,  430,  430,  430,  430,  430,  430,  429,  429,
      429,  426,  426,  152,  152,  152,  152,  152,  152,  152,
      152, 1222,  152,  152,  152,  152, 1222,  152,  152,  152,
      152,  152,  152,  152,  152,  152,  152,  152,  152,  152,
      152,  152,  152,  152,  152,  152,  152,  431,  431,  431,
      431,  431,  431,  431,  431,  431,  431,  431,  431,  431,

      431,  431,  431,  431,  433,  433,  433,  433,  433,  433,
      433,  433,  433,  433,  433,  433,  433,  433,  433,  433,
      433,  434,  435,  436,  436,  436,  436,  436,  436,  436,
      436,  436,  436,  437,  437,  437,  437,  436,  438,  436,
      436,  436,  436,  436,  436,  436,  436,  436,  436,  436,
      436,  436,  436,  436,  436,  439,  439,  439,  439,  439,
      439,  439,  439,  439,  439,  439,  439,  439,  439,  439,
      439,  439,  443,  443,  443,  443,  443,  443,  443,  443,
      443,  443,  444,  444,  444,  444,  444,  444,  444,  444,
      444,  444,  444,  444,  444,  444,  444,  444,  444,  174,

      445,  445,  445,  445,  445,  445,  445,  445,  445,  445,
      445,  445,  445,  445,  445,  445,  446,  446,  446,  446,
      446,  446,  446,  446,  446,  446,  446,  446,  446,  446,
      446,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448, 1222,  175,  744,  744,  744,
      744,  744,  744,  744, 1222, 1222,  176, 1222,  177,  177,
      177,  177,  177,  177,  178,  179,  179,  179,  179,  180,
      181,  181,  182,  183,  184,  449,  449,  449,  449,  449,

      449,  449,  449,  449,  449,  450,  450,  450,  450,  450,
      450,  450,  450,  450,  450,  450,  450,  450,  450,  450,
      450,  450,  451,  451,  451,  451,  451,  451,  451,  451,
      451,  451,  452,  452,  452,  452,  452,  452,  452,  452,
      452,  452,  452,  452,  452,  452,  452,  452,  452,  454,
      454,  454,  454,  454,  454,  454,  454,  761,  761,  761,
      761,  761, 1222, 1222,  455,  455,  455,  455,  455,  455,
      455,  455,  455,  455,  455,  455,  455,  455,  455,  455,
      455,  455,  455,  455,  455,  455,  455,  455,  455, 1222,
     1222, 1222, 1222,  455,  455,  455,  455,  455,  455,  455,

      455,  455,  455,  455,  455,  455,  455,  455,  455,  455,
      455,  455,  455,  455,  455,  455,  455,  455,  455, 1222,
     1222, 1222, 1222,  456,  457,  458,  459,  459,  459,  459,
      459,  459,  459,  459,  459,  460,  461,  461,  462, 1222,
      463,  464,  465, 1222,  466,  467,  468,  469,  470,  471,
      472,  473, 1222,  474,  475,  476,  477,  477,  477,  477,
      477,  477,  477,  477,  477,  477,  477,  477,  477,  477,
      477,  477,  477,  478,  478,  478,  478,  478,  478,  478,
      478,  478,  478,  478,  478,  478,  478,  478,  478,  478,
      478,  478,  478,  478,  478,  478,  478,  477,  477,  477,

      477,  477,  477,  477,  477,  477,  477,  479,  479,  479,
      479,  479,  479,  479,  477,  477,  477,  477,  477,  477,
      477,  477,  477,  477,  480,  480,  480,  480,  480,  480,
      480,  480,  480,  480,  480,  480,  480,  480,  480,  480,
      480,  481,  481,  481,  481,  481,  481,  481,  481,  481,
      481,  481,  481,  480,  480,  480,  477,  477,  186,  186,
      186,  186,  186,  186,  186,  186, 1222,  186,  186,  186,
      186, 1222,  186,  186,  186,  186,  186,  186,  186,  186,
      186,  186,  186,  186,  186,  186,  186,  186,  186,  186,
      186,  186,  482,  482,  482,  482,  482,  482,  482,  482,

      482,  482,  482,  482,  482,  482,  482,  482,  482,  484,
      484,  484,  484,  484,  484,  484,  484,  484,  484,  484,
      484,  484,  484,  484,  484,  484,  485,  486,  487,  487,
      487,  487,  487,  487,  487,  487,  487,  487,  488,  488,
      488,  488,  487,  489,  487,  487,  487,  487,  487,  487,
      487,  487,  487,  487,  487,  487,  487,  487,  487,  487,
      490,  490,  490,  490,  490,  490,  490,  490,  490,  490,
      490,  490,  490,  490,  490,  490,  490,  491,  491,  491,
      491,  491,  491,  491,  491,  491,  491,  494,  494,  494,
      494,  494,  494,  494,  494,  494,  494,  495,  495,  495,

      495,  495,  495,  495,  495,  495,  495,  495,  495,  495,
      495,  495,  495,  495,  210, 1222,  769,  769,  769,  769,
      769, 1222,  210,  210, 1222, 1222,  210,  997,  998,  999,
      210, 1000, 1222,  210,  210,  210, 1222, 1222,  210,  210,
     1222,  210,  210, 1222,  210,  876,  876,  876,  876,  876,
      876,  876,  210,  210, 1222, 1222,  210, 1222, 1222, 1222,
      210, 1222, 1222,  210,  210,  210, 1222, 1222,  210,  210,
     1222,  210,  210,  153,  154,  155,  153,  153,  153,  153,
      153,  153,  153,  153,  153,  156,  157,  157,  158, 1222,
      210,  159,  160, 1222,  161,  162,  163,  164,  165,  166,

      167,  168,  210,  169,  170,  171,  497,  210, 1222,  210,
     1222, 1222,  210,  499,  906,  906,  906,  906,  906,  210,
      210, 1222,  210,  210,  210, 1222,  210,  500,  210,  498,
     1222,  210,  210, 1222,  210, 1222,  497,  210,  210,  210,
     1222,  210,  210,  499,  932,  932,  932,  932,  932,  210,
     1222, 1222,  210,  210,  210, 1222,  210,  500,  210,  498,
     1222,  210, 1222, 1222,  210, 1222, 1222, 1222,  210, 1222,
     1222,  210,  501,  502,  502,  502,  502,  502,  502,  502,
      502,  502,  502,  502,  502,  502,  502,  502,  502,  503,
      503,  503,  503,  503,  503,  503,  503,  503,  503,  503,

      503,  503,  503,  503,  503,  503,  503,  503,  503,  503,
      503,  503,  503,  502,  502,  502,  502,  502,  502,  502,
      502,  502,  502,  502,  502,  502,  502,  502,  502,  502,
      502,  502,  502,  502,  502,  502,  502,  502,  502,  502,
      504,  504,  504,  504,  504,  504,  504,  502,  502,  502,
      502,  502,  502,  502,  502,  502,  502,  505,  505,  505,
      505,  505,  505,  505,  505,  505,  505,  505,  505,  505,
      505,  505,  505,  505,  506,  506,  506,  506,  506,  506,
      506,  506,  506,  506,  506,  506,  505,  505,  505,  502,
      502,  210,  210,  210,  210,  210,  210,  210,  210, 1222,

      210,  210,  210,  210, 1222,  210,  210,  210,  210,  210,
      210,  210,  210,  210,  210,  210,  210,  210,  210,  210,
      210,  210,  210,  210,  210,  210,  210,  210,  210,  210,
      210,  210,  210,  210,  210,  210,  210,  210,  210,  210,
      210,  210,  507,  507,  507,  507,  507,  507,  507,  507,
      507,  507,  507,  507,  508,  508,  508,  210,  508,  509,
      509,  509,  509,  509,  509,  509,  509,  509,  509,  509,
      509,  509,  509,  509,  509,  509,  511,  511,  511,  511,
      511,  511,  511,  511,  511,  511,  511,  511,  511,  511,
      511,  511,  511,  512,  513,  514,  514,  514,  514,  514,

      514,  514,  514,  514,  514,  515,  515,  515,  515,  514,
      516,  514,  514,  514,  514,  514,  514,  514,  514,  514,
      514,  514,  514,  514,  514,  514,  514,  517,  517,  517,
      517,  517,  517,  517,  517,  517,  517,  517,  517,  517,
      517,  517,  517,  517,  518,  518,  518,  518,  518,  518,
      518,  518,  518,  518,  521,  521,  521,  521,  521,  521,
      521,  521,  521,  521,  522,  522,  522,  522,  522,  522,
      522,  522,  522,  522,  522,  522,  522,  522,  522,  522,
      522,  210,  210,  210,  895,  895,  895,  895,  895,  895,
      895,  210, 1222,  210,  524,  210,  525,  523,  210,  210,

      210,  210,  210,  210, 1222, 1222, 1222,  210, 1222,  526,
      210,  210,  210,  210,  901,  901,  901,  901,  901,  901,
     1222,  210,  210,  210,  524,  210,  525,  523,  210,  210,
      210,  210,  210,  210,  210,  210, 1222,  210,  210,  526,
      210,  210,  527,  528,  210, 1222, 1222,  210, 1222, 1222,
     1222,  210,  210, 1222,  210, 1222,  529, 1222, 1222, 1222,
      210, 1222,  530,  210,  210,  210,  210, 1222,  210, 1222,
     1222,  210,  527,  528,  210,  210, 1222,  210,  210, 1222,
     1222,  210,  210,  531,  210,  210,  529,  210,  532, 1222,
      210,  533,  530,  210,  210, 1222,  210,  919,  919,  919,

      919,  919,  919,  534,  210,  210, 1222, 1222,  210, 1222,
     1222, 1222,  210,  531, 1222,  210,  210,  210,  532, 1222,
      210,  533, 1222,  210,  210,  210,  535,  536,  940,  940,
      940,  940,  940,  534,  210,  210, 1222,  210, 1222, 1222,
     1222,  210,  537, 1222,  210, 1222,  210,  210, 1222, 1222,
      210,  210, 1222,  210,  210,  210,  535,  536, 1043, 1043,
     1043, 1043, 1043,  210, 1222,  210, 1222,  210, 1222, 1222,
     1222,  210,  537,  538,  210,  210,  210,  210,  210,  210,
     1222,  210,  210, 1222,  210, 1222, 1222, 1222,  210,  539,
      210,  540,  210,  210,  210,  210, 1222,  210, 1114, 1114,

     1114, 1114, 1114,  538, 1222,  210,  210, 1222,  210,  210,
     1222, 1222,  210, 1222,  210,  541,  210, 1222,  210,  539,
      210,  540,  210, 1222,  210,  210,  210,  210,  210,  542,
      210,  210,  210,  543, 1222,  210,  210, 1222, 1222, 1222,
     1222, 1222, 1222,  210,  210,  541,  210,  210,  210,  544,
      210, 1222,  210, 1222, 1222,  210,  210, 1222,  210,  542,
      210,  210,  210,  543, 1222,  210,  210, 1222, 1222, 1222,
     1222,  210, 1222,  210, 1222, 1222, 1222,  210,  210,  544,
      210, 1222,  210,  210,  210,  210, 1222,  210,  545, 1222,
      210,  546,  547,  552, 1222, 1222,  210, 1222, 1222,  548,

      210,  210,  549,  210,  550,  553, 1222, 1222,  210,  210,
      551,  210,  210,  210,  210, 1222, 1222,  210,  545, 1222,
      210,  546,  547,  552, 1222, 1222,  210, 1222, 1222,  548,
      210, 1222,  549,  210,  550,  553,  554,  210,  210,  210,
      551,  210,  210,  210, 1222, 1222, 1222, 1222, 1222,  210,
     1222, 1222, 1222,  210,  555,  210,  210, 1222, 1222,  210,
     1222, 1222,  210,  557, 1222, 1222,  554,  210, 1222, 1222,
     1222, 1222, 1222,  210, 1222,  210, 1222, 1222, 1222,  210,
     1222, 1222, 1222,  210,  555,  210,  210,  210,  210,  210,
      210,  210,  210, 1222,  210, 1222,  556, 1222, 1222, 1222,

      210,  558,  210,  210,  210,  210,  210,  210, 1222,  210,
     1222, 1222, 1222, 1222, 1222,  559, 1222,  210,  210,  210,
      210,  210,  210, 1222,  210, 1222,  556, 1222,  210, 1222,
      210,  558,  210,  210,  210, 1222,  210,  210, 1222,  210,
      560, 1222, 1222,  210,  210,  559, 1222,  210,  210,  210,
     1222, 1222,  210, 1222,  561,  210, 1222, 1222,  210,  210,
      210, 1222,  210,  210,  210,  562, 1222,  210,  563, 1222,
      560, 1222, 1222,  210,  210,  210, 1222,  210,  210,  210,
      565, 1222,  210, 1222,  561,  210, 1222,  210, 1222,  210,
      210,  564,  210,  210,  210,  562, 1222,  210,  563,  210,

     1222, 1222, 1222,  210, 1222,  210,  210, 1222, 1222,  210,
      565,  210,  210,  566, 1222, 1222,  210,  210, 1222, 1222,
     1222,  564, 1222,  210, 1222, 1222, 1222,  210,  210,  210,
      210, 1222,  567,  210, 1222,  210,  210, 1222, 1222, 1222,
     1222,  210, 1222,  566, 1222, 1222,  210, 1222, 1222, 1222,
     1222, 1222, 1222,  210,  210, 1222,  210,  210,  210,  568,
      210, 1222,  567,  569, 1222,  210,  571, 1222,  210,  570,
      210,  210,  210,  210, 1222,  210,  572, 1222, 1222, 1222,
     1222, 1222, 1222,  210,  210, 1222,  210,  210, 1222,  568,
      210,  573,  210,  569, 1222, 1222,  571, 1222,  210,  570,

      210,  210,  210,  210,  210,  210,  572,  210,  210, 1222,
      574,  210, 1222,  210, 1222, 1222, 1222,  210,  575,  210,
      210,  573,  210,  210, 1222, 1222,  210,  913,  913,  913,
      913,  913,  913,  913,  210, 1222, 1222,  210,  210, 1222,
      574,  210, 1222, 1222, 1222,  210,  576, 1222,  575,  210,
      580,  210, 1222,  210, 1222,  577,  210,  210, 1222,  578,
      579,  210, 1222,  210,  210, 1222, 1222,  210, 1222, 1222,
      210, 1222, 1222, 1222, 1222,  210,  576, 1222, 1222, 1222,
      580,  210,  581,  210, 1222,  577,  582,  210, 1222,  578,
      579,  210,  584,  210,  210,  210, 1222,  210,  583,  210,

      210, 1222,  210,  585,  210, 1222, 1222,  210,  210, 1222,
     1222,  210,  581,  210, 1222, 1222,  582, 1222,  586,  210,
     1222, 1222,  584,  210, 1222,  210,  210, 1222,  583,  210,
      587,  210,  210,  585,  210, 1222, 1222,  210,  210,  210,
     1222,  210, 1222,  210, 1222, 1222,  591,  210,  586,  210,
      210,  210,  210,  210,  588,  210,  210, 1222,  210,  589,
      587,  210, 1222, 1222,  210,  590, 1222,  210,  210,  210,
      592,  210, 1222,  210, 1222, 1222,  591,  210, 1222,  210,
      210,  210,  210,  210,  588,  210,  210,  210,  210,  589,
     1222,  595,  210, 1222,  210,  590, 1222,  210,  210,  210,

      592,  210,  593,  210,  210, 1222,  210,  210,  210,  210,
      594,  210, 1222,  210, 1222, 1222,  210,  210, 1222,  210,
     1222,  595,  210,  210, 1222, 1222,  210, 1222, 1222,  210,
     1222, 1222,  593,  210,  210, 1222,  210,  210,  210, 1222,
      594,  210, 1026, 1026, 1026, 1026, 1026, 1026, 1026,  210,
     1222, 1222, 1222,  210, 1222, 1222,  210,  597,  598,  599,
      597,  597,  597,  597,  597,  597,  597,  597,  597,  600,
      601,  601,  602, 1222,  210,  603,  604, 1222,  605,  606,
      607,  608,  609,  610,  611,  612,  210,  613,  614,  615,
      210,  210, 1222,  210, 1222, 1222,  210, 1222, 1222, 1222,

     1222, 1222, 1222,  210,  210, 1222,  210,  210,  210, 1222,
      210, 1222,  210, 1222,  616,  210,  210, 1222,  210, 1222,
      210,  210,  210,  210, 1222,  210,  210, 1222, 1222, 1222,
     1222,  210, 1222,  210, 1222, 1222,  210,  210,  210,  617,
      210,  210,  210,  210, 1222,  210,  210,  210,  210, 1222,
      210,  210,  210,  210, 1222,  210,  210,  210,  210, 1222,
      210,  210,  210,  210, 1222,  210, 1222,  210,  210, 1222,
      210,  210,  210,  210, 1222,  210,  210,  210, 1222, 1222,
      210,  210, 1222,  210, 1222, 1222,  210,  210,  210, 1222,
      210, 1222,  210,  210, 1222,  210, 1222,  210,  210, 1222,

      210, 1222,  210, 1222, 1222,  210,  303,  303,  303,  303,
      303,  303,  303,  303,  303,  303,  303,  303,  303,  303,
      303,  303,  303,  618,  618,  618,  618,  618,  618,  618,
      618,  618,  618,  618,  618,  618,  618,  618,  618,  618,
      297,  297,  297,  297,  297,  298,  297,  297,  297,  297,
      297,  297,  297,  297,  297,  297,  297,  297,  297,  297,
      297,  297,  297,  297,  297,  297,  297,  297,  297,  298,
      298,  298,  298,  298,  297,  297,  297,  297,  297,  297,
      297,  297,  297,  297,  297,  297,  297,  297,  297,  297,
      297,  619,  619,  619,  619,  619,  619,  619,  619,  619,

      619,  619,  619,  619,  619,  619,  619,  619,  297,  620,
      620,  620,  620,  620,  620,  620,  620,  620,  620,  620,
      620,  620,  620,  620,  620,  620,  620,  620,  620,  620,
      620,  620,  620,  620,  620,  620,  620,  620,  620,  620,
      620,  620,  297,  297,  297,  297,  297,  297,  297,  297,
      297,  297,  297,  297,  297,  297,  297,  297,  297,  621,
      621,  621,  621,  621,  621,  621,  621,  621,  621,  621,
      621,  621,  621,  621,  621,  621,  623,  623,  623,  623,
      623,  623,  623,  623,  623,  623,  623,  623,  623,  623,
      623,  623,  623,  624,  624,  624,  624,  624,  624,  624,

      624,  624,  624,  624,  624,  624,  624,  624,  624,  624,
      626,  320,  320,  320,  320,  320,  320,  320,  320,  320,
      320,  320,  320,  320,  320,  320,  320,  320,   84,   84,
       84,   84,   84,   84,   84,   84,   84,   84,   84,   84,
       84,   84,   84,   84,   84,  638,  638,  638,  638,  638,
      638,  638,  638,  638,  638,  638,  638,  638,  638,  638,
      638,  638, 1222, 1222, 1222,  627,   84,   84,   84,   84,
       84,   84,   84,   84,   84,   84,   84,   84,   84,   84,
       84,   84,   84,   84,   84,   84,   84,   84,   84,   84,
       84,   84,   84,   84,   84,   84,   84,   84,   84,   84,

      693, 1222,  693,  628, 1222,  694,  694,  694,  694,  694,
      694,  694,  694,  629, 1222,  630,  630,  630,  630,  630,
      630,  631,  632,  632,  632,  632,  633,  634,  634,  635,
      636,  637,  639,  639,  639,  639,  639,  639,  639,  639,
      639,  639,  639,  639,  639,  639,  639,  639,  639,  640,
      640,  640,  640,  640,  640,  640,  640,  640,  640,  640,
      640,  640,  640,  640,  640,  640,  641,  641,  641,  641,
      641,  641,  641,  641,  641,  641,  641,  641,  641,  641,
      641,  641,  641,  329,  329,  329,  329,  329,  329,  329,
      329,  329,  329,  329,  329,  329,  329,  329,  329,  329,

       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,  642,  642,  642,
      642,  642,  642,  642,  642,  642,  642,  642,  642,  642,
      642,  642,  642,  642,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,  643,  643,
      643,  643,  643,  643,  643,  643,  643,  643,  643,  643,
      643,  643,  643,  643,  643,  644,  644,  644,  644,  644,
      644,  644,  644,  644,  644,  644,  644,  644,  644,  644,

      644,  644,  645,  645,  645,  645,  645,  645,  645,  645,
      645,  645,  645,  645,  645,  645,  645,  645,  645,  646,
      647,  647,  647,  647,  647,  647,  647,  647,  647,  647,
      647,  647,  647,  647,  647,  647,  648,  648,  648,  648,
      648,  648,  648,  648,  648,  648,  648,  648,  648,  648,
      648,  648,  648,  648,  648,  648,  648,  648,  648,  648,
      647,  647,  647,  647,  647,  647,  647,  647,  647,  647,
      647,  647,  647,  647,  647,  647,  647,  647,  647,  647,
      647,  647,  647,  647,  647,  647,  647,  649,  649,  649,
      649,  649,  649,  649,  647,  647,  647,  647,  647,  647,

      647,  647,  647,  647,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  651,  651,  651,  651,  651,  651,  651,  651,  651,
      651,  651,  651,  650,  650,  650,  647,  647,  338,  338,
      338,  338,  338,  338,  338,  338, 1222,  338,  338,  338,
      338, 1222,  338,  338,  338,  338,  338,  338,  338,  338,
      338,  338,  338,  338,  338,  338,  338,  338,  338,  338,
      338,  338,  337,  337,  337,  337,  337,  337,  337,  337,
      337,  337,  337,  337,  652,  652,  652, 1222,  652,  652,
      652,  652,  652,  652,  652,  652,  652,  652,  652,  652,

      652,  652,  652,  652,  652,  652,  654,  654,  654,  654,
      654,  654,  654,  654,  654,  654,  654,  654,  654,  654,
      654,  654,  654,  655,  656,  657,  657,  657,  657,  657,
      657,  657,  657,  657,  657,  658,  658,  658,  658,  657,
      659,  657,  657,  657,  657,  657,  657,  657,  657,  657,
      657,  657,  657,  657,  657,  657,  657,  660,  660,  660,
      660,  660,  660,  660,  660,  660,  660,  660,  660,  660,
      660,  660,  660,  660,  661,  661,  661,  661,  661,  661,
      661,  661,  661,  661,  664,  664,  664,  664,  664,  664,
      664,  664,  664,  664,  665,  665,  665,  665,  665,  665,

      665,  665,  665,  665,  665,  665,  665,  665,  665,  665,
      665,  365,  365,  365,  365,  365,  365,  365,  365,  365,
      365,  365,  365,  365,  365,  365,  365,  365,  666,  666,
      666,  666,  666,  666,  666,  666,  666,  666,  666,  666,
      666,  666,  666,  666,  666,  360,  360,  360,  360,  360,
      361,  360,  360,  360,  360,  360,  360,  360,  360,  360,
      360,  360,  360,  360,  360,  360,  360,  360,  360,  360,
      360,  360,  360,  360,  361,  361,  361,  361,  361,  360,
      360,  360,  360,  360,  360,  360,  360,  360,  360,  360,
      360,  360,  360,  360,  360,  360,  667,  667,  667,  667,

      667,  667,  667,  667,  667,  667,  667,  667,  667,  667,
      667,  667,  667,  360,  668,  668,  668,  668,  668,  668,
      668,  668,  668,  668,  668,  668,  668,  668,  668,  668,
      668,  668,  668,  668,  668,  668,  668,  668,  668,  668,
      668,  668,  668,  668,  668,  668,  668,  360,  360,  360,
      360,  360,  360,  360,  360,  360,  360,  360,  360,  360,
      360,  360,  360,  360,  669,  669,  669,  669,  669,  669,
      669,  669,  669,  669,  669,  669,  669,  669,  669,  669,
      669,  671,  671,  671,  671,  671,  671,  671,  671,  671,
      671,  671,  671,  671,  671,  671,  671,  671,  672,  672,

      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  674,  382,  382,  382,  382,
      382,  382,  382,  382,  382,  382,  382,  382,  382,  382,
      382,  382,  382,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      698, 1222,  698, 1222, 1222,  699,  699,  699,  699,  699,
      699,  699,  699, 1222, 1222,  675,  686,  686,  686,  686,
      686,  686,  686,  686,  686,  686,  686,  686,  686,  686,
      686,  686,  686,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,

      700, 1222,  700,  676, 1222,  701,  701,  701,  701,  701,
      701,  701,  701,  677, 1222,  678,  678,  678,  678,  678,
      678,  679,  680,  680,  680,  680,  681,  682,  682,  683,
      684,  685,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  687,
      687,  687,  687,  687,  687,  687,  687,  687,  687,  687,
      687,  687,  687,  687,  687,  687,  688,  688,  688,  688,
      688,  688,  688,  688,  688,  688,  688,  688,  688,  688,
      688,  688,  688,  689,  689,  689,  689,  689,  689,  689,
      689,  689,  689,  689,  689,  689,  689,  689,  689,  689,

      390,  390,  390,  390,  390,  390,  390,  390,  691,  691,
      691,  691,  691,  691,  691,  691, 1222, 1222, 1222,  690,
     1222, 1222, 1222, 1222, 1222, 1222, 1222,  692,  393,  393,
      393,  393,  393,  393,  393,  393,  696,  696,  696,  696,
      696,  696,  696,  696, 1222, 1222, 1222,  695, 1222,  690,
     1222, 1222, 1222, 1222, 1222,  697, 1222,  692, 1222,  397,
      397,  397,  397,  397,  397,  397,  397,  721,  721,  721,
      721,  721,  721,  721,  721,  721,  721,  695,  398, 1222,
     1222,  702, 1222,  702, 1222,  697,  703,  703,  703,  703,
      703,  703,  703,  703,  724,  724,  724,  724,  724,  724,

      724,  724,  724,  724, 1222, 1222, 1222, 1222,  398,  704,
      705,  705,  705,  705,  705,  705,  705,  705,  705,  705,
      705,  705,  705,  705,  705,  705,  706,  706,  706,  706,
      706,  706,  706,  706,  706,  706,  706,  706,  706,  706,
      706,  706,  706,  706,  706,  706,  706,  706,  706,  706,
      705,  705,  705,  705,  705,  705,  705,  705,  705,  705,
      705,  705,  705,  705,  705,  705,  705,  705,  705,  705,
      705,  705,  705,  705,  705,  705,  705,  707,  707,  707,
      707,  707,  707,  707,  705,  705,  705,  705,  705,  705,
      705,  705,  705,  705,  708,  708,  708,  708,  708,  708,

      708,  708,  708,  708,  708,  708,  708,  708,  708,  708,
      708,  709,  709,  709,  709,  709,  709,  709,  709,  709,
      709,  709,  709,  708,  708,  708,  705,  705,  403,  403,
      403,  403,  403,  403,  403,  403, 1222,  403,  403,  403,
      403, 1222,  403,  403,  403,  403,  403,  403,  403,  403,
      403,  403,  403,  403,  403,  403,  403,  403,  403,  403,
      403,  403,  403,  403,  403,  403,  403,  403,  403,  403,
      403,  403,  403,  403,  403,  403,  403,  403,  403,  710,
      710,  710,  710,  710,  710,  710,  710,  710,  710,  710,
      710,  711,  711,  711,  403,  711,  712,  712,  712,  712,

      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  714,  714,  714,  714,  714,  714,  714,
      714,  714,  714,  714,  714,  714,  714,  714,  714,  714,
      715,  716,  717,  717,  717,  717,  717,  717,  717,  717,
      717,  717,  718,  718,  718,  718,  717,  719,  717,  717,
      717,  717,  717,  717,  717,  717,  717,  717,  717,  717,
      717,  717,  717,  717,  720,  720,  720,  720,  720,  720,
      720,  720,  720,  720,  720,  720,  720,  720,  720,  720,
      720,  725,  725,  725,  725,  725,  725,  725,  725,  725,
      725,  725,  725,  725,  725,  725,  725,  725,  431,  431,

      431,  431,  431,  431,  431,  431,  431,  431,  431,  431,
      431,  431,  431,  431,  431,  726,  726,  726,  726,  726,
      726,  726,  726,  726,  726,  726,  726,  726,  726,  726,
      726,  726,  426,  426,  426,  426,  426,  427,  426,  426,
      426,  426,  426,  426,  426,  426,  426,  426,  426,  426,
      426,  426,  426,  426,  426,  426,  426,  426,  426,  426,
      426,  427,  427,  427,  427,  427,  426,  426,  426,  426,
      426,  426,  426,  426,  426,  426,  426,  426,  426,  426,
      426,  426,  426,  727,  727,  727,  727,  727,  727,  727,
      727,  727,  727,  727,  727,  727,  727,  727,  727,  727,

      426,  728,  728,  728,  728,  728,  728,  728,  728,  728,
      728,  728,  728,  728,  728,  728,  728,  728,  728,  728,
      728,  728,  728,  728,  728,  728,  728,  728,  728,  728,
      728,  728,  728,  728,  426,  426,  426,  426,  426,  426,
      426,  426,  426,  426,  426,  426,  426,  426,  426,  426,
      426,  729,  729,  729,  729,  729,  729,  729,  729,  729,
      729,  729,  729,  729,  729,  729,  729,  729,  731,  731,
      731,  731,  731,  731,  731,  731,  731,  731,  731,  731,
      731,  731,  731,  731,  731,  732,  732,  732,  732,  732,
      732,  732,  732,  732,  732,  732,  732,  732,  732,  732,

      732,  732,  446,  446,  446,  446,  446,  446,  446,  446,
      446,  446,  446,  446,  446,  446,  446,  446,  446,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  733,  733,  733,  733,
      733,  733,  733,  733,  733,  733,  733,  733,  733,  733,
      733,  733,  733,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  734,  734,  734,
      734,  734,  734,  734,  734,  734,  734,  734,  734,  734,

      734,  734,  734,  734,  735,  735,  735,  735,  735,  735,
      735,  735,  735,  735,  735,  735,  735,  735,  735,  735,
      735,  736,  736,  736,  736,  736,  736,  736,  736,  736,
      736,  736,  736,  736,  736,  736,  736,  736,  737,  738,
      738,  738,  738,  738,  738,  738,  738,  738,  738,  738,
      738,  738,  738,  738,  738,  739,  739,  739,  739,  739,
      739,  739,  739,  739,  739,  739,  739,  739,  739,  739,
      739,  739,  739,  739,  739,  739,  739,  739,  739,  738,
      738,  738,  738,  738,  738,  738,  738,  738,  738,  738,
      738,  738,  738,  738,  738,  738,  738,  738,  738,  738,

      738,  738,  738,  738,  738,  738,  740,  740,  740,  740,
      740,  740,  740,  738,  738,  738,  738,  738,  738,  738,
      738,  738,  738,  741,  741,  741,  741,  741,  741,  741,
      741,  741,  741,  741,  741,  741,  741,  741,  741,  741,
      742,  742,  742,  742,  742,  742,  742,  742,  742,  742,
      742,  742,  741,  741,  741,  738,  738,  455,  455,  455,
      455,  455,  455,  455,  455, 1222,  455,  455,  455,  455,
     1222,  455,  455,  455,  455,  455,  455,  455,  455,  455,
      455,  455,  455,  455,  455,  455,  455,  455,  455,  455,
      455,  454,  454,  454,  454,  454,  454,  454,  454,  454,

      454,  454,  454,  743,  743,  743, 1222,  743,  743,  743,
      743,  743,  743,  743,  743,  743,  743,  743,  743,  743,
      743,  743,  743,  743,  743,  745,  745,  745,  745,  745,
      745,  745,  745,  745,  745,  745,  745,  745,  745,  745,
      745,  745,  746,  747,  748,  748,  748,  748,  748,  748,
      748,  748,  748,  748,  749,  749,  749,  749,  748,  750,
      748,  748,  748,  748,  748,  748,  748,  748,  748,  748,
      748,  748,  748,  748,  748,  748,  751,  751,  751,  751,
      751,  751,  751,  751,  751,  751,  751,  751,  751,  751,
      751,  751,  751,  752,  752,  752,  752,  752,  752,  752,

      752,  752,  752,  755,  755,  755,  755,  755,  755,  755,
      755,  755,  755,  756,  756,  756,  756,  756,  756,  756,
      756,  756,  756,  756,  756,  756,  756,  756,  756,  756,
      482,  482,  482,  482,  482,  482,  482,  482,  482,  482,
      482,  482,  482,  482,  482,  482,  482,  757,  757,  757,
      757,  757,  757,  757,  757,  757,  757,  757,  757,  757,
      757,  757,  757,  757,  477,  477,  477,  477,  477,  478,
      477,  477,  477,  477,  477,  477,  477,  477,  477,  477,
      477,  477,  477,  477,  477,  477,  477,  477,  477,  477,
      477,  477,  477,  478,  478,  478,  478,  478,  477,  477,

      477,  477,  477,  477,  477,  477,  477,  477,  477,  477,
      477,  477,  477,  477,  477,  758,  758,  758,  758,  758,
      758,  758,  758,  758,  758,  758,  758,  758,  758,  758,
      758,  758,  477,  759,  759,  759,  759,  759,  759,  759,
      759,  759,  759,  759,  759,  759,  759,  759,  759,  759,
      759,  759,  759,  759,  759,  759,  759,  759,  759,  759,
      759,  759,  759,  759,  759,  759,  477,  477,  477,  477,
      477,  477,  477,  477,  477,  477,  477,  477,  477,  477,
      477,  477,  477,  760,  760,  760,  760,  760,  760,  760,
      760,  760,  760,  760,  760,  760,  760,  760,  760,  760,

      762,  762,  762,  762,  762,  762,  762,  762,  762,  762,
      762,  762,  762,  762,  762,  762,  762,  763,  763,  763,
      763,  763,  763,  763,  763,  763,  763,  763,  763,  763,
      763,  763,  763,  763,  210,  210,  210, 1222, 1222, 1222,
     1222, 1222, 1222, 1222,  210, 1222,  210,  210,  210, 1222,
      210,  210,  210,  210,  210,  210,  210, 1222, 1222, 1222,
      210, 1222, 1222,  210,  210,  210,  210, 1222, 1222, 1222,
     1222, 1222, 1222, 1222,  210,  210,  210,  210,  210, 1222,
      210,  210,  210,  210,  210,  210,  210,  210,  210, 1222,
      210,  210, 1222,  210,  210, 1222,  210,  210, 1222, 1222,

      210, 1222, 1222, 1222,  210,  210, 1222,  210,  210,  210,
     1222, 1222,  210,  210, 1222,  210,  210,  210,  210, 1222,
     1222,  210, 1222, 1222,  210, 1222,  210,  210,  210, 1222,
      210, 1222, 1222, 1222,  210, 1222,  210,  210,  210,  210,
      210,  210,  210,  210,  210,  210,  210,  210,  210,  210,
     1222, 1222,  210,  210, 1222,  210, 1222,  210,  210, 1222,
      210,  210, 1222, 1222, 1222,  210,  210, 1222,  210, 1222,
      210,  210, 1222, 1222,  210, 1222, 1222,  210,  210,  210,
      210, 1222,  210,  210, 1222,  210, 1222,  210, 1222, 1222,
      210,  210,  210, 1222, 1222,  210,  210, 1222,  210,  210,

     1222, 1222,  596,  596,  596,  596,  596,  596,  596,  596,
      210,  596,  596,  596,  596, 1222,  596,  596,  596, 1222,
     1222, 1222,  210, 1222, 1222, 1222,  210, 1222, 1222,  210,
      509,  509,  509,  509,  509,  509,  509,  509,  509,  509,
      509,  509,  509,  509,  509,  509,  509,  765,  765,  765,
      765,  765,  765,  765,  765,  765,  765,  765,  765,  765,
      765,  765,  765,  765,  502,  502,  502,  502,  502,  503,
      502,  502,  502,  502,  502,  502,  502,  502,  502,  502,
      501,  502,  502,  502,  502,  502,  502,  502,  502,  502,
      502,  502,  502,  503,  503,  503,  503,  503,  502,  502,

      502,  502,  502,  502,  502,  502,  502,  502,  502,  502,
      502,  502,  502,  502,  502,  766,  766,  766,  766,  766,
      766,  766,  766,  766,  766,  766,  766,  766,  766,  766,
      766,  766,  502,  767,  767,  767,  767,  767,  767,  767,
      767,  767,  767,  767,  767,  767,  767,  767,  767,  767,
      767,  767,  767,  767,  767,  767,  767,  767,  767,  767,
      767,  767,  767,  767,  767,  767,  502,  502,  502,  502,
      502,  502,  502,  502,  502,  502,  502,  502,  502,  502,
      502,  502,  502,  768,  768,  768,  768,  768,  768,  768,
      768,  768,  768,  768,  768,  768,  768,  768,  768,  768,

      770,  770,  770,  770,  770,  770,  770,  770,  770,  770,
      770,  770,  770,  770,  770,  770,  770,  771,  771,  771,
      771,  771,  771,  771,  771,  771,  771,  771,  771,  771,
      771,  771,  771,  771,  210, 1222,  210,  772,  773, 1222,
     1222, 1222,  210, 1222,  774, 1222,  210, 1222,  210, 1222,
      210, 1222,  210,  210,  210,  210, 1222, 1222,  210, 1222,
     1222,  210, 1222, 1222,  210, 1222,  210,  772,  773, 1222,
     1222, 1222,  210, 1222,  774, 1222,  210,  210,  210, 1222,
      210, 1222,  210,  210,  210,  210, 1222,  210,  210,  775,
     1222,  210,  210,  210, 1222, 1222,  210,  776, 1222,  210,

     1222, 1222,  777,  210,  210, 1222,  210,  210,  210,  210,
     1222,  210, 1222, 1222, 1222, 1222, 1222,  210, 1222,  775,
     1222,  781,  210,  210, 1222,  210,  210,  776,  210,  210,
      210,  778,  777,  210,  210, 1222,  210, 1222,  210,  210,
     1222,  210,  210, 1222, 1222, 1222,  779,  780, 1222,  210,
     1222,  781,  210,  782,  210,  210, 1222, 1222,  210, 1222,
      210,  778,  210,  783,  210, 1222,  210, 1222,  210, 1222,
      210,  210,  210,  210,  210, 1222,  779,  780,  210,  210,
     1222,  210,  210,  782,  210, 1222, 1222, 1222, 1222, 1222,
      210,  784,  210,  783,  210, 1222,  210, 1222,  210, 1222,

      210,  210,  210,  210,  210, 1222,  210, 1222,  210,  210,
      210,  210,  210, 1222, 1222, 1222, 1222, 1222,  210, 1222,
      210,  784,  210,  785,  210, 1222,  210, 1222,  786,  210,
      210,  210,  210, 1222,  787, 1222,  210,  210, 1222,  210,
      210, 1222,  210, 1222, 1222,  625, 1222, 1222,  210, 1222,
      625, 1222,  210,  785,  210, 1222,  210,  210,  786,  210,
      210,  210, 1222, 1222,  787,  210, 1222,  210, 1222,  210,
     1222, 1222, 1222,  210,  788, 1222,  210,  210,  789, 1222,
     1222,  210,  210, 1222,  210, 1222, 1222,  210, 1222, 1222,
     1222, 1222, 1222,  790,  210,  210, 1222, 1222,  210,  210,

      625,  210, 1222,  210,  788,  625,  210,  210,  789,  625,
     1222,  210,  210,  210,  210, 1222, 1222,  625,  210, 1222,
      625, 1222,  625,  790,  210,  210,  210,  791,  210,  210,
      210,  210,  210,  793,  210,  210,  792,  210,  210, 1222,
     1222, 1222,  210,  210, 1222,  210, 1222,  210,  210, 1222,
      794,  210, 1222, 1222,  210,  210,  210,  791, 1222,  210,
      210, 1222,  210,  793,  210,  210,  792,  210,  210, 1222,
      210,  210,  210,  795, 1222,  210, 1222,  210, 1222,  210,
      794,  210,  210,  210,  210, 1222,  210,  210, 1222,  210,
      210,  210,  210, 1222,  797,  210, 1222, 1222,  210, 1222,

      210,  210,  796,  795,  210, 1222, 1222, 1222,  210,  210,
     1222,  210,  210,  210, 1222, 1222,  210,  210, 1222,  210,
      210,  210,  210,  210,  797,  210, 1222, 1222,  210, 1222,
      798,  210,  796, 1222,  210,  210,  210, 1222,  210,  210,
     1222,  210,  210,  210, 1222, 1222, 1222,  210,  210,  799,
      210,  800,  210,  210, 1222,  210, 1222, 1222, 1222, 1222,
      798,  210, 1222, 1222, 1222,  210,  210, 1222, 1222,  210,
     1222,  210,  210,  210,  801, 1222,  210,  210,  210,  799,
      210,  800,  210,  210,  210,  210,  210,  210,  210,  802,
      210, 1222,  803,  804, 1222,  210,  210, 1222,  210, 1222,

      210,  210,  210,  210,  801,  210,  210, 1222, 1222, 1222,
     1222, 1222, 1222,  210,  210,  210,  210,  210,  210,  802,
      210, 1222,  803,  804,  806,  210,  210,  210,  210, 1222,
      210,  210,  210,  210,  210,  210,  210,  210, 1222, 1222,
      210, 1222, 1222,  210, 1222,  210,  210, 1222, 1222,  210,
     1222, 1222, 1222,  210,  806,  807,  210,  210,  210, 1222,
     1222,  210,  210,  808,  210,  210,  210,  210,  210, 1222,
      210,  809, 1222,  210, 1222, 1222,  210, 1222,  210,  210,
      210, 1222, 1222,  210,  210,  807,  210,  210,  210, 1222,
      210, 1222,  210,  808,  210,  210, 1222,  210,  210,  210,

      210,  809, 1222, 1222, 1222, 1222, 1222, 1222,  210, 1222,
      210,  210,  210, 1222,  210,  210,  810,  210,  210,  210,
      210,  210, 1222, 1222,  210, 1222, 1222,  210,  811,  210,
      210,  210, 1222,  210,  812, 1222, 1222,  210, 1222, 1222,
      210,  210,  210,  210, 1222,  210,  810,  210,  210,  210,
      210,  210, 1222,  210, 1222, 1222, 1222, 1222,  811, 1222,
     1222,  210,  210,  210,  812,  210,  814,  210, 1222,  813,
      210, 1222,  210,  210,  210,  210, 1222,  210,  210, 1222,
      210,  210, 1222,  210, 1222, 1222,  815,  210, 1222, 1222,
     1222,  210,  210, 1222,  210,  210,  814, 1222, 1222,  813,

     1222, 1222,  210,  210,  210,  210, 1222, 1222,  210, 1222,
     1222,  210, 1222,  210,  816,  210,  815,  210,  210,  210,
      817,  210,  210,  210,  210,  210,  818, 1222,  819,  210,
      210, 1222,  210,  210,  210,  210, 1222,  210, 1222,  210,
     1222, 1222,  210,  210,  816,  210, 1222, 1222,  210,  210,
      817, 1222,  210,  210,  210,  210,  818, 1222,  819,  210,
      210, 1222,  210,  210,  210,  210,  820,  210, 1222,  210,
      210,  210,  210,  210,  821,  210,  823, 1222, 1222,  210,
     1222, 1222,  210,  210,  210,  822, 1222,  210, 1222, 1222,
      210, 1222, 1222,  210, 1222,  210,  820, 1222,  824, 1222,

      210,  210,  827,  210,  821,  210,  823,  210, 1222,  210,
      210,  210,  210,  210,  210,  822, 1222,  210,  825,  210,
      210, 1222,  210, 1222, 1222,  210,  210,  210,  824,  826,
     1222,  210, 1222, 1222, 1222,  210, 1222,  210,  210,  210,
      210,  210,  828,  210,  210, 1222,  210, 1222,  825,  210,
     1222,  210,  210, 1222, 1222, 1222,  210,  210, 1222,  826,
     1222,  210, 1222,  210, 1222,  210,  829,  210,  210,  210,
      210,  210,  828,  210, 1222, 1222,  210, 1222, 1222, 1222,
     1222,  210,  830,  210, 1222, 1222, 1222,  210, 1222, 1222,
      210,  210,  210,  210,  831,  832,  829,  210, 1222, 1222,

      210,  210,  833,  210,  210, 1222, 1222,  835,  834, 1222,
      210,  210,  830,  210, 1222, 1222, 1222,  210, 1222, 1222,
      210,  210,  210,  210,  831,  832, 1222, 1222, 1222, 1222,
     1222, 1222,  833,  210,  210,  210, 1222,  835,  834,  210,
      210,  210,  210,  210,  210,  210,  836, 1222,  838, 1222,
     1222, 1222, 1222,  210, 1222,  210,  210,  210, 1222,  210,
      837,  210,  210,  210,  210,  210, 1222, 1222, 1222,  210,
     1222, 1222,  210,  210,  210,  210,  836, 1222,  838, 1222,
     1222, 1222, 1222,  210, 1222,  210,  210,  210,  210,  210,
      837,  210,  210,  210,  210,  210,  839, 1222,  210,  210,

      210, 1222,  210,  840,  210, 1222, 1222,  210,  210, 1222,
      210, 1222, 1222,  210,  210, 1222, 1222,  210,  210, 1222,
      210, 1222, 1222,  841,  210,  210,  839,  210,  210,  210,
      210, 1222,  210,  840,  210, 1222,  210,  210,  210, 1222,
      210, 1222, 1222, 1222,  210, 1222,  210,  210,  842, 1222,
      210,  210,  210,  841,  210,  210,  210,  210,  210, 1222,
     1222,  843,  210,  210, 1222,  210,  210,  210,  210, 1222,
      210,  844,  210, 1222, 1222,  210,  210, 1222,  842, 1222,
     1222,  210,  210, 1222, 1222,  210,  210, 1222,  210, 1222,
     1222,  843,  210,  210, 1222,  210, 1222,  889,  210, 1222,

      210,  844,  210, 1222, 1222,  210,  845,  846, 1222,  845,
      845,  845,  845,  845,  845,  845,  845, 1222, 1222, 1222,
     1222, 1222, 1222, 1222,  847,  847,  847,  847,  847,  847,
      847,  847,  847,  847,  847,  847,  847,  847,  847,  847,
      847,  847,  847,  847,  847,  847,  847,  847,  847, 1222,
     1222, 1222, 1222,  847,  847,  847,  847,  847,  847,  847,
      847,  847,  847,  847,  847,  847,  847,  847,  847,  847,
      847,  847,  847,  847,  847,  847,  847,  847,  847, 1222,
     1222, 1222, 1222,  848,  849,  850,  851,  851,  851,  851,
      851,  851,  851,  851,  851,  852,  853,  853,  854, 1222,

      855,  856,  857,  858,  859,  860,  861,  862,  863,  864,
      865,  866, 1222,  867,  868,  869,  870,  870,  870,  870,
      870,  870,  870,  870,  870,  870,  870,  870,  870,  870,
      870,  870,  870,  871,  871,  871,  871,  871,  871,  871,
      871,  871,  871,  871,  871,  871,  871,  871,  871,  871,
      871,  871,  871,  871,  871,  871,  871,  870,  870,  870,
      870,  870,  870,  870,  870,  870,  870,  872,  872,  872,
      872,  872,  872,  872,  870,  870,  870,  870,  870,  870,
      870,  870,  870,  870,  873,  873,  873,  873,  873,  873,
      873,  873,  873,  873,  873,  873,  873,  873,  873,  873,

      873,  874,  874,  874,  874,  874,  874,  874,  874,  874,
      874,  874,  874,  873,  873,  873,  870,  870,  596,  596,
      596,  596,  596,  596,  596,  596,  596,  596,  596,  596,
      596,  596,  596,  596,  596,  875,  875,  875,  875,  875,
      875,  875,  875,  875,  875,  875,  875,  875,  875,  875,
      875,  875,  877,  877,  877,  877,  877,  877,  877,  877,
      877,  877,  877,  877,  877,  877,  877,  877,  877,  878,
      879,  880,  880,  880,  880,  880,  880,  880,  880,  880,
      880,  881,  881,  881,  881,  880,  882,  880,  880,  880,
      880,  880,  880,  880,  880,  880,  880,  880,  880,  880,

      880,  880,  880,  883,  883,  883,  883,  883,  883,  883,
      883,  883,  883,  883,  883,  883,  883,  883,  883,  883,
      884,  884,  884,  884,  884,  884,  884,  884,  884,  884,
      887,  887,  887,  887,  887,  887,  887,  887,  887,  887,
      888,  888,  888,  888,  888,  888,  888,  888,  888,  888,
      888,  888,  888,  888,  888,  888,  888,  210,  210,  210,
      673, 1222, 1222, 1222, 1222,  673, 1222,  210, 1222,  210,
      210,  210, 1222,  210,  210,  210,  210,  210,  210,  210,
     1222, 1222, 1222,  210, 1222, 1222,  210,  210,  210,  210,
      890, 1222, 1222, 1222, 1222, 1222, 1222,  210,  210,  210,

      210,  210, 1222,  210,  210,  210,  210,  210,  210,  210,
      210,  210, 1222,  210,  210,  673,  210,  210, 1222, 1222,
      673, 1222, 1222,  210,  673, 1222, 1222,  210,  210, 1222,
      210, 1222,  673, 1222, 1222,  673, 1222,  673, 1222, 1222,
      210,  210, 1222, 1222,  210, 1222, 1222,  210, 1222, 1222,
     1222, 1222, 1222,  210, 1222, 1222, 1222,  210, 1222, 1222,
      210,  891,  891,  891,  891,  891,  891,  891,  891,  891,
      891,  891,  891,  891,  891,  891,  891,  891,  891,  891,
      891,  891,  891,  891,  891,  891,  891,  891,  891,  891,
      891,  891,  891,  891,  891,  626,  893,  893,  893,  893,

      893,  893,  893,  893,  893,  893,  893,  893,  893,  893,
      893,  893,  894,  894,  894,  894,  894,  894,  894,  894,
      894,  894,  894,  894,  894,  894,  894,  625,  625,  625,
      625,  625,  625,  625,  625,  625,  625,  625,  625,  625,
      625,  625,  625,  625, 1222, 1222, 1222, 1222, 1222, 1222,
      627,  896,  896,  896,  896,  896,  896,  896,  896,  896,
      896,  896,  896,  896,  896,  896,  896,  896,  897,  897,
      897,  897,  897,  897,  897,  897,  897,  897,  899,  899,
      899,  899,  899,  899,  899,  899,  899,  899,  628,  694,
      694,  694,  694,  694,  694,  694,  694, 1222,  629, 1222,

      630,  630,  630,  630,  630,  630,  631,  632,  632,  632,
      632,  633,  634,  634,  635,  636,  637,  892,  898,  898,
      898,  898,  898,  898,  898,  898,  898,  898,  898,  898,
      898,  898,  898,  898,  898,  900,  900,  900,  900,  900,
      900,  900,  900,  900,  900,  900,  900,  900,  900,  900,
      900,  900,   84,   84,   84,   84,   84,   84,   84,   84,
       84,   84,   84,   84,   84,   84,   84,   84,   84, 1222,
     1222, 1222,  627,   84,   84,   84,   84,   84,   84,   84,
       84,   84,   84,   84,   84,   84,   84,   84,   84,   84,
      320,  320,  320,  320,  320,  320,  320,  320,  320,  320,

      320,  320,  320,  320,  320,  320,  320,  920, 1222,  920,
      628, 1222,  921,  921,  921,  921,  921,  921,  921,  921,
      629, 1222,  630,  630,  630,  630,  630,  630,  631,  632,
      632,  632,  632,  633,  634,  634,  635,  636,  637,  317,
       98,  694,  694,  694,  694,  694,  694,  694,  694, 1222,
       99, 1222,  100,  100,  100,  100,  100,  100,  101,  102,
      102,  102,  102,  103,  104,  104,  105,  106,  107,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,  699,  699,  699,  699,
      699,  699,  699,  699,   86,   97,   97,   97,   97,   97,

       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,  329,  329,  329,  329,  329,  329,  329,  329,
      329,  329,  329,  329,  329,  329,  329,  329,  329,  922,
     1222,  922,   87, 1222,  923,  923,  923,  923,  923,  923,
      923,  923,   88, 1222,   89,   89,   89,   89,   89,   89,
       90,   91,   91,   91,   91,   92,   93,   93,   94,   95,
       96,  652,  652,  652,  652,  652,  652,  652,  652,  652,
      652,  652,  652,  652,  652,  652,  652,  652,  902,  902,
      902,  902,  902,  902,  902,  902,  902,  902,  902,  902,
      902,  902,  902,  902,  902,  647,  647,  647,  647,  647,

      648,  647,  647,  647,  647,  647,  647,  647,  647,  647,
      647,  646,  647,  647,  647,  647,  647,  647,  647,  647,
      647,  647,  647,  647,  648,  648,  648,  648,  648,  647,
      647,  647,  647,  647,  647,  647,  647,  647,  647,  647,
      647,  647,  647,  647,  647,  647,  903,  903,  903,  903,
      903,  903,  903,  903,  903,  903,  903,  903,  903,  903,
      903,  903,  903,  647,  904,  904,  904,  904,  904,  904,
      904,  904,  904,  904,  904,  904,  904,  904,  904,  904,
      904,  904,  904,  904,  904,  904,  904,  904,  904,  904,
      904,  904,  904,  904,  904,  904,  904,  647,  647,  647,

      647,  647,  647,  647,  647,  647,  647,  647,  647,  647,
      647,  647,  647,  647,  905,  905,  905,  905,  905,  905,
      905,  905,  905,  905,  905,  905,  905,  905,  905,  905,
      905,  907,  907,  907,  907,  907,  907,  907,  907,  907,
      907,  907,  907,  907,  907,  907,  907,  907,  908,  908,
      908,  908,  908,  908,  908,  908,  908,  908,  908,  908,
      908,  908,  908,  908,  908,  909,  909,  909,  909,  909,
      909,  909,  909,  909,  909,  909,  909,  909,  909,  909,
      909,  909,  909,  909,  909,  909,  909,  909,  909,  909,
      909,  909,  909,  909,  909,  909,  909,  909,  909,  674,

      911,  911,  911,  911,  911,  911,  911,  911,  911,  911,
      911,  911,  911,  911,  911,  911,  912,  912,  912,  912,
      912,  912,  912,  912,  912,  912,  912,  912,  912,  912,
      912,  673,  673,  673,  673,  673,  673,  673,  673,  673,
      673,  673,  673,  673,  673,  673,  673,  673, 1222,  675,
      914,  914,  914,  914,  914,  914,  914,  914,  914,  914,
      914,  914,  914,  914,  914,  914,  914,  915,  915,  915,
      915,  915,  915,  915,  915,  915,  915,  917,  917,  917,
      917,  917,  917,  917,  917,  917,  917,  676,  699,  699,
      699,  699,  699,  699,  699,  699, 1222,  677, 1222,  678,

      678,  678,  678,  678,  678,  679,  680,  680,  680,  680,
      681,  682,  682,  683,  684,  685,  910,  916,  916,  916,
      916,  916,  916,  916,  916,  916,  916,  916,  916,  916,
      916,  916,  916,  916,  918,  918,  918,  918,  918,  918,
      918,  918,  918,  918,  918,  918,  918,  918,  918,  918,
      918,  924, 1222,  924, 1222, 1222,  925,  925,  925,  925,
      925,  925,  925,  925, 1222, 1222,  675,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,

      129,  926, 1222,  926,  676, 1222,  927,  927,  927,  927,
      927,  927,  927,  927,  677, 1222,  678,  678,  678,  678,
      678,  678,  679,  680,  680,  680,  680,  681,  682,  682,
      683,  684,  685,  379,  382,  382,  382,  382,  382,  382,
      382,  382,  382,  382,  382,  382,  382,  382,  382,  382,
      382,  691,  691,  691,  691,  691,  691,  691,  691,  696,
      696,  696,  696,  696,  696,  696,  696, 1222, 1222, 1222,
      692, 1222, 1222, 1222, 1222, 1222, 1222, 1222,  697, 1222,
     1222, 1222, 1222,  131,  701,  701,  701,  701,  701,  701,
      701,  701,  701,  701,  701,  701,  701,  701,  701,  701,

      692, 1222, 1222, 1222, 1222, 1222, 1222, 1222,  697,  703,
      703,  703,  703,  703,  703,  703,  703, 1222, 1222, 1222,
     1222,  132,  703,  703,  703,  703,  703,  703,  703,  703,
     1222,  133, 1222,  134,  134,  134,  134,  134,  134,  135,
      136,  136,  136,  136,  137,  138,  138,  139,  140,  141,
      712,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,  712,  712,  712,  712,  712,  712,  928,  928,  928,
      928,  928,  928,  928,  928,  928,  928,  928,  928,  928,
      928,  928,  928,  928,  705,  705,  705,  705,  705,  706,
      705,  705,  705,  705,  705,  705,  705,  705,  705,  705,

      704,  705,  705,  705,  705,  705,  705,  705,  705,  705,
      705,  705,  705,  706,  706,  706,  706,  706,  705,  705,
      705,  705,  705,  705,  705,  705,  705,  705,  705,  705,
      705,  705,  705,  705,  705,  929,  929,  929,  929,  929,
      929,  929,  929,  929,  929,  929,  929,  929,  929,  929,
      929,  929,  705,  930,  930,  930,  930,  930,  930,  930,
      930,  930,  930,  930,  930,  930,  930,  930,  930,  930,
      930,  930,  930,  930,  930,  930,  930,  930,  930,  930,
      930,  930,  930,  930,  930,  930,  705,  705,  705,  705,
      705,  705,  705,  705,  705,  705,  705,  705,  705,  705,

      705,  705,  705,  931,  931,  931,  931,  931,  931,  931,
      931,  931,  931,  931,  931,  931,  931,  931,  931,  931,
      933,  933,  933,  933,  933,  933,  933,  933,  933,  933,
      933,  933,  933,  933,  933,  933,  933,  934,  934,  934,
      934,  934,  934,  934,  934,  934,  934,  934,  934,  934,
      934,  934,  934,  934,  935,  935,  935,  935,  935,  935,
      935,  935,  935,  935,  935,  935,  935,  935,  935,  935,
      935,  935,  935,  935,  935,  935,  935,  935,  935,  935,
      935,  935,  935,  935,  935,  935,  935,  935,  174,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,

      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  446,  446,  446,  446,  446,  446,  446,
      446,  446,  446,  446,  446,  446,  446,  446,  446,  446,
     1222, 1222,  847,  847,  847,  847,  847,  847,  847,  847,
     1222,  847,  847,  847,  847,  175,  847,  847,  847, 1222,
     1222, 1222, 1222, 1222, 1222,  176, 1222,  177,  177,  177,
      177,  177,  177,  178,  179,  179,  179,  179,  180,  181,
      181,  182,  183,  184,  743,  743,  743,  743,  743,  743,
      743,  743,  743,  743,  743,  743,  743,  743,  743,  743,

      743,  936,  936,  936,  936,  936,  936,  936,  936,  936,
      936,  936,  936,  936,  936,  936,  936,  936,  738,  738,
      738,  738,  738,  739,  738,  738,  738,  738,  738,  738,
      738,  738,  738,  738,  737,  738,  738,  738,  738,  738,
      738,  738,  738,  738,  738,  738,  738,  739,  739,  739,
      739,  739,  738,  738,  738,  738,  738,  738,  738,  738,
      738,  738,  738,  738,  738,  738,  738,  738,  738,  937,
      937,  937,  937,  937,  937,  937,  937,  937,  937,  937,
      937,  937,  937,  937,  937,  937,  738,  938,  938,  938,
      938,  938,  938,  938,  938,  938,  938,  938,  938,  938,

      938,  938,  938,  938,  938,  938,  938,  938,  938,  938,
      938,  938,  938,  938,  938,  938,  938,  938,  938,  938,
      738,  738,  738,  738,  738,  738,  738,  738,  738,  738,
      738,  738,  738,  738,  738,  738,  738,  939,  939,  939,
      939,  939,  939,  939,  939,  939,  939,  939,  939,  939,
      939,  939,  939,  939,  941,  941,  941,  941,  941,  941,
      941,  941,  941,  941,  941,  941,  941,  941,  941,  941,
      941,  942,  942,  942,  942,  942,  942,  942,  942,  942,
      942,  942,  942,  942,  942,  942,  942,  942,  943,  943,
      943,  943,  943,  943,  943,  943,  943,  943,  943,  943,

      943,  943,  943,  943,  943,  943,  943,  943,  943,  943,
      943,  943,  943,  943,  943,  943,  943,  943,  943,  943,
      943,  943,  210,  210,  210, 1222, 1222, 1222, 1222, 1222,
     1222, 1222,  210, 1222,  210,  210,  210, 1222,  210,  210,
      210,  210,  210,  210,  210, 1222, 1222, 1222,  210, 1222,
     1222,  210,  210,  210,  210, 1222, 1222, 1222, 1222, 1222,
     1222, 1222,  210,  210,  210,  210,  210, 1222,  210,  210,
      210,  210,  210,  210,  210,  210, 1222, 1222,  210,  210,
     1222,  210,  210, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
     1034, 1034, 1034,  210, 1037, 1037, 1037, 1037, 1037, 1037,

     1037, 1037, 1037, 1037, 1222,  210, 1222, 1222, 1222,  210,
     1222, 1222,  210,  944,  944,  944,  944,  944,  944,  944,
      944,  944,  944,  944,  944,  944,  944,  944,  944,  944,
      944,  944,  944,  944,  944,  944,  944,  944,  944,  944,
      944,  944,  944,  944,  944,  944,  944,  210,  210,  210,
     1222, 1222,  946, 1222, 1222,  945, 1222, 1222, 1222,  210,
      210,  210, 1222,  210,  210,  210,  210,  210,  210,  921,
      921,  921,  921,  921,  921,  921,  921,  210,  210,  210,
     1222, 1222,  946, 1222, 1222,  945, 1222, 1222, 1222,  210,
      210,  210, 1222,  210,  210,  210,  210,  210,  210,  210,

      210,  947, 1222, 1222, 1222,  210, 1222, 1222,  948, 1222,
     1222,  210,  210, 1222, 1222,  210,  210,  210,  210,  210,
     1222,  210, 1222, 1222,  210, 1222, 1222, 1222, 1222,  210,
      210,  947, 1222, 1222, 1222,  210, 1222, 1222,  948,  949,
      210,  210,  210, 1222, 1222,  210,  210,  210,  210,  210,
     1222,  210,  210, 1222,  210,  210,  210, 1222, 1222,  210,
      951,  210, 1222, 1222, 1222, 1222, 1222,  210, 1222,  949,
      210,  210,  950,  210,  210, 1222,  210,  210, 1222, 1222,
      210, 1222,  210, 1222, 1222,  210,  210, 1222,  210,  210,
      951,  210,  210,  952, 1222,  210,  953,  210, 1222, 1222,

     1222,  210,  950,  210,  210,  210,  210,  210,  210, 1222,
      210, 1222,  210,  954, 1222,  210, 1222,  210,  210, 1222,
      210,  210,  210,  952,  210,  210,  953, 1222, 1222, 1222,
     1222, 1222,  210,  955, 1222,  210,  210, 1222,  210,  210,
      210, 1222,  210,  954, 1222,  210, 1222,  210, 1222, 1222,
      210,  210,  210, 1222,  210,  210,  210,  956, 1222,  210,
      210, 1222,  210,  955, 1222, 1222,  210,  210, 1222,  210,
      210,  210,  210, 1222,  210, 1222,  210,  957, 1222,  210,
      210, 1222,  210,  958, 1222,  210,  210,  956, 1222,  210,
      210, 1222,  210, 1222, 1222, 1222,  210,  210, 1222,  210,

      210,  210,  210, 1222,  210,  210,  210,  957, 1222,  210,
      210, 1222,  210,  958, 1222,  959,  210,  210, 1222,  210,
      210,  210,  210, 1222,  210,  210,  210, 1222, 1222,  210,
      210,  960,  210, 1222,  961,  210,  210,  210, 1222,  210,
      210,  210,  210, 1222,  210,  959,  210,  210, 1222,  210,
      210,  210,  962, 1222,  210,  210,  210, 1222, 1222,  210,
      210,  960,  210, 1222,  961,  210,  210,  210, 1222,  210,
      210,  210,  210, 1222,  210,  210,  963,  210,  972,  210,
      964,  210,  962, 1222,  210,  210,  210,  210, 1222,  210,
      210,  210,  966, 1222,  210,  210, 1222,  210, 1222,  965,

      210,  210,  210, 1222,  210,  210,  963,  210,  972,  210,
      964,  210,  210, 1222,  210,  210,  210,  210, 1222,  210,
      210,  210,  966, 1222,  210, 1222, 1222,  210, 1222,  965,
      210,  210,  210, 1222,  210, 1222,  210,  967, 1222,  210,
      210,  210,  210, 1222, 1222, 1222,  210, 1222,  969,  210,
      210,  968,  210,  210, 1222, 1222,  210,  210, 1222,  210,
      210, 1222,  210, 1222, 1222, 1222,  210,  967, 1222,  210,
      210,  210, 1222, 1222, 1222, 1222, 1222, 1222,  969, 1222,
     1222,  968,  210,  210,  210, 1222,  210,  210, 1222,  210,
      210, 1222, 1222,  210,  970, 1222,  210, 1222, 1222,  210,

      210, 1222, 1222,  210,  971,  210, 1222, 1222, 1222,  210,
     1222,  210,  210, 1222,  210,  210,  973, 1222,  210, 1222,
     1222, 1222, 1222,  210,  970, 1222,  210, 1222,  210,  210,
      210,  975, 1222,  210,  971,  210, 1222,  210, 1222,  210,
      210,  210,  210, 1222,  210,  210,  973,  210,  210,  210,
     1222, 1222, 1222,  976,  977, 1222,  210,  210,  210, 1222,
     1222,  975, 1222,  978, 1222, 1222,  210,  210,  979,  210,
      210, 1222, 1222,  210,  210, 1222,  210,  210,  210,  210,
     1222, 1222,  210,  976,  977,  210,  210,  210,  210, 1222,
     1222,  980, 1222,  978, 1222, 1222,  210,  210,  979,  210,

      210, 1222, 1222,  210,  210, 1222,  210,  210,  210,  210,
      981, 1222,  210,  210, 1222,  210,  210,  210,  210, 1222,
     1222,  980, 1222, 1222, 1222, 1222, 1222,  210, 1222,  210,
      210, 1222,  982,  210,  210, 1222,  210,  210,  210,  210,
      981, 1222, 1222,  210, 1222, 1222,  210,  210,  210, 1222,
      210, 1222,  985,  210,  210,  984, 1222,  210,  983,  210,
      210, 1222,  982,  210,  210,  210,  210,  210,  210,  210,
     1222, 1222,  210, 1222, 1222, 1222, 1222, 1222,  210, 1222,
      210, 1222,  985,  210,  210,  984, 1222,  210,  983,  210,
      210,  210, 1222, 1222,  210,  210,  986,  210, 1222,  210,

     1222,  210,  210,  210,  210,  210, 1222,  210,  210, 1222,
      210, 1222, 1222, 1222, 1222, 1222,  210, 1222, 1222,  210,
      210,  210, 1222,  210, 1222,  987,  986, 1222, 1222,  210,
     1222,  210, 1222,  210,  210,  210,  988,  210,  210, 1222,
      210,  210,  210, 1222,  989,  210,  210, 1222,  210, 1222,
      210,  210, 1222,  210,  210,  987, 1222, 1222,  210,  210,
     1222,  210, 1222,  210, 1222, 1222,  988,  210,  990, 1222,
      210,  210,  210,  210,  989,  210, 1222, 1222,  210, 1222,
     1222,  210, 1222,  991,  210,  210, 1222, 1222,  210,  210,
      210,  210,  210,  210, 1222,  210,  993,  210,  990, 1222,

      210, 1222,  992,  210, 1222, 1222,  210,  210, 1222,  210,
     1222,  210,  210,  991,  210,  210, 1222, 1222, 1222,  210,
      210, 1222,  210, 1222,  210,  210,  993,  994,  210, 1222,
     1222,  210,  992, 1222, 1222, 1222,  210,  210, 1222,  210,
      210,  210,  210,  995,  210, 1222, 1222,  996,  210, 1222,
     1222, 1001,  210,  210,  210, 1222,  210,  994,  210,  210,
      210,  210, 1222, 1222,  210,  210, 1222,  210,  210,  210,
      210, 1003,  210,  995, 1222, 1222, 1222,  996,  210, 1222,
      210, 1001,  210,  210,  210, 1002,  210,  210,  210,  210,
      210, 1222, 1222, 1222,  210,  210, 1222,  210,  210,  210,

      210, 1003,  210, 1222,  210, 1004, 1222,  210,  210, 1222,
      210, 1222, 1006,  210,  210, 1002, 1007,  210,  210, 1222,
     1005, 1222, 1222, 1222,  210,  210, 1222,  210,  210,  210,
      210, 1222,  210, 1222,  210, 1004, 1222,  210,  210, 1222,
      210, 1222, 1006,  210,  210, 1008, 1007,  210,  210, 1222,
     1005, 1222, 1222, 1222,  210,  210, 1222,  210,  210,  210,
      210, 1222,  210, 1222,  210, 1009, 1222,  210,  210,  210,
      210, 1222, 1011, 1222,  210, 1008, 1222,  210,  210, 1222,
      210,  210, 1222, 1222,  210,  210, 1222,  210,  210,  210,
      210, 1010, 1222, 1012,  210, 1009, 1222,  210,  210,  210,

     1222,  210, 1011, 1222, 1222,  210, 1222, 1222,  210, 1222,
      210,  210, 1222,  210,  210,  210, 1222,  210,  210,  210,
     1222, 1010, 1222, 1012, 1222, 1013, 1222, 1222,  210,  210,
     1014,  210,  210,  210, 1222,  210, 1222, 1222,  210, 1222,
      210, 1222, 1222,  210,  210,  210, 1222,  210, 1222,  210,
     1222, 1222,  210, 1222, 1222, 1013, 1015,  210,  210,  210,
     1014, 1222,  210,  210, 1222, 1222, 1222, 1222, 1222,  210,
      210, 1222,  210,  210,  210,  210,  210,  210,  210,  210,
     1222, 1016,  210, 1222,  210, 1222, 1015,  210,  210, 1222,
      210,  210, 1222, 1222,  210, 1222, 1222,  210, 1222,  210,

     1222, 1222,  210,  210, 1222, 1222,  210, 1222,  210, 1222,
     1222, 1016, 1222, 1222,  210, 1222, 1222, 1222,  210, 1222,
      210,  210, 1222, 1222,  210, 1222, 1222,  210, 1017, 1018,
     1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018,
     1018, 1018, 1018, 1018, 1018, 1019, 1019, 1019, 1019, 1019,
     1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019,
     1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1018,
     1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018,
     1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018,
     1018, 1018, 1018, 1018, 1018, 1018, 1020, 1020, 1020, 1020,

     1020, 1020, 1020, 1018, 1018, 1018, 1018, 1018, 1018, 1018,
     1018, 1018, 1018, 1021, 1021, 1021, 1021, 1021, 1021, 1021,
     1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021,
     1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022,
     1022, 1022, 1021, 1021, 1021, 1018, 1018,  847,  847,  847,
      847,  847,  847,  847,  847,  847,  847,  847,  847,  847,
      847,  847,  847,  847,  847,  847,  847,  847,  847,  847,
      847,  847,  847,  847,  847,  847,  847,  847,  847,  847,
      847, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023,
     1023, 1023, 1023, 1024, 1024, 1024,  847, 1024, 1025, 1025,

     1025, 1025, 1025, 1025, 1025, 1025, 1025, 1025, 1025, 1025,
     1025, 1025, 1025, 1025, 1025, 1027, 1027, 1027, 1027, 1027,
     1027, 1027, 1027, 1027, 1027, 1027, 1027, 1027, 1027, 1027,
     1027, 1027, 1028, 1029, 1030, 1030, 1030, 1030, 1030, 1030,
     1030, 1030, 1030, 1030, 1031, 1031, 1031, 1031, 1030, 1032,
     1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030,
     1030, 1030, 1030, 1030, 1030, 1030, 1033, 1033, 1033, 1033,
     1033, 1033, 1033, 1033, 1033, 1033, 1033, 1033, 1033, 1033,
     1033, 1033, 1033, 1038, 1038, 1038, 1038, 1038, 1038, 1038,
     1038, 1038, 1038, 1038, 1038, 1038, 1038, 1038, 1038, 1038,

      875,  875,  875,  875,  875,  875,  875,  875,  875,  875,
      875,  875,  875,  875,  875,  875,  875, 1039, 1039, 1039,
     1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039,
     1039, 1039, 1039, 1039,  870,  870,  870,  870,  870,  871,
      870,  870,  870,  870,  870,  870,  870,  870,  870,  870,
      870,  870,  870,  870,  870,  870,  870,  870,  870,  870,
      870,  870,  870,  871,  871,  871,  871,  871,  870,  870,
      870,  870,  870,  870,  870,  870,  870,  870,  870,  870,
      870,  870,  870,  870,  870, 1040, 1040, 1040, 1040, 1040,
     1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040,

     1040, 1040,  870, 1041, 1041, 1041, 1041, 1041, 1041, 1041,
     1041, 1041, 1041, 1041, 1041, 1041, 1041, 1041, 1041, 1041,
     1041, 1041, 1041, 1041, 1041, 1041, 1041, 1041, 1041, 1041,
     1041, 1041, 1041, 1041, 1041, 1041,  870,  870,  870,  870,
      870,  870,  870,  870,  870,  870,  870,  870,  870,  870,
      870,  870,  870, 1042, 1042, 1042, 1042, 1042, 1042, 1042,
     1042, 1042, 1042, 1042, 1042, 1042, 1042, 1042, 1042, 1042,
     1044, 1044, 1044, 1044, 1044, 1044, 1044, 1044, 1044, 1044,
     1044, 1044, 1044, 1044, 1044, 1044, 1044, 1045, 1045, 1045,
     1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045,

     1045, 1045, 1045, 1045,  210,  210,  210,  921,  921,  921,
      921,  921,  921,  921,  921, 1222,  210,  210,  210, 1222,
      210,  210,  210,  210,  210,  210,  923,  923,  923,  923,
      923,  923,  923,  923,  210,  210,  210, 1046,  923,  923,
      923,  923,  923,  923,  923,  923,  210,  210,  210, 1222,
      210,  210,  210,  210,  210,  210, 1047,  894,  894,  894,
      894,  894,  894,  894,  894,  894,  894,  894,  894,  894,
      894,  894,  894,  894,  625,  625,  625,  625,  625,  625,
      625,  625,  625,  625,  625,  625,  625,  625,  625,  625,
      625, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048,

     1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1222, 1222,
     1222,  627,  625,  625,  625,  625,  625,  625,  625,  625,
      625,  625,  625,  625,  625,  625,  625,  625,  625,  625,
      625,  625,  625,  625,  625,  625,  625,  625,  625,  625,
      625,  625,  625,  625,  625,  625, 1222, 1222, 1222,  628,
      925,  925,  925,  925,  925,  925,  925,  925, 1222,  629,
     1222,  630,  630,  630,  630,  630,  630,  631,  632,  632,
      632,  632,  633,  634,  634,  635,  636,  637, 1049, 1049,
     1049, 1049, 1049, 1049, 1049, 1049, 1049, 1049, 1049, 1049,
     1049, 1049, 1049, 1049, 1049, 1050, 1050, 1050, 1050, 1050,

     1050, 1050, 1050, 1050, 1050, 1050, 1050, 1050, 1050, 1050,
     1050, 1050, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051,
     1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1053,  912,  912,  912,  912,  912,  912,
      912,  912,  912,  912,  912,  912,  912,  912,  912,  912,
      912,  673,  673,  673,  673,  673,  673,  673,  673,  673,
      673,  673,  673,  673,  673,  673,  673,  673,  925,  925,

      925,  925,  925,  925,  925,  925, 1222, 1222, 1222, 1222,
     1222, 1222, 1222,  675, 1054, 1054, 1054, 1054, 1054, 1054,
     1054, 1054, 1054, 1054, 1054, 1054, 1054, 1054, 1054, 1054,
     1054,  673,  673,  673,  673,  673,  673,  673,  673,  673,
      673,  673,  673,  673,  673,  673,  673,  673, 1222, 1222,
     1222,  676,  927,  927,  927,  927,  927,  927,  927,  927,
     1222,  677, 1222,  678,  678,  678,  678,  678,  678,  679,
      680,  680,  680,  680,  681,  682,  682,  683,  684,  685,
      673,  673,  673,  673,  673,  673,  673,  673,  673,  673,
      673,  673,  673,  673,  673,  673,  673, 1055, 1055, 1055,

     1055, 1055, 1055, 1055, 1055, 1055, 1055, 1055, 1055, 1055,
     1055, 1055, 1055, 1055, 1056, 1056, 1056, 1056, 1056, 1056,
     1056, 1056, 1056, 1056, 1056, 1056, 1056, 1056, 1056, 1056,
     1056, 1057, 1057, 1057, 1057, 1057, 1057, 1057, 1057, 1057,
     1057, 1057, 1057, 1057, 1057, 1057, 1057, 1057,  927,  927,
      927,  927,  927,  927,  927,  927, 1058, 1058, 1058, 1058,
     1058, 1058, 1058, 1058, 1058, 1058, 1058, 1058, 1058, 1058,
     1058, 1058, 1058, 1058, 1058, 1058, 1058, 1058, 1058, 1058,
     1058, 1058, 1058, 1058, 1058, 1058, 1058, 1058, 1058, 1058,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,

     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059,  210,  210,  210, 1222, 1222, 1222,
     1222, 1222, 1222, 1222,  210, 1222,  210, 1060,  210, 1222,
      210,  210,  210,  210,  210,  210,  210, 1222, 1222, 1222,
      210, 1222, 1222,  210,  210,  210,  210, 1222, 1222, 1222,
     1222, 1222, 1222, 1222,  210,  210,  210, 1060,  210, 1222,
      210,  210,  210,  210,  210,  210,  210,  210, 1222, 1222,
      210, 1061,  210,  210,  210, 1222, 1222, 1222, 1222, 1222,
      210, 1222, 1222, 1222,  210,  210, 1222, 1222,  210, 1062,

     1222,  210,  210,  210, 1222, 1063,  210,  210, 1222,  210,
     1064, 1061,  210, 1222,  210,  210, 1222, 1222,  210,  210,
      210, 1222,  210, 1222,  210, 1222, 1222, 1222,  210, 1062,
      210,  210,  210,  210,  210, 1063,  210,  210, 1222,  210,
     1064, 1065,  210,  210, 1222,  210, 1222, 1222,  210,  210,
     1222, 1222,  210, 1222,  210,  210, 1222, 1222,  210,  210,
      210,  210,  210,  210,  210, 1066, 1222,  210, 1222, 1222,
     1222, 1065,  210,  210, 1222, 1067, 1222, 1222,  210,  210,
     1222, 1068,  210, 1222,  210,  210, 1222,  210,  210,  210,
      210,  210,  210,  210,  210, 1066, 1222,  210, 1222,  210,

     1222, 1222,  210, 1069, 1222, 1067,  210,  210,  210,  210,
     1222, 1068,  210, 1222,  210, 1222, 1222,  210,  210,  210,
      210,  210, 1070,  210,  210, 1222,  210,  210, 1222,  210,
     1222,  210,  210, 1069, 1222, 1222,  210,  210, 1222, 1222,
     1222, 1222, 1222,  210,  210, 1222,  210,  210,  210,  210,
      210,  210, 1070,  210, 1222, 1222,  210, 1222,  210,  210,
     1222,  210,  210, 1222, 1072,  210, 1222,  210, 1222, 1222,
     1222,  210, 1222,  210, 1071,  210,  210,  210,  210,  210,
      210, 1222, 1222,  210,  210, 1222,  210, 1222,  210,  210,
     1222, 1222,  210, 1222, 1072,  210,  210,  210, 1222,  210,

     1073,  210, 1222,  210, 1222,  210, 1222, 1222,  210,  210,
     1222, 1074,  210,  210,  210,  210,  210, 1222,  210, 1222,
      210, 1222, 1222, 1075,  210, 1222,  210, 1222,  210,  210,
     1073,  210,  210,  210, 1222, 1222,  210, 1222, 1222,  210,
      210, 1074,  210, 1076, 1222,  210, 1222, 1222,  210, 1222,
      210, 1222,  210, 1075,  210,  210,  210, 1222,  210,  210,
      210,  210,  210, 1222, 1077,  210,  210,  210, 1222,  210,
      210,  210,  210, 1076,  210, 1222,  210,  210, 1222,  210,
      210,  210,  210, 1222,  210,  210,  210, 1222, 1222,  210,
      210, 1222,  210, 1222, 1077,  210,  210,  210, 1222,  210,

      210,  210,  210, 1222,  210,  210,  210,  210, 1222,  210,
      210,  210,  210, 1222,  210,  210,  210,  210, 1222,  210,
     1078,  210,  210, 1222,  210,  210,  210,  210, 1079,  210,
      210,  210, 1222, 1222,  210,  210, 1222,  210, 1222, 1222,
      210,  210,  210, 1222,  210,  210,  210,  210, 1222,  210,
     1078,  210,  210,  210,  210,  210,  210,  210, 1079,  210,
     1222,  210, 1222, 1222,  210,  210, 1222,  210,  210,  210,
      210,  210,  210, 1222,  210, 1222, 1222, 1222,  210, 1222,
      210, 1222,  210,  210,  210, 1080,  210,  210,  210,  210,
     1081, 1222, 1222,  210,  210,  210, 1222,  210,  210,  210,

      210, 1222,  210, 1222,  210,  210, 1082,  210,  210,  210,
      210, 1222,  210,  210,  210, 1080, 1222,  210,  210, 1222,
     1081, 1222, 1222,  210,  210,  210, 1222,  210,  210, 1085,
      210, 1222,  210, 1222,  210,  210, 1082,  210,  210,  210,
      210, 1222,  210,  210,  210, 1222, 1222,  210,  210, 1083,
      210, 1222, 1222, 1084,  210,  210, 1222,  210,  210, 1085,
      210, 1222,  210, 1222,  210, 1222, 1222,  210,  210,  210,
      210, 1222, 1222, 1222,  210, 1222, 1222,  210,  210, 1083,
      210,  210, 1222, 1084,  210,  210, 1086,  210,  210,  210,
      210, 1222, 1222, 1222,  210, 1222, 1222,  210, 1222,  210,

     1222,  210, 1222, 1222, 1222,  210, 1222, 1222,  210,  210,
      210,  210, 1087, 1088, 1222,  210, 1086, 1222,  210,  210,
     1222,  210,  210, 1222, 1222,  210,  210, 1222,  210,  210,
     1222,  210, 1222, 1222,  210,  210, 1089, 1222,  210,  210,
      210, 1222, 1087, 1088, 1222, 1222,  210, 1222, 1222, 1222,
      210,  210,  210,  210, 1222,  210,  210, 1222,  210,  210,
     1222, 1222,  210, 1222,  210, 1222, 1089, 1222, 1222, 1091,
      210, 1222,  210, 1222,  210, 1222,  210, 1222,  210, 1090,
      210,  210,  210,  210,  210, 1222,  210, 1092,  210,  210,
     1222,  210,  210, 1222,  210, 1093, 1222, 1222, 1222, 1091,

      210, 1222,  210, 1222,  210, 1222,  210, 1222,  210, 1090,
      210,  210,  210,  210,  210, 1222,  210, 1092,  210,  210,
     1222,  210, 1222, 1222,  210, 1093,  210, 1222, 1099, 1222,
     1222, 1222,  210, 1222,  210, 1222,  210, 1222,  210, 1222,
      210, 1222,  210,  210,  210,  210,  210,  210, 1100, 1101,
      210,  210, 1222,  210, 1222, 1222,  210, 1222, 1099,  210,
     1222, 1222,  210,  210,  210, 1222,  210, 1222,  210, 1222,
     1222, 1222,  210, 1222,  210,  210,  210,  210, 1100, 1101,
      210,  210,  210,  210, 1102, 1222, 1222,  210,  210,  210,
     1222, 1222, 1222,  210,  210, 1222,  210, 1222,  210, 1103,

     1104,  210, 1222,  210,  210, 1222,  210,  210, 1222, 1222,
     1222, 1222,  210, 1222, 1102, 1222, 1222,  210,  210, 1222,
     1222, 1222, 1105,  210,  210, 1222, 1222, 1222,  210, 1103,
     1104,  210,  210,  210,  210,  210,  210,  210, 1222,  210,
     1222, 1222,  210, 1222,  210,  210, 1222, 1106,  210, 1222,
     1222,  210, 1105,  210,  210, 1222, 1222,  210, 1107, 1222,
     1222,  210,  210, 1222,  210,  210,  210,  210, 1222,  210,
      210, 1222,  210,  210,  210,  210, 1222, 1106,  210,  210,
     1222,  210, 1222,  210,  210, 1222,  210,  210, 1107,  210,
     1222,  210, 1222, 1222,  210,  210,  210,  210, 1108, 1222,

      210,  210, 1222,  210, 1222,  210, 1222,  210,  210,  210,
      210,  210, 1222,  210,  210, 1222,  210, 1222, 1222,  210,
      210, 1109,  210, 1222, 1222,  210,  210, 1222, 1108,  210,
     1222,  210,  210, 1222, 1222,  210,  210,  210,  210,  210,
      210,  210, 1222, 1222,  210, 1222, 1222, 1222, 1222, 1222,
      210, 1109,  210, 1222, 1222, 1222,  210, 1222, 1222,  210,
     1222, 1222,  210, 1222, 1222, 1222,  210, 1222, 1222,  210,
     1025, 1025, 1025, 1025, 1025, 1025, 1025, 1025, 1025, 1025,
     1025, 1025, 1025, 1025, 1025, 1025, 1025, 1110, 1110, 1110,
     1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110,

     1110, 1110, 1110, 1110, 1018, 1018, 1018, 1018, 1018, 1019,
     1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018,
     1017, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018,
     1018, 1018, 1018, 1019, 1019, 1019, 1019, 1019, 1018, 1018,
     1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018,
     1018, 1018, 1018, 1018, 1018, 1111, 1111, 1111, 1111, 1111,
     1111, 1111, 1111, 1111, 1111, 1111, 1111, 1111, 1111, 1111,
     1111, 1111, 1018, 1112, 1112, 1112, 1112, 1112, 1112, 1112,
     1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112,
     1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112,

     1112, 1112, 1112, 1112, 1112, 1112, 1018, 1018, 1018, 1018,
     1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018,
     1018, 1018, 1018, 1113, 1113, 1113, 1113, 1113, 1113, 1113,
     1113, 1113, 1113, 1113, 1113, 1113, 1113, 1113, 1113, 1113,
     1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115,
     1115, 1115, 1115, 1115, 1115, 1115, 1115, 1116, 1116, 1116,
     1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116,
     1116, 1116, 1116, 1116, 1117, 1117, 1117, 1117, 1117, 1117,
     1117, 1117, 1117, 1117, 1117, 1117, 1117, 1117, 1117, 1117,
     1117, 1117, 1117, 1117, 1117, 1117, 1117, 1117, 1117, 1117,

     1117, 1117, 1117, 1117, 1117, 1117, 1117, 1117,  210, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
      210, 1222, 1222, 1222,  210, 1222, 1222,  210, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,  210, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
      210, 1222, 1222, 1222,  210, 1222, 1222,  210,  626,  625,
      625,  625,  625,  625,  625,  625,  625,  625,  625,  625,
      625,  625,  625,  625,  625,  625,  625,  625,  625,  625,
      625,  625,  625,  625,  625,  625,  625,  625,  625,  625,
      625,  625,  625,  894,  894,  894,  894,  894,  894,  894,

      894,  894,  894,  894,  894,  894,  894,  894,  894,  894,
     1222, 1222, 1222,  627,  673,  673,  673,  673,  673,  673,
      673,  673,  673,  673,  673,  673,  673,  673,  673,  673,
      673,  673,  673,  673,  673,  673,  673,  673,  673,  673,
      673,  673,  673,  673,  673,  673,  673,  673, 1222, 1222,
     1222,  628, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222,  629, 1222,  630,  630,  630,  630,  630,  630,  631,
      632,  632,  632,  632,  633,  634,  634,  635,  636,  637,
      674,  912,  912,  912,  912,  912,  912,  912,  912,  912,
      912,  912,  912,  912,  912,  912,  912,  912,  210,  210,

     1222, 1222, 1222, 1118,  210, 1119, 1222, 1222, 1222, 1222,
      210,  210, 1222, 1222,  210,  210,  210,  210,  210, 1222,
      210, 1222, 1222,  210, 1222, 1222, 1222, 1222,  210,  210,
      675, 1222, 1222, 1118,  210, 1119, 1222, 1222, 1222, 1222,
      210,  210, 1222, 1222,  210,  210,  210,  210,  210, 1222,
      210, 1222, 1222,  210, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,  676, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,  677, 1222,
      678,  678,  678,  678,  678,  678,  679,  680,  680,  680,
      680,  681,  682,  682,  683,  684,  685,  210,  210, 1222,

     1222, 1222, 1222, 1222, 1222, 1222,  210,  210, 1222,  210,
     1121, 1222, 1222,  210,  210, 1120,  210,  210,  210,  210,
     1222, 1123, 1122,  210, 1222,  210,  210,  210,  210, 1222,
     1222, 1222, 1222, 1125, 1222, 1222,  210,  210, 1222,  210,
     1121, 1222, 1222,  210,  210, 1120,  210,  210,  210,  210,
      210, 1123, 1122,  210, 1222,  210,  210, 1124,  210,  210,
      210, 1222,  210, 1222, 1222, 1222,  210, 1222, 1222,  210,
      210,  210,  210, 1222,  210,  210,  210,  210,  210,  210,
      210, 1222, 1222, 1222, 1222, 1222, 1222, 1124,  210,  210,
      210, 1222,  210, 1222, 1222, 1222,  210, 1222, 1222,  210,

      210,  210,  210, 1222,  210,  210,  210,  210,  210,  210,
      210, 1126,  210, 1222, 1222, 1222, 1222, 1222,  210, 1222,
     1222, 1127,  210, 1222,  210, 1222,  210,  210,  210,  210,
      210,  210, 1222, 1222,  210, 1222, 1128,  210, 1222,  210,
      210, 1126,  210,  210, 1222, 1222,  210, 1222,  210, 1222,
     1222, 1127,  210, 1222,  210, 1222,  210,  210,  210,  210,
      210,  210,  210,  210,  210, 1222, 1128,  210,  210,  210,
     1222, 1222, 1222,  210,  210,  210,  210, 1129,  210, 1132,
      210,  210,  210, 1130,  210, 1222, 1222,  210, 1222, 1222,
     1222, 1222,  210,  210, 1222, 1222, 1222, 1222,  210, 1222,

     1222, 1222, 1222,  210,  210,  210, 1222, 1129,  210, 1132,
      210,  210,  210, 1130,  210,  210,  210,  210,  210,  210,
     1131, 1222,  210, 1134,  210, 1222, 1222, 1222,  210, 1222,
      210, 1222, 1133,  210,  210,  210,  210,  210, 1222, 1222,
      210, 1222, 1222,  210, 1222,  210,  210, 1222,  210,  210,
     1131, 1222,  210, 1134,  210, 1222,  210, 1222,  210, 1222,
      210, 1222, 1133, 1222,  210,  210,  210,  210,  210,  210,
      210, 1135,  210,  210, 1222,  210, 1222, 1222,  210, 1222,
     1222,  210, 1222, 1222, 1222,  210,  210, 1222,  210, 1222,
      210,  210, 1137, 1222,  210, 1222, 1222,  210,  210,  210,

     1136, 1135,  210,  210, 1222,  210, 1222,  210,  210, 1222,
      210,  210, 1222,  210, 1222,  210, 1138, 1222,  210,  210,
      210,  210, 1137, 1222,  210,  210, 1222,  210, 1222,  210,
     1136,  210,  210,  210, 1139,  210, 1222,  210,  210, 1222,
      210,  210, 1222,  210, 1222, 1222, 1138, 1222, 1222,  210,
     1222,  210, 1222,  210, 1222,  210, 1222,  210, 1222,  210,
      210,  210,  210,  210, 1139,  210,  210, 1140,  210, 1222,
      210,  210,  210, 1222, 1222, 1222, 1222, 1222,  210, 1222,
     1222,  210,  210,  210,  210,  210, 1222,  210,  210, 1141,
      210,  210, 1222,  210,  210, 1222,  210, 1140, 1222, 1222,

      210, 1222,  210, 1222,  210, 1222,  210, 1142,  210, 1222,
      210, 1222,  210,  210,  210,  210,  210, 1222,  210, 1141,
      210,  210, 1222,  210,  210, 1222,  210, 1222, 1222, 1222,
     1222, 1222,  210, 1222,  210, 1222,  210, 1142,  210, 1222,
      210, 1222,  210,  210,  210, 1147,  210,  210,  210, 1222,
      210,  210, 1222,  210, 1148, 1222,  210,  210, 1222,  210,
     1222, 1222,  210,  210, 1222, 1222,  210, 1222,  210,  210,
     1222, 1222,  210, 1149,  210, 1147,  210,  210,  210,  210,
     1222,  210, 1222, 1222, 1148,  210, 1222,  210, 1222,  210,
     1150,  210, 1222,  210, 1222,  210,  210,  210,  210,  210,

     1222,  210, 1222, 1149,  210, 1222,  210,  210, 1222,  210,
     1222, 1222, 1222, 1222, 1222,  210, 1222,  210, 1222,  210,
     1150,  210, 1151,  210, 1222,  210,  210,  210,  210,  210,
     1222,  210,  210,  210,  210, 1222,  210,  210, 1222, 1222,
     1222, 1222,  210, 1222, 1152, 1222, 1222,  210,  210,  210,
     1222,  210, 1151,  210,  210, 1222,  210, 1153,  210,  210,
     1222,  210,  210,  210,  210, 1222,  210, 1154, 1222, 1222,
     1222, 1222,  210, 1222, 1152, 1222,  210, 1222,  210, 1222,
      210,  210, 1222,  210,  210, 1222, 1222, 1153,  210, 1222,
     1222,  210, 1222, 1222,  210, 1222, 1222, 1154, 1222, 1222,

     1222, 1222, 1222, 1222, 1222, 1222,  210, 1222, 1222, 1222,
      210, 1222, 1222,  210, 1155, 1155, 1155, 1155, 1155, 1155,
     1155, 1155, 1155, 1155, 1155, 1155, 1155, 1155, 1155, 1155,
     1155, 1155, 1155, 1155, 1155, 1155, 1155, 1155, 1155, 1155,
     1155, 1155, 1155, 1155, 1155, 1155, 1155, 1155,  210,  210,
      210, 1158, 1157, 1222, 1222, 1222, 1222, 1222,  210, 1222,
      210,  210,  210, 1222, 1156,  210,  210,  210,  210,  210,
      210, 1222, 1222, 1222, 1159, 1222, 1222,  210,  210,  210,
      210, 1158, 1157, 1222, 1222, 1222, 1222, 1222,  210, 1222,
      210,  210,  210, 1222, 1156,  210,  210,  210,  210,  210,

      210, 1222,  210,  210, 1159, 1160, 1161,  210, 1222, 1222,
     1162,  210,  210, 1222,  210,  210, 1222, 1222,  210,  210,
     1222,  210,  210,  210,  210, 1164, 1222,  210,  210, 1222,
      210,  210,  210,  210, 1222, 1160, 1161, 1222, 1222, 1222,
     1162,  210,  210, 1222,  210,  210, 1222, 1222,  210,  210,
     1222,  210,  210,  210,  210, 1164,  210,  210,  210, 1222,
      210,  210,  210, 1165, 1222, 1222, 1222, 1222,  210, 1222,
     1166,  210,  210, 1222,  210,  210, 1222, 1222,  210, 1222,
     1222,  210, 1222,  210, 1222, 1222,  210,  210, 1222, 1222,
      210, 1222,  210, 1165, 1222, 1222, 1222, 1222,  210, 1222,

     1166,  210,  210,  210,  210,  210, 1222, 1222,  210, 1222,
     1167,  210, 1222,  210, 1222,  210, 1222,  210,  210,  210,
      210, 1222,  210,  210, 1168, 1222, 1222, 1222, 1222, 1222,
      210,  210, 1222,  210,  210,  210, 1222,  210, 1222,  210,
     1167, 1222,  210,  210, 1222,  210, 1222,  210,  210,  210,
      210, 1222,  210,  210, 1168, 1222, 1222, 1222, 1222, 1222,
      210,  210, 1222, 1222,  210,  210,  210,  210, 1222,  210,
     1222, 1222,  210,  210,  210, 1222, 1169,  210,  210,  210,
      210, 1170,  210, 1171, 1222,  210,  210, 1222, 1222, 1222,
      210,  210, 1222,  210, 1222,  210,  210, 1222,  210, 1222,

     1222, 1222, 1222, 1222,  210, 1222, 1169, 1222,  210,  210,
     1222, 1170,  210, 1171,  210,  210,  210, 1222, 1222,  210,
      210,  210, 1222,  210, 1222,  210,  210,  210,  210,  210,
      210,  210, 1172,  210, 1222,  210, 1222, 1222, 1173,  210,
     1174,  210, 1222,  210,  210,  210,  210, 1222,  210,  210,
     1222, 1222, 1222, 1222, 1222, 1222,  210,  210, 1222,  210,
      210,  210, 1172,  210, 1222,  210, 1222,  210, 1173,  210,
     1174,  210,  210,  210, 1222,  210,  210,  210,  210,  210,
     1175, 1180,  210,  210,  210, 1222,  210,  210,  210,  210,
     1222,  210, 1222,  210,  210, 1222,  210,  210,  210,  210,

     1222,  210,  210,  210, 1222, 1222,  210,  210, 1222,  210,
     1175, 1180,  210,  210,  210, 1222,  210,  210,  210,  210,
     1222,  210,  210,  210,  210, 1222,  210,  210,  210,  210,
     1222,  210, 1222,  210,  210, 1222,  210,  210,  210,  210,
     1182,  210,  210,  210, 1181, 1183,  210,  210, 1222,  210,
     1222, 1222,  210,  210,  210, 1222,  210,  210,  210,  210,
     1222,  210, 1222, 1184,  210, 1222,  210,  210,  210,  210,
     1182,  210,  210,  210, 1181, 1183,  210,  210,  210,  210,
     1222, 1222, 1222,  210,  210, 1222,  210,  210,  210,  210,
      210,  210, 1222, 1184,  210,  210,  210,  210, 1222,  210,

     1222, 1222, 1222,  210, 1222, 1222,  210,  210,  210, 1222,
     1222,  210, 1185, 1222,  210, 1222,  210,  210, 1222, 1222,
      210, 1222, 1222, 1222,  210,  210, 1222,  210,  210,  210,
     1222,  210,  210,  210, 1222,  210,  210,  210, 1222, 1222,
      210,  210, 1185,  210,  210, 1222,  210,  210,  210, 1222,
      210, 1222,  210, 1222, 1222, 1222,  210, 1222,  210,  210,
     1186,  210,  210, 1222,  210,  210, 1222,  210, 1222,  210,
      210, 1222, 1222,  210, 1222, 1222, 1222,  210,  210,  210,
      210, 1188,  210, 1222, 1222,  210,  210, 1222,  210,  210,
     1186,  210, 1222, 1222,  210,  210, 1189,  210,  210,  210,

      210,  210, 1191, 1222, 1222, 1222, 1222, 1222, 1222,  210,
     1190, 1188,  210,  210, 1222,  210,  210,  210,  210,  210,
      210,  210, 1222, 1222, 1222,  210, 1189, 1222,  210,  210,
      210,  210, 1191, 1222, 1222, 1192, 1222, 1222, 1222,  210,
     1190,  210,  210,  210,  210,  210,  210,  210,  210,  210,
      210,  210, 1222, 1222,  210,  210,  210, 1193,  210,  210,
      210, 1222, 1222,  210,  210, 1192,  210, 1222, 1222,  210,
      210,  210, 1222,  210,  210,  210,  210, 1194,  210, 1222,
      210,  210, 1222,  210,  210,  210,  210, 1193,  210, 1222,
      210, 1195,  210,  210,  210, 1222,  210, 1222, 1222, 1222,

      210, 1222, 1222,  210,  210, 1222,  210, 1194,  210, 1222,
      210,  210,  210,  210,  210, 1222, 1222, 1222, 1222, 1222,
      210, 1195,  210, 1222,  210, 1222,  210, 1222,  210, 1196,
      210,  210,  210,  210,  210, 1197,  210, 1222,  210,  210,
     1222,  210,  210, 1222,  210, 1222, 1222, 1222, 1222, 1222,
      210, 1222,  210, 1222,  210, 1222,  210, 1222,  210, 1196,
      210,  210,  210,  210,  210, 1197,  210,  210, 1198,  210,
     1222,  210,  210,  210, 1199, 1222, 1222, 1222, 1222,  210,
     1222, 1222,  210,  210,  210,  210,  210, 1222,  210,  210,
     1222,  210,  210, 1222,  210, 1222, 1222,  210, 1198, 1222,

     1222,  210,  210,  210, 1199, 1222, 1222, 1222,  210,  210,
     1222, 1222, 1222,  210,  210,  210,  210,  210,  210,  210,
      210,  210,  210,  210,  210,  210, 1201,  210, 1222,  210,
     1202, 1222, 1222,  210, 1222,  210,  210,  210,  210,  210,
     1222,  210,  210, 1222,  210, 1222, 1222,  210, 1222, 1222,
      210, 1222, 1222,  210,  210,  210, 1201,  210, 1222,  210,
     1202,  210, 1222,  210, 1222,  210,  210,  210, 1222,  210,
      210,  210,  210,  210,  210, 1222,  210,  210, 1222, 1203,
      210, 1222,  210, 1222, 1222, 1222,  210, 1222,  210,  210,
     1222,  210,  210, 1222, 1222,  210, 1222, 1222, 1222, 1222,

      210,  210, 1222,  210, 1222, 1222,  210,  210, 1222, 1203,
      210, 1222,  210,  210,  210, 1222,  210,  210,  210,  210,
      210, 1222,  210, 1204, 1222,  210,  210, 1222, 1222, 1222,
      210,  210, 1205,  210, 1222, 1222,  210, 1222, 1222, 1222,
     1222, 1222,  210,  210,  210, 1222, 1222,  210,  210, 1222,
      210, 1206,  210, 1204,  210,  210,  210,  210,  210, 1222,
      210,  210, 1205,  210, 1222, 1222,  210,  210, 1222,  210,
     1222, 1222,  210, 1207, 1222, 1222,  210,  210,  210,  210,
     1222, 1206,  210,  210,  210,  210,  210,  210,  210,  210,
     1222,  210,  210,  210, 1222, 1222,  210,  210, 1222,  210,

     1222, 1209,  210, 1207,  210, 1210,  210,  210,  210,  210,
     1222,  210, 1222,  210,  210, 1222,  210,  210,  210,  210,
     1222,  210,  210,  210, 1222, 1222,  210,  210, 1222,  210,
     1222, 1209,  210, 1211,  210, 1210,  210,  210,  210,  210,
     1222,  210,  210,  210,  210, 1222,  210,  210,  210,  210,
     1222,  210,  210, 1212,  210, 1222,  210,  210,  210,  210,
     1222,  210, 1222, 1211,  210, 1222,  210,  210,  210,  210,
     1222,  210,  210,  210, 1222, 1222,  210, 1222, 1222,  210,
      210, 1222,  210, 1212,  210, 1222,  210, 1222,  210, 1222,
      210,  210,  210, 1222,  210,  210,  210, 1214,  210,  210,

      210,  210, 1215, 1222, 1222,  210,  210,  210, 1222,  210,
      210,  210,  210, 1222,  210, 1222,  210,  210, 1222,  210,
      210,  210,  210, 1222,  210,  210,  210, 1214, 1222,  210,
      210, 1222, 1215, 1222, 1222,  210,  210,  210, 1222,  210,
      210,  210,  210, 1222,  210, 1222,  210,  210, 1222,  210,
     1222,  210,  210, 1222,  210, 1222,  210, 1222, 1222,  210,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
      210, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222,  210, 1222, 1222, 1222,  210, 1222, 1222,  210,
       84, 1222,   84,   84,   84,   84,   97, 1222,   97,   97,

       97,   97,  108,  108,  108, 1222,  108,  129, 1222,  129,
      129,  129,  129,  152,  152,  152, 1222,  152,  172,  172,
      172,  172,  186,  186,  186, 1222,  186,  596,  596,  596,
     1222,  596,  625,  625,  625,  625,  625,  625,  673,  673,
      673,  673,  673,  673,  764,  764,   84, 1222,   84,   84,
       84,   84,   97, 1222,   97,   97,   97,   97,  129, 1222,
      129,  129,  129,  129,  172,  172,  172,  172,    3, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,

     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222

    } ;

static yyconst flex_int16_t yy_chk[16198] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    5,   10,
     1230,    5,    9,   70,   70,   70, 1217,   70, 1216,   10,
     1213,   10,   10,   10,   10,   10,   10,   10,   10,   10,
       10,   10,   10,   10,   10,   10,   10,   10,   14,   14,
       14,   14,   52,   52,   52,   52,   78,   78,   78,   17,
       14,   17,   17,   17,   17,   17,   17,   17,   17,   72,
       72,   72,   72,   72,   72,   72,   19,    9,   19,   19,
       19,   19,   19,   19,   19,   19,   20,   20,   20,   20,

       20,   20,   20,   20,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,   81, 1163,   52,   81,    9,   90,   90,   90,   90,
       90,   90,   90,  998, 1146,    9,  998,    9,    9,    9,
        9,    9,    9,    9,    9,    9,    9,    9,    9,    9,
        9,    9,    9,    9,   11,   11,   11,   11,   11,   11,
       11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
     1187, 1145,   11,   11, 1144,   11,   11,   11,   11,   11,
       11,   11,   11, 1143,   11,   11,   11,   13,   22, 1200,
       22,   22,   22,   22,   22,   22,   22,   22,   31,   31,

     1187,   32, 1208, 1218,   32, 1219,   31, 1125, 1220,   22,
     1098,   31,   31,   32,   32,   31, 1097,   32,   31, 1200,
       32,   31,   96,   96,   96,   96,   96,   96,   31,   31,
     1096,   32, 1208, 1218,   32, 1219,   31,   13, 1220,   22,
     1095,   31,   31,   32,   32,   31, 1000,   32,   31,  999,
       32,   31,   63,   63,   63,   63,   63,   63,   63,   63,
       63,   63,   63,   63,   63,   63,   63,   63,   63,  107,
      107,  107,  107,  107,  107,   13,  101,  101,  101,  101,
      101,  101,  101,  997,  912,   13,  894,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,

       13,   13,   13,   13,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
      855,  805,   23,   23,  764,   23,   23,   23,   23,   23,
       23,   23,   23,  557,   23,   23,   23,   25,   25,   33,
       33,   34,  463,   33,  117,  117,  117,  446,  117,   36,
      411,  382,   33,   34,  346,   33,   33,   34,  329,   33,
       34,   36,   34,  320,   36,   36,  222,  206,   36,   33,
       33,   34,  130,   33,  125,  125,  125,   85,   60,   36,
       55,   54,   33,   34,   27,   33,   33,   34,   12,   33,
       34,   36,   34,    8,   36,   36,    7,    3,   36,  141,

      141,  141,  141,  141,  141,   25,  119,  119,  119,  119,
      119,  119,  119,    0,    0,   25,    0,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
        0,    0,   28,   28,    0,   28,   28,   28,   28,   28,
       28,   28,   28,    0,   28,   28,   28,   30,   30,    0,
       30,   30,   30,   30,   30,   30,   30,   30,   30,  161,
      161,  161,    0,  161,    0,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,

       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
      169,  169,  169,    0,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
      203,  203,  203,    0,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
        0,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   35,   30,   30,   30,   37,   37,   86,
       35,    0,    0,   35,   86,   35,   39,    0,   35,   35,
       37,   37,   35,    0,   37,    0,    0,   37,   39,  234,

      234,  234,   39,   35,    0,   39,    0,   37,   37,    0,
       35,    0,    0,   35,    0,   35,   39,    0,   35,   35,
       37,   37,   35,    0,   37,   38,    0,   37,   39,   38,
        0,    0,   39,    0,   86,   39,    0,   38,    0,   86,
       38,   38,    0,   86,   38,   40,   40,   40,  195,  195,
      195,   86,  195,   40,   86,   38,   86,    0,   40,   38,
        0,    0,   40,    0,    0,   40,    0,   38,    0,    0,
       38,   38,    0,    0,   38,   40,   40,   40,    0,  142,
      142,  142,  142,   40,   42,   42,   41,   41,   40,   41,
       41,  142,   40,    0,   41,   40,    0,   42,   42,   41,

       41,   42,    0,   41,   42,    0,   41,  135,  135,  135,
      135,  135,  135,  135,   42,   42,   41,   41,    0,   41,
       41,  357,  357,  357,   41,   44,   44,   42,   42,   41,
       41,   42,    0,   41,   42,   43,   41,    0,   44,   43,
        0,   44,   44,    0,    0,   44,    0,   43,    0,   43,
       43,   43,    0,    0,   43,   44,   44,  144,  144,  144,
      144,  144,  144,  144,  144,   43,    0,    0,   44,   43,
        0,   44,   44,    0,    0,   44,    0,   43,    0,   43,
       43,   43,   45,   45,   43,    0,   45,   46,   46,    0,
        0,   46,    0,    0,   46,   45,   45,    0,    0,   45,

       46,    0,   45,   47,   46,   46,   46,   46,    0,    0,
       47,    0,   45,   45,    0,   47,   45,   46,   46,   47,
        0,   46,   47,    0,   46,   45,   45,   48,   48,   45,
       46,    0,   45,   47,   46,   46,   46,   46,    0,   48,
       47,    0,   48,   48,    0,   47,   48,   49,   49,   47,
        0,    0,   47,  423,  423,  423,    0,   48,   48,    0,
       49,    0,    0,   51,   49,    0,   51,   49,   50,   48,
        0,    0,   48,   48,   50,   51,   48,   49,   49,   51,
       50,    0,   51,    0,   50,    0,    0,   50,    0,    0,
       49,    0,    0,   51,   49,    0,   51,   49,   50,  314,

      314,  314,  314,  314,   50,   51,   57,    0,   58,   51,
       50,    0,   51,   57,   50,   58,   57,   50,   57,    0,
       58,   57,   57,    0,   58,   57,    0,   58,  163,  163,
      163,  163,  163,  163,  163,   57,   57,    0,   58,  474,
      474,  474,    0,   57,    0,   58,   57,    0,   57,    0,
       58,   57,   57,   58,   58,   57,    0,   58,   64,   64,
       64,   64,   64,   64,   64,   64,   64,   64,   64,   64,
       64,   64,   64,   64,   64,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   66,   66,   66,   66,   66,   66,   66,   66,

       66,   66,   66,   66,   66,   66,   66,   66,   66,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   68,   68,   68,   68,
       68,   68,   68,   68,    0,   68,   68,   68,   68,    0,
       68,   68,   68,   69,   69,   69,   69,   69,   69,   69,
       69,   69,   69,   69,   69,   69,   69,   69,   69,   69,
       71,   71,   71,   71,   71,   71,   71,   71,   71,   71,
       71,   71,   71,   71,   71,   71,   71,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   74,   74,   74,   74,   74,   74,

       74,   74,   74,   74,   74,   74,   74,   74,   74,   74,
       74,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   76,   76,
       76,   76,   76,   76,   76,   76,   76,   76,   76,   76,
       76,   76,   76,   76,   76,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   79,   79,   79,   79,   79,
       79,   79,   79,   79,   79,   80,   80,   80,   80,   80,
       80,   80,   80,   80,   80,   80,   80,   80,   80,   80,
       80,   80,   84,   87,   87,   87,   87,   87,   87,   87,
       87,   87,   87,   87,   87,   87,   87,   87,   87,   88,

       88,   88,   88,   88,   88,   88,   88,   88,   88,   88,
       88,   88,   88,   88,   89,   89,   89,   89,   89,   89,
       89,   89,   89,   89,   89,   89,   89,   89,   89,   89,
       89,  184,  184,  184,  184,  184,  184,   84,   91,   91,
       91,   91,   91,   91,   91,   91,   91,   91,   91,   91,
       91,   91,   91,   91,   91,   92,   92,   92,   92,   92,
       92,   92,   92,   92,   92,   94,   94,   94,   94,   94,
       94,   94,   94,   94,   94,   84,  146,  146,  146,  146,
      146,  146,  146,  146,    0,   84,    0,   84,   84,   84,
       84,   84,   84,   84,   84,   84,   84,   84,   84,   84,

       84,   84,   84,   84,   93,   93,   93,   93,   93,   93,
       93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
       93,   95,   95,   95,   95,   95,   95,   95,   95,   95,
       95,   95,   95,   95,   95,   95,   95,   95,   97,  178,
      178,  178,  178,  178,  178,  178,    0,    0,   97,    0,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   98,   98,   98,
       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   99,   99,   99,   99,   99,   99,   99,
       99,   99,   99,   99,   99,   99,   99,   99,  100,  100,

      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  102,  102,  102,  102,  102,
      102,  102,  102,  102,  102,  102,  102,  102,  102,  102,
      102,  102,  103,  103,  103,  103,  103,  103,  103,  103,
      103,  103,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  105,
      105,  105,  105,  105,  105,  105,  105,  105,  105,  106,
      106,  106,  106,  106,  106,  106,  106,  106,  106,  106,
      106,  106,  106,  106,  106,  106,  108,  108,  108,  108,
      108,  108,  108,  108,  197,  197,  197,  197,  197,  197,

      197,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  613,  613,  613,    0,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  867,  867,  867,    0,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,    0,  108,  108,  108,
        0,  108,  108,  108,  108,  108,  108,  108,  108,    0,
      108,  108,  108,  109,  109,  109,  109,  109,  109,  109,

      109,  109,  109,  109,  109,  109,  109,  109,  109,  109,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  112,  112,  112,  112,  112,  112,
      112,  112,  112,  112,  112,  112,  112,  112,  112,  112,
      112,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  113,  113,  113,  113,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  115,  115,  115,  115,  115,

      115,  115,  115,    0,  115,  115,  115,  115,    0,  115,
      115,  115,  116,  116,  116,  116,  116,  116,  116,  116,
      116,  116,  116,  116,  116,  116,  116,  116,  116,  118,
      118,  118,  118,  118,  118,  118,  118,  118,  118,  118,
      118,  118,  118,  118,  118,  118,  120,  120,  120,  120,
      120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
      120,  120,  120,  121,  121,  121,  121,  121,  121,  121,
      121,  121,  121,  121,  121,  121,  121,  121,  121,  121,
      122,  122,  122,  122,  122,  122,  122,  122,  122,  122,
      122,  122,  122,  122,  122,  122,  122,  123,  123,  123,

      123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
      123,  123,  123,  123,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  127,  127,  127,  127,  127,  127,
      127,  127,  127,  127,  127,  127,  127,  127,  127,  127,
      127,  129,  131,  290,  290,  290,  290,  131,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,
      132,  132,  132,  132,  133,  133,  133,  133,  133,  133,
      133,  133,  133,  133,  133,  133,  133,  133,  133,  137,
      137,  137,  137,  137,  137,  137,  137,  137,  137,    0,

        0,  129,  376,  376,  376,  376,  376,  131,    0,  605,
      605,  605,  131,  605,  290,    0,  131,  228,  228,  228,
      228,  228,  228,  228,  131,    0,  151,  131,  151,  131,
        0,  151,  151,  151,  151,  151,  151,  151,  151,  129,
      351,  351,  351,  351,  351,  351,  351,    0,    0,  129,
        0,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  134,  134,
      134,  134,  134,  134,  134,  134,  134,  134,  134,  134,
      134,  134,  134,  134,  134,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,

      136,  136,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  139,
      139,  139,  139,  139,  139,  139,  139,  139,  139,  140,
      140,  140,  140,  140,  140,  140,  140,  140,  140,  140,
      140,  140,  140,  140,  140,  140,  145,    0,  145,  145,
      145,  145,  145,  145,  145,  145,  147,    0,  147,  147,
      147,  147,  147,  147,  147,  147,    0,  145,  148,  148,
      148,  148,  148,  148,  148,  148,    0,  147,    0,  149,
      149,  149,  149,  149,  149,  149,  149,  148,  399,  399,
      399,  399,  399,  399,  399,  399,    0,  145,  149,  417,

      417,  417,  417,  417,  417,  417,  150,  147,  150,  150,
      150,  150,  150,  150,  150,  150,    0,  148,  400,  400,
      400,  400,  400,  400,  400,  400,    0,  150,  149,  153,
      153,  153,  153,  153,  153,  153,  153,  153,  153,  153,
      153,  153,  153,  153,  153,  153,  168,  168,  168,  168,
      168,  168,  168,  168,  168,  168,    0,  150,  152,  152,
        0,  152,  152,  152,  152,  152,  152,  152,  152,  442,
      442,  442,  442,  442,    0,    0,  152,  152,  152,  152,
      152,  152,  152,  152,  152,  152,  152,  152,  152,  152,
      152,  152,  152,  152,  152,  152,  152,  152,  152,  152,

      152,    0,    0,    0,    0,  152,  152,  152,  152,  152,
      152,  152,  152,  152,  152,  152,  152,  152,  152,  152,
      152,  152,  152,  152,  152,  152,  152,  152,  152,  152,
      152,    0,    0,    0,    0,  152,  152,  152,  152,  152,
      152,  152,  152,  152,  152,  152,  152,  152,  152,  152,
      152,    0,  152,  152,  152,  152,  152,  152,  152,  152,
      152,  152,  152,  152,    0,  152,  152,  152,  154,  154,
      154,  154,  154,  154,  154,  154,  154,  154,  154,  154,
      154,  154,  154,  154,  154,  155,  155,  155,  155,  155,
      155,  155,  155,  155,  155,  155,  155,  155,  155,  155,

      155,  155,  156,  156,  156,  156,  156,  156,  156,  156,
      156,  156,  156,  156,  156,  156,  156,  156,  156,  157,
      157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
      157,  157,  157,  157,  157,  157,  158,  158,  158,  158,
      158,  158,  158,  158,  158,  158,  158,  158,  158,  158,
      158,  158,  158,  159,  159,  159,  159,  159,  159,  159,
      159,    0,  159,  159,  159,  159,    0,  159,  159,  159,
      160,  160,  160,  160,  160,  160,  160,  160,  160,  160,
      160,  160,  160,  160,  160,  160,  160,  162,  162,  162,
      162,  162,  162,  162,  162,  162,  162,  162,  162,  162,

      162,  162,  162,  162,  164,  164,  164,  164,  164,  164,
      164,  164,  164,  164,  164,  164,  164,  164,  164,  164,
      164,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  166,  166,
      166,  166,  166,  166,  166,  166,  166,  166,  166,  166,
      166,  166,  166,  166,  166,  167,  167,  167,  167,  167,
      167,  167,  167,  167,  167,  167,  167,  167,  167,  167,
      167,  167,  170,  170,  170,  170,  170,  170,  170,  170,
      170,  170,  171,  171,  171,  171,  171,  171,  171,  171,
      171,  171,  171,  171,  171,  171,  171,  171,  171,  172,

      175,  175,  175,  175,  175,  175,  175,  175,  175,  175,
      175,  175,  175,  175,  175,  175,  176,  176,  176,  176,
      176,  176,  176,  176,  176,  176,  176,  176,  176,  176,
      176,  177,  177,  177,  177,  177,  177,  177,  177,  177,
      177,  177,  177,  177,  177,  177,  177,  177,  179,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,  179,  179,    0,  172,  468,  468,  468,
      468,  468,  468,  468,    0,    0,  172,    0,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  180,  180,  180,  180,  180,

      180,  180,  180,  180,  180,  181,  181,  181,  181,  181,
      181,  181,  181,  181,  181,  181,  181,  181,  181,  181,
      181,  181,  182,  182,  182,  182,  182,  182,  182,  182,
      182,  182,  183,  183,  183,  183,  183,  183,  183,  183,
      183,  183,  183,  183,  183,  183,  183,  183,  183,  186,
      186,  186,  186,  186,  186,  186,  186,  493,  493,  493,
      493,  493,    0,    0,  186,  186,  186,  186,  186,  186,
      186,  186,  186,  186,  186,  186,  186,  186,  186,  186,
      186,  186,  186,  186,  186,  186,  186,  186,  186,    0,
        0,    0,    0,  186,  186,  186,  186,  186,  186,  186,

      186,  186,  186,  186,  186,  186,  186,  186,  186,  186,
      186,  186,  186,  186,  186,  186,  186,  186,  186,    0,
        0,    0,    0,  186,  186,  186,  186,  186,  186,  186,
      186,  186,  186,  186,  186,  186,  186,  186,  186,    0,
      186,  186,  186,    0,  186,  186,  186,  186,  186,  186,
      186,  186,    0,  186,  186,  186,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  188,  188,  188,  188,  188,  188,  188,
      188,  188,  188,  188,  188,  188,  188,  188,  188,  188,
      189,  189,  189,  189,  189,  189,  189,  189,  189,  189,

      189,  189,  189,  189,  189,  189,  189,  190,  190,  190,
      190,  190,  190,  190,  190,  190,  190,  190,  190,  190,
      190,  190,  190,  190,  191,  191,  191,  191,  191,  191,
      191,  191,  191,  191,  191,  191,  191,  191,  191,  191,
      191,  192,  192,  192,  192,  192,  192,  192,  192,  192,
      192,  192,  192,  192,  192,  192,  192,  192,  193,  193,
      193,  193,  193,  193,  193,  193,    0,  193,  193,  193,
      193,    0,  193,  193,  193,  194,  194,  194,  194,  194,
      194,  194,  194,  194,  194,  194,  194,  194,  194,  194,
      194,  194,  196,  196,  196,  196,  196,  196,  196,  196,

      196,  196,  196,  196,  196,  196,  196,  196,  196,  198,
      198,  198,  198,  198,  198,  198,  198,  198,  198,  198,
      198,  198,  198,  198,  198,  198,  199,  199,  199,  199,
      199,  199,  199,  199,  199,  199,  199,  199,  199,  199,
      199,  199,  199,  200,  200,  200,  200,  200,  200,  200,
      200,  200,  200,  200,  200,  200,  200,  200,  200,  200,
      201,  201,  201,  201,  201,  201,  201,  201,  201,  201,
      201,  201,  201,  201,  201,  201,  201,  202,  202,  202,
      202,  202,  202,  202,  202,  202,  202,  204,  204,  204,
      204,  204,  204,  204,  204,  204,  204,  205,  205,  205,

      205,  205,  205,  205,  205,  205,  205,  205,  205,  205,
      205,  205,  205,  205,  207,  208,  520,  520,  520,  520,
      520,    0,  210,  208,    0,    0,  207,  827,  827,  827,
      207,  827,    0,  207,  210,  208,    0,    0,  210,  208,
        0,  210,  208,    0,  207,  607,  607,  607,  607,  607,
      607,  607,  210,  208,    0,    0,  207,    0,    0,    0,
      207,    0,    0,  207,  210,  208,    0,    0,  210,  208,
        0,  210,  208,  209,  209,  209,  209,  209,  209,  209,
      209,  209,  209,  209,  209,  209,  209,  209,  209,    0,
      211,  209,  209,    0,  209,  209,  209,  209,  209,  209,

      209,  209,  211,  209,  209,  209,  211,  212,    0,  211,
        0,    0,  213,  213,  663,  663,  663,  663,  663,  212,
      211,    0,  214,  212,  213,    0,  212,  214,  213,  212,
        0,  213,  211,    0,  214,    0,  211,  212,  214,  211,
        0,  214,  213,  213,  723,  723,  723,  723,  723,  212,
        0,    0,  214,  212,  213,    0,  212,  214,  213,  212,
        0,  213,    0,    0,  214,    0,    0,    0,  214,    0,
        0,  214,  215,  215,  215,  215,  215,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,  215,  215,  216,
      216,  216,  216,  216,  216,  216,  216,  216,  216,  216,

      216,  216,  216,  216,  216,  216,  217,  217,  217,  217,
      217,  217,  217,  217,  217,  217,  217,  217,  217,  217,
      217,  217,  217,  218,  218,  218,  218,  218,  218,  218,
      218,  218,  218,  218,  218,  218,  218,  218,  218,  218,
      219,  219,  219,  219,  219,  219,  219,  219,  219,  219,
      219,  219,  219,  219,  219,  219,  219,  220,  220,  220,
      220,  220,  220,  220,  220,  220,  220,  220,  220,  220,
      220,  220,  220,  220,  221,  221,  221,  221,  221,  221,
      221,  221,  221,  221,  221,  221,  221,  221,  221,  221,
      221,  223,  223,  223,  223,  223,  223,  223,  223,    0,

      223,  223,  223,  223,    0,  223,  223,  223,  224,  224,
      224,  224,  224,  224,  224,  224,  224,  224,  224,  224,
      224,  224,  224,  224,  224,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  226,  226,  226,  226,  226,  226,  226,  226,
      226,  226,  226,  226,  226,  226,  226,  226,  226,  227,
      227,  227,  227,  227,  227,  227,  227,  227,  227,  227,
      227,  227,  227,  227,  227,  227,  229,  229,  229,  229,
      229,  229,  229,  229,  229,  229,  229,  229,  229,  229,
      229,  229,  229,  230,  230,  230,  230,  230,  230,  230,

      230,  230,  230,  230,  230,  230,  230,  230,  230,  230,
      231,  231,  231,  231,  231,  231,  231,  231,  231,  231,
      231,  231,  231,  231,  231,  231,  231,  232,  232,  232,
      232,  232,  232,  232,  232,  232,  232,  232,  232,  232,
      232,  232,  232,  232,  233,  233,  233,  233,  233,  233,
      233,  233,  233,  233,  235,  235,  235,  235,  235,  235,
      235,  235,  235,  235,  236,  236,  236,  236,  236,  236,
      236,  236,  236,  236,  236,  236,  236,  236,  236,  236,
      236,  237,  238,  239,  631,  631,  631,  631,  631,  631,
      631,  240,    0,  237,  238,  239,  239,  237,  238,  239,

      237,  238,  239,  240,    0,    0,    0,  240,    0,  240,
      240,  237,  238,  239,  637,  637,  637,  637,  637,  637,
        0,  240,  241,  237,  238,  239,  239,  237,  238,  239,
      237,  238,  239,  240,  241,  242,    0,  240,  241,  240,
      240,  241,  242,  243,  243,    0,    0,  242,    0,    0,
        0,  242,  241,    0,  242,    0,  243,    0,    0,    0,
      243,    0,  243,  243,  241,  242,  244,    0,  241,    0,
        0,  241,  242,  243,  243,  245,    0,  242,  244,    0,
        0,  242,  244,  244,  242,  244,  243,  245,  244,    0,
      243,  245,  243,  243,  245,    0,  244,  685,  685,  685,

      685,  685,  685,  246,  246,  245,    0,    0,  244,    0,
        0,    0,  244,  244,    0,  244,  246,  245,  244,    0,
      246,  245,    0,  246,  245,  247,  247,  247,  754,  754,
      754,  754,  754,  246,  246,  248,    0,  247,    0,    0,
        0,  247,  248,    0,  247,    0,  246,  248,    0,    0,
      246,  248,    0,  246,  248,  247,  247,  247,  886,  886,
      886,  886,  886,  249,    0,  248,    0,  247,    0,    0,
        0,  247,  248,  249,  247,  249,  250,  248,  251,  249,
        0,  248,  249,    0,  248,    0,    0,    0,  250,  250,
      251,  251,  250,  249,  251,  250,    0,  251, 1036, 1036,

     1036, 1036, 1036,  249,    0,  249,  250,    0,  251,  249,
        0,    0,  249,    0,  253,  252,  252,    0,  250,  250,
      251,  251,  250,    0,  251,  250,  253,  251,  252,  252,
      253,  254,  252,  253,    0,  252,  255,    0,    0,    0,
        0,    0,    0,  254,  253,  252,  252,  254,  255,  254,
      254,    0,  255,    0,    0,  255,  253,    0,  252,  252,
      253,  254,  252,  253,    0,  252,  255,    0,    0,    0,
        0,  256,    0,  254,    0,    0,    0,  254,  255,  254,
      254,    0,  255,  256,  257,  255,    0,  256,  256,    0,
      256,  257,  258,  259,    0,    0,  257,    0,    0,  258,

      257,  256,  258,  257,  258,  259,    0,    0,  258,  259,
      258,  258,  259,  256,  257,    0,    0,  256,  256,    0,
      256,  257,  258,  259,    0,    0,  257,    0,    0,  258,
      257,    0,  258,  257,  258,  259,  260,  260,  258,  259,
      258,  258,  259,  261,    0,    0,    0,    0,    0,  260,
        0,    0,    0,  260,  261,  261,  260,    0,    0,  261,
        0,    0,  261,  263,    0,    0,  260,  260,    0,    0,
        0,    0,    0,  261,    0,  262,    0,    0,    0,  260,
        0,    0,    0,  260,  261,  261,  260,  262,  263,  261,
      264,  262,  261,    0,  262,    0,  262,    0,    0,    0,

      263,  264,  264,  265,  263,  262,  264,  263,    0,  264,
        0,    0,    0,    0,    0,  265,    0,  262,  263,  265,
      264,  262,  265,    0,  262,    0,  262,    0,  266,    0,
      263,  264,  264,  265,  263,    0,  264,  263,    0,  264,
      266,    0,    0,  267,  266,  265,    0,  266,  268,  265,
        0,    0,  265,    0,  267,  267,    0,    0,  266,  267,
      268,    0,  267,  270,  268,  268,    0,  268,  268,    0,
      266,    0,    0,  267,  266,  270,    0,  266,  268,  270,
      270,    0,  270,    0,  267,  267,    0,  269,    0,  267,
      268,  269,  267,  270,  268,  268,    0,  268,  268,  269,

        0,    0,    0,  269,    0,  270,  269,    0,    0,  270,
      270,  271,  270,  271,    0,    0,  272,  269,    0,    0,
        0,  269,    0,  271,    0,    0,    0,  271,  272,  269,
      271,    0,  272,  269,    0,  272,  269,    0,    0,    0,
        0,  271,    0,  271,    0,    0,  272,    0,    0,    0,
        0,    0,    0,  271,  274,    0,  273,  271,  272,  273,
      271,    0,  272,  273,    0,  272,  274,    0,  273,  273,
      274,  275,  273,  274,    0,  273,  275,    0,    0,    0,
        0,    0,    0,  275,  274,    0,  273,  275,    0,  273,
      275,  275,  276,  273,    0,    0,  274,    0,  273,  273,

      274,  275,  273,  274,  276,  273,  275,  277,  276,    0,
      276,  276,    0,  275,    0,    0,    0,  275,  277,  277,
      275,  275,  276,  277,    0,    0,  277,  679,  679,  679,
      679,  679,  679,  679,  276,    0,    0,  277,  276,    0,
      276,  276,    0,    0,    0,  278,  278,    0,  277,  277,
      279,  279,    0,  277,    0,  278,  277,  278,    0,  278,
      278,  278,    0,  279,  278,    0,    0,  279,    0,    0,
      279,    0,    0,    0,    0,  278,  278,    0,    0,    0,
      279,  279,  280,  280,    0,  278,  280,  278,    0,  278,
      278,  278,  281,  279,  278,  280,    0,  279,  280,  280,

      279,    0,  280,  281,  281,    0,    0,  282,  281,    0,
        0,  281,  280,  280,    0,    0,  280,    0,  282,  282,
        0,    0,  281,  282,    0,  280,  282,    0,  280,  280,
      283,  283,  280,  281,  281,    0,    0,  282,  281,  285,
        0,  281,    0,  283,    0,    0,  285,  283,  282,  282,
      283,  285,  284,  282,  284,  285,  282,    0,  285,  284,
      283,  283,    0,    0,  284,  284,    0,  286,  284,  285,
      286,  284,    0,  283,    0,    0,  285,  283,    0,  286,
      283,  285,  284,  286,  284,  285,  286,  287,  285,  284,
        0,  289,  289,    0,  284,  284,    0,  286,  284,  287,

      286,  284,  287,  287,  289,    0,  287,  288,  289,  286,
      288,  289,    0,  286,    0,    0,  286,  287,    0,  288,
        0,  289,  289,  288,    0,    0,  288,    0,    0,  287,
        0,    0,  287,  287,  289,    0,  287,  288,  289,    0,
      288,  289,  861,  861,  861,  861,  861,  861,  861,  288,
        0,    0,    0,  288,    0,    0,  288,  293,  293,  293,
      293,  293,  293,  293,  293,  293,  293,  293,  293,  293,
      293,  293,  293,    0,  294,  293,  293,    0,  293,  293,
      293,  293,  293,  293,  293,  293,  294,  293,  293,  293,
      294,  295,    0,  294,    0,    0,  297,    0,    0,    0,

        0,    0,    0,  295,  294,    0,  298,  295,  297,    0,
      295,    0,  297,    0,  294,  297,  294,    0,  298,    0,
      294,  295,  298,  294,    0,  298,  297,    0,    0,    0,
        0,  299,    0,  295,    0,    0,  298,  295,  297,  295,
      295,  300,  297,  299,    0,  297,  301,  299,  298,    0,
      299,  302,  298,  300,    0,  298,  303,  300,  301,    0,
      300,  299,  301,  302,    0,  301,    0,  302,  303,    0,
      302,  300,  303,  299,    0,  303,  301,  299,    0,    0,
      299,  302,    0,  300,    0,    0,  303,  300,  301,    0,
      300,    0,  301,  302,    0,  301,    0,  302,  303,    0,

      302,    0,  303,    0,    0,  303,  304,  304,  304,  304,
      304,  304,  304,  304,  304,  304,  304,  304,  304,  304,
      304,  304,  304,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  307,  307,  307,
      307,  307,  307,  307,  307,  307,  307,  307,  307,  307,
      307,  307,  307,  307,  308,  308,  308,  308,  308,  308,
      308,  308,  308,  308,  308,  308,  308,  308,  308,  308,
      308,  309,  309,  309,  309,  309,  309,  309,  309,  309,

      309,  309,  309,  309,  309,  309,  309,  309,  310,  310,
      310,  310,  310,  310,  310,  310,  310,  310,  310,  310,
      310,  310,  310,  310,  310,  311,  311,  311,  311,  311,
      311,  311,  311,  311,  311,  311,  311,  311,  311,  311,
      311,  311,  312,  312,  312,  312,  312,  312,  312,  312,
      312,  312,  312,  312,  312,  312,  312,  312,  312,  313,
      313,  313,  313,  313,  313,  313,  313,  313,  313,  313,
      313,  313,  313,  313,  313,  313,  315,  315,  315,  315,
      315,  315,  315,  315,  315,  315,  315,  315,  315,  315,
      315,  315,  315,  316,  316,  316,  316,  316,  316,  316,

      316,  316,  316,  316,  316,  316,  316,  316,  316,  316,
      318,  319,  319,  319,  319,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319,  319,  321,  321,
      321,  321,  321,  321,  321,  321,  321,  321,  321,  321,
      321,  321,  321,  321,  321,  322,  322,  322,  322,  322,
      322,  322,  322,  322,  322,  322,  322,  322,  322,  322,
      322,  322,    0,    0,    0,  318,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
      323,  323,  323,  324,  324,  324,  324,  324,  324,  324,
      324,  324,  324,  324,  324,  324,  324,  324,  324,  324,

      392,    0,  392,  318,    0,  392,  392,  392,  392,  392,
      392,  392,  392,  318,    0,  318,  318,  318,  318,  318,
      318,  318,  318,  318,  318,  318,  318,  318,  318,  318,
      318,  318,  325,  325,  325,  325,  325,  325,  325,  325,
      325,  325,  325,  325,  325,  325,  325,  325,  325,  326,
      326,  326,  326,  326,  326,  326,  326,  326,  326,  326,
      326,  326,  326,  326,  326,  326,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  328,  328,  328,  328,  328,  328,  328,
      328,  328,  328,  328,  328,  328,  328,  328,  328,  328,

      330,  330,  330,  330,  330,  330,  330,  330,  330,  330,
      330,  330,  330,  330,  330,  330,  330,  331,  331,  331,
      331,  331,  331,  331,  331,  331,  331,  331,  331,  331,
      331,  331,  331,  331,  332,  332,  332,  332,  332,  332,
      332,  332,  332,  332,  332,  332,  332,  332,  332,  332,
      332,  333,  333,  333,  333,  333,  333,  333,  333,  333,
      333,  333,  333,  333,  333,  333,  333,  333,  334,  334,
      334,  334,  334,  334,  334,  334,  334,  334,  334,  334,
      334,  334,  334,  334,  334,  335,  335,  335,  335,  335,
      335,  335,  335,  335,  335,  335,  335,  335,  335,  335,

      335,  335,  336,  336,  336,  336,  336,  336,  336,  336,
      336,  336,  336,  336,  336,  336,  336,  336,  336,  339,
      339,  339,  339,  339,  339,  339,  339,  339,  339,  339,
      339,  339,  339,  339,  339,  339,  340,  340,  340,  340,
      340,  340,  340,  340,  340,  340,  340,  340,  340,  340,
      340,  340,  340,  341,  341,  341,  341,  341,  341,  341,
      341,  341,  341,  341,  341,  341,  341,  341,  341,  341,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  343,  343,  343,
      343,  343,  343,  343,  343,  343,  343,  343,  343,  343,

      343,  343,  343,  343,  344,  344,  344,  344,  344,  344,
      344,  344,  344,  344,  344,  344,  344,  344,  344,  344,
      344,  345,  345,  345,  345,  345,  345,  345,  345,  345,
      345,  345,  345,  345,  345,  345,  345,  345,  347,  347,
      347,  347,  347,  347,  347,  347,    0,  347,  347,  347,
      347,    0,  347,  347,  347,  348,  348,  348,  348,  348,
      348,  348,  348,  348,  348,  348,  348,  348,  348,  348,
      348,  348,  349,  349,  349,  349,  349,  349,  349,  349,
      349,  349,  349,  349,  349,  349,  349,    0,  349,  350,
      350,  350,  350,  350,  350,  350,  350,  350,  350,  350,

      350,  350,  350,  350,  350,  350,  352,  352,  352,  352,
      352,  352,  352,  352,  352,  352,  352,  352,  352,  352,
      352,  352,  352,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      354,  354,  354,  354,  354,  354,  354,  354,  354,  354,
      354,  354,  354,  354,  354,  354,  354,  355,  355,  355,
      355,  355,  355,  355,  355,  355,  355,  355,  355,  355,
      355,  355,  355,  355,  356,  356,  356,  356,  356,  356,
      356,  356,  356,  356,  358,  358,  358,  358,  358,  358,
      358,  358,  358,  358,  359,  359,  359,  359,  359,  359,

      359,  359,  359,  359,  359,  359,  359,  359,  359,  359,
      359,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  369,  369,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  369,  369,  369,  369,  369,  369,  370,
      370,  370,  370,  370,  370,  370,  370,  370,  370,  370,
      370,  370,  370,  370,  370,  370,  371,  371,  371,  371,

      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      371,  371,  371,  372,  372,  372,  372,  372,  372,  372,
      372,  372,  372,  372,  372,  372,  372,  372,  372,  372,
      373,  373,  373,  373,  373,  373,  373,  373,  373,  373,
      373,  373,  373,  373,  373,  373,  373,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  375,  375,  375,  375,  375,  375,
      375,  375,  375,  375,  375,  375,  375,  375,  375,  375,
      375,  377,  377,  377,  377,  377,  377,  377,  377,  377,
      377,  377,  377,  377,  377,  377,  377,  377,  378,  378,

      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  380,  381,  381,  381,  381,
      381,  381,  381,  381,  381,  381,  381,  381,  381,  381,
      381,  381,  381,  383,  383,  383,  383,  383,  383,  383,
      383,  383,  383,  383,  383,  383,  383,  383,  383,  383,
      395,    0,  395,    0,    0,  395,  395,  395,  395,  395,
      395,  395,  395,    0,    0,  380,  384,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,

      396,    0,  396,  380,    0,  396,  396,  396,  396,  396,
      396,  396,  396,  380,    0,  380,  380,  380,  380,  380,
      380,  380,  380,  380,  380,  380,  380,  380,  380,  380,
      380,  380,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  386,  386,  386,  386,  386,  386,  386,  386,  387,
      387,  387,  387,  387,  387,  387,  387,  387,  387,  387,
      387,  387,  387,  387,  387,  387,  388,  388,  388,  388,
      388,  388,  388,  388,  388,  388,  388,  388,  388,  388,
      388,  388,  388,  389,  389,  389,  389,  389,  389,  389,
      389,  389,  389,  389,  389,  389,  389,  389,  389,  389,

      390,  390,  390,  390,  390,  390,  390,  390,  391,  391,
      391,  391,  391,  391,  391,  391,    0,    0,    0,  390,
        0,    0,    0,    0,    0,    0,    0,  391,  393,  393,
      393,  393,  393,  393,  393,  393,  394,  394,  394,  394,
      394,  394,  394,  394,    0,    0,    0,  393,    0,  390,
        0,    0,    0,    0,    0,  394,    0,  391,    0,  397,
      397,  397,  397,  397,  397,  397,  397,  422,  422,  422,
      422,  422,  422,  422,  422,  422,  422,  393,  397,    0,
        0,  398,    0,  398,    0,  394,  398,  398,  398,  398,
      398,  398,  398,  398,  424,  424,  424,  424,  424,  424,

      424,  424,  424,  424,    0,    0,    0,    0,  397,  404,
      404,  404,  404,  404,  404,  404,  404,  404,  404,  404,
      404,  404,  404,  404,  404,  404,  405,  405,  405,  405,
      405,  405,  405,  405,  405,  405,  405,  405,  405,  405,
      405,  405,  405,  406,  406,  406,  406,  406,  406,  406,
      406,  406,  406,  406,  406,  406,  406,  406,  406,  406,
      407,  407,  407,  407,  407,  407,  407,  407,  407,  407,
      407,  407,  407,  407,  407,  407,  407,  408,  408,  408,
      408,  408,  408,  408,  408,  408,  408,  408,  408,  408,
      408,  408,  408,  408,  409,  409,  409,  409,  409,  409,

      409,  409,  409,  409,  409,  409,  409,  409,  409,  409,
      409,  410,  410,  410,  410,  410,  410,  410,  410,  410,
      410,  410,  410,  410,  410,  410,  410,  410,  412,  412,
      412,  412,  412,  412,  412,  412,    0,  412,  412,  412,
      412,    0,  412,  412,  412,  413,  413,  413,  413,  413,
      413,  413,  413,  413,  413,  413,  413,  413,  413,  413,
      413,  413,  414,  414,  414,  414,  414,  414,  414,  414,
      414,  414,  414,  414,  414,  414,  414,  414,  414,  415,
      415,  415,  415,  415,  415,  415,  415,  415,  415,  415,
      415,  415,  415,  415,  415,  415,  416,  416,  416,  416,

      416,  416,  416,  416,  416,  416,  416,  416,  416,  416,
      416,  416,  416,  418,  418,  418,  418,  418,  418,  418,
      418,  418,  418,  418,  418,  418,  418,  418,  418,  418,
      419,  419,  419,  419,  419,  419,  419,  419,  419,  419,
      419,  419,  419,  419,  419,  419,  419,  420,  420,  420,
      420,  420,  420,  420,  420,  420,  420,  420,  420,  420,
      420,  420,  420,  420,  421,  421,  421,  421,  421,  421,
      421,  421,  421,  421,  421,  421,  421,  421,  421,  421,
      421,  425,  425,  425,  425,  425,  425,  425,  425,  425,
      425,  425,  425,  425,  425,  425,  425,  425,  432,  432,

      432,  432,  432,  432,  432,  432,  432,  432,  432,  432,
      432,  432,  432,  432,  432,  433,  433,  433,  433,  433,
      433,  433,  433,  433,  433,  433,  433,  433,  433,  433,
      433,  433,  434,  434,  434,  434,  434,  434,  434,  434,
      434,  434,  434,  434,  434,  434,  434,  434,  434,  435,
      435,  435,  435,  435,  435,  435,  435,  435,  435,  435,
      435,  435,  435,  435,  435,  435,  436,  436,  436,  436,
      436,  436,  436,  436,  436,  436,  436,  436,  436,  436,
      436,  436,  436,  437,  437,  437,  437,  437,  437,  437,
      437,  437,  437,  437,  437,  437,  437,  437,  437,  437,

      438,  438,  438,  438,  438,  438,  438,  438,  438,  438,
      438,  438,  438,  438,  438,  438,  438,  439,  439,  439,
      439,  439,  439,  439,  439,  439,  439,  439,  439,  439,
      439,  439,  439,  439,  440,  440,  440,  440,  440,  440,
      440,  440,  440,  440,  440,  440,  440,  440,  440,  440,
      440,  441,  441,  441,  441,  441,  441,  441,  441,  441,
      441,  441,  441,  441,  441,  441,  441,  441,  443,  443,
      443,  443,  443,  443,  443,  443,  443,  443,  443,  443,
      443,  443,  443,  443,  443,  444,  444,  444,  444,  444,
      444,  444,  444,  444,  444,  444,  444,  444,  444,  444,

      444,  444,  445,  445,  445,  445,  445,  445,  445,  445,
      445,  445,  445,  445,  445,  445,  445,  445,  445,  447,
      447,  447,  447,  447,  447,  447,  447,  447,  447,  447,
      447,  447,  447,  447,  447,  447,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      450,  450,  450,  450,  450,  450,  450,  450,  450,  450,
      450,  450,  450,  450,  450,  450,  450,  451,  451,  451,
      451,  451,  451,  451,  451,  451,  451,  451,  451,  451,

      451,  451,  451,  451,  452,  452,  452,  452,  452,  452,
      452,  452,  452,  452,  452,  452,  452,  452,  452,  452,
      452,  453,  453,  453,  453,  453,  453,  453,  453,  453,
      453,  453,  453,  453,  453,  453,  453,  453,  456,  456,
      456,  456,  456,  456,  456,  456,  456,  456,  456,  456,
      456,  456,  456,  456,  456,  457,  457,  457,  457,  457,
      457,  457,  457,  457,  457,  457,  457,  457,  457,  457,
      457,  457,  458,  458,  458,  458,  458,  458,  458,  458,
      458,  458,  458,  458,  458,  458,  458,  458,  458,  459,
      459,  459,  459,  459,  459,  459,  459,  459,  459,  459,

      459,  459,  459,  459,  459,  459,  460,  460,  460,  460,
      460,  460,  460,  460,  460,  460,  460,  460,  460,  460,
      460,  460,  460,  461,  461,  461,  461,  461,  461,  461,
      461,  461,  461,  461,  461,  461,  461,  461,  461,  461,
      462,  462,  462,  462,  462,  462,  462,  462,  462,  462,
      462,  462,  462,  462,  462,  462,  462,  464,  464,  464,
      464,  464,  464,  464,  464,    0,  464,  464,  464,  464,
        0,  464,  464,  464,  465,  465,  465,  465,  465,  465,
      465,  465,  465,  465,  465,  465,  465,  465,  465,  465,
      465,  466,  466,  466,  466,  466,  466,  466,  466,  466,

      466,  466,  466,  466,  466,  466,    0,  466,  467,  467,
      467,  467,  467,  467,  467,  467,  467,  467,  467,  467,
      467,  467,  467,  467,  467,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  471,
      471,  471,  471,  471,  471,  471,  471,  471,  471,  471,
      471,  471,  471,  471,  471,  471,  472,  472,  472,  472,
      472,  472,  472,  472,  472,  472,  472,  472,  472,  472,
      472,  472,  472,  473,  473,  473,  473,  473,  473,  473,

      473,  473,  473,  475,  475,  475,  475,  475,  475,  475,
      475,  475,  475,  476,  476,  476,  476,  476,  476,  476,
      476,  476,  476,  476,  476,  476,  476,  476,  476,  476,
      483,  483,  483,  483,  483,  483,  483,  483,  483,  483,
      483,  483,  483,  483,  483,  483,  483,  484,  484,  484,
      484,  484,  484,  484,  484,  484,  484,  484,  484,  484,
      484,  484,  484,  484,  485,  485,  485,  485,  485,  485,
      485,  485,  485,  485,  485,  485,  485,  485,  485,  485,
      485,  486,  486,  486,  486,  486,  486,  486,  486,  486,
      486,  486,  486,  486,  486,  486,  486,  486,  487,  487,

      487,  487,  487,  487,  487,  487,  487,  487,  487,  487,
      487,  487,  487,  487,  487,  488,  488,  488,  488,  488,
      488,  488,  488,  488,  488,  488,  488,  488,  488,  488,
      488,  488,  489,  489,  489,  489,  489,  489,  489,  489,
      489,  489,  489,  489,  489,  489,  489,  489,  489,  490,
      490,  490,  490,  490,  490,  490,  490,  490,  490,  490,
      490,  490,  490,  490,  490,  490,  491,  491,  491,  491,
      491,  491,  491,  491,  491,  491,  491,  491,  491,  491,
      491,  491,  491,  492,  492,  492,  492,  492,  492,  492,
      492,  492,  492,  492,  492,  492,  492,  492,  492,  492,

      494,  494,  494,  494,  494,  494,  494,  494,  494,  494,
      494,  494,  494,  494,  494,  494,  494,  495,  495,  495,
      495,  495,  495,  495,  495,  495,  495,  495,  495,  495,
      495,  495,  495,  495,  497,  498,  499,    0,    0,    0,
        0,    0,    0,    0,  500,    0,  497,  498,  499,    0,
      497,  498,  499,  497,  498,  499,  500,    0,    0,    0,
      500,    0,    0,  500,  497,  498,  499,    0,    0,    0,
        0,    0,    0,    0,  500,  501,  497,  498,  499,    0,
      497,  498,  499,  497,  498,  499,  500,  501,  502,    0,
      500,  501,    0,  500,  501,    0,  503,  504,    0,    0,

      502,    0,    0,    0,  502,  501,    0,  502,  503,  504,
        0,    0,  503,  504,    0,  503,  504,  501,  502,    0,
        0,  501,    0,    0,  501,    0,  503,  504,  505,    0,
      502,    0,    0,    0,  502,    0,  506,  502,  503,  504,
      505,  507,  503,  504,  505,  503,  504,  505,  506,  508,
        0,    0,  506,  507,    0,  506,    0,  507,  505,    0,
      507,  508,    0,    0,    0,  508,  506,    0,  508,    0,
      505,  507,    0,    0,  505,    0,    0,  505,  506,  508,
      509,    0,  506,  507,    0,  506,    0,  507,    0,    0,
      507,  508,  509,    0,    0,  508,  509,    0,  508,  509,

        0,    0,  603,  603,  603,  603,  603,  603,  603,  603,
      509,  603,  603,  603,  603,    0,  603,  603,  603,    0,
        0,    0,  509,    0,    0,    0,  509,    0,    0,  509,
      510,  510,  510,  510,  510,  510,  510,  510,  510,  510,
      510,  510,  510,  510,  510,  510,  510,  511,  511,  511,
      511,  511,  511,  511,  511,  511,  511,  511,  511,  511,
      511,  511,  511,  511,  512,  512,  512,  512,  512,  512,
      512,  512,  512,  512,  512,  512,  512,  512,  512,  512,
      512,  513,  513,  513,  513,  513,  513,  513,  513,  513,
      513,  513,  513,  513,  513,  513,  513,  513,  514,  514,

      514,  514,  514,  514,  514,  514,  514,  514,  514,  514,
      514,  514,  514,  514,  514,  515,  515,  515,  515,  515,
      515,  515,  515,  515,  515,  515,  515,  515,  515,  515,
      515,  515,  516,  516,  516,  516,  516,  516,  516,  516,
      516,  516,  516,  516,  516,  516,  516,  516,  516,  517,
      517,  517,  517,  517,  517,  517,  517,  517,  517,  517,
      517,  517,  517,  517,  517,  517,  518,  518,  518,  518,
      518,  518,  518,  518,  518,  518,  518,  518,  518,  518,
      518,  518,  518,  519,  519,  519,  519,  519,  519,  519,
      519,  519,  519,  519,  519,  519,  519,  519,  519,  519,

      521,  521,  521,  521,  521,  521,  521,  521,  521,  521,
      521,  521,  521,  521,  521,  521,  521,  522,  522,  522,
      522,  522,  522,  522,  522,  522,  522,  522,  522,  522,
      522,  522,  522,  522,  523,    0,  524,  523,  524,    0,
        0,    0,  525,    0,  525,    0,  523,    0,  524,    0,
      523,    0,  524,  523,  525,  524,    0,    0,  525,    0,
        0,  525,    0,    0,  523,    0,  524,  523,  524,    0,
        0,    0,  525,    0,  525,    0,  523,  526,  524,    0,
      523,    0,  524,  523,  525,  524,    0,  527,  525,  526,
        0,  525,  528,  526,    0,    0,  526,  527,    0,  527,

        0,    0,  528,  527,  528,    0,  527,  526,  528,  530,
        0,  528,    0,    0,    0,    0,    0,  527,    0,  526,
        0,  530,  528,  526,    0,  530,  526,  527,  530,  527,
      529,  529,  528,  527,  528,    0,  527,    0,  528,  530,
        0,  528,  529,    0,    0,    0,  529,  529,    0,  529,
        0,  530,  532,  531,  531,  530,    0,    0,  530,    0,
      529,  529,  533,  533,  532,    0,  531,    0,  532,    0,
      531,  532,  529,  531,  533,    0,  529,  529,  533,  529,
        0,  533,  532,  531,  531,    0,    0,    0,    0,    0,
      534,  534,  533,  533,  532,    0,  531,    0,  532,    0,

      531,  532,  534,  531,  533,    0,  534,    0,  533,  534,
      535,  533,  536,    0,    0,    0,    0,    0,  537,    0,
      534,  534,  535,  535,  536,    0,  535,    0,  536,  535,
      537,  536,  534,    0,  537,    0,  534,  537,    0,  534,
      535,    0,  536,    0,    0,  627,    0,    0,  537,    0,
      627,    0,  535,  535,  536,    0,  535,  538,  536,  535,
      537,  536,    0,    0,  537,  539,    0,  537,    0,  538,
        0,    0,    0,  538,  538,    0,  538,  539,  539,    0,
        0,  539,  540,    0,  539,    0,    0,  538,    0,    0,
        0,    0,    0,  540,  540,  539,    0,    0,  540,  538,

      627,  540,    0,  538,  538,  627,  538,  539,  539,  627,
        0,  539,  540,  541,  539,    0,    0,  627,  542,    0,
      627,    0,  627,  540,  540,  541,  543,  541,  540,  541,
      542,  540,  541,  543,  542,  544,  542,  542,  543,    0,
        0,    0,  543,  541,    0,  543,    0,  544,  542,    0,
      544,  544,    0,    0,  544,  541,  543,  541,    0,  541,
      542,    0,  541,  543,  542,  544,  542,  542,  543,    0,
      545,  546,  543,  545,    0,  543,    0,  544,    0,  548,
      544,  544,  545,  546,  544,    0,  545,  546,    0,  545,
      546,  548,  547,    0,  548,  548,    0,    0,  548,    0,

      545,  546,  547,  545,  547,    0,    0,    0,  547,  548,
        0,  547,  545,  546,    0,    0,  545,  546,    0,  545,
      546,  548,  547,  549,  548,  548,    0,    0,  548,    0,
      549,  550,  547,    0,  547,  549,  551,    0,  547,  549,
        0,  547,  549,  550,    0,    0,    0,  550,  551,  550,
      550,  551,  551,  549,    0,  551,    0,    0,    0,    0,
      549,  550,    0,    0,    0,  549,  551,    0,    0,  549,
        0,  552,  549,  550,  552,    0,  554,  550,  551,  550,
      550,  551,  551,  552,  553,  551,  555,  552,  554,  553,
      552,    0,  554,  555,    0,  554,  553,    0,  555,    0,

      553,  552,  555,  553,  552,  555,  554,    0,    0,    0,
        0,    0,    0,  552,  553,  556,  555,  552,  554,  553,
      552,    0,  554,  555,  558,  554,  553,  556,  555,    0,
      553,  556,  555,  553,  556,  555,  558,  559,    0,    0,
      558,    0,    0,  558,    0,  556,  560,    0,    0,  559,
        0,    0,    0,  559,  558,  559,  559,  556,  560,    0,
        0,  556,  560,  560,  556,  560,  558,  559,  561,    0,
      558,  561,    0,  558,    0,    0,  560,    0,  562,  559,
      561,    0,    0,  559,  561,  559,  559,  561,  560,    0,
      562,    0,  560,  560,  562,  560,    0,  562,  561,  563,

      564,  561,    0,    0,    0,    0,    0,    0,  562,    0,
      561,  563,  564,    0,  561,  563,  564,  561,  563,  564,
      562,  565,    0,    0,  562,    0,    0,  562,  565,  563,
      564,  566,    0,  565,  566,    0,    0,  565,    0,    0,
      565,  563,  564,  566,    0,  563,  564,  566,  563,  564,
      566,  565,    0,  567,    0,    0,    0,    0,  565,    0,
        0,  566,  568,  565,  566,  567,  568,  565,    0,  567,
      565,    0,  567,  566,  568,  569,    0,  566,  568,    0,
      566,  568,    0,  567,    0,    0,  569,  569,    0,    0,
        0,  569,  568,    0,  569,  567,  568,    0,    0,  567,

        0,    0,  567,  570,  568,  569,    0,    0,  568,    0,
        0,  568,    0,  573,  570,  570,  569,  569,  571,  570,
      571,  569,  570,  572,  569,  573,  572,    0,  573,  573,
      571,    0,  573,  570,  571,  572,    0,  571,    0,  572,
        0,    0,  572,  573,  570,  570,    0,    0,  571,  570,
      571,    0,  570,  572,  574,  573,  572,    0,  573,  573,
      571,    0,  573,  576,  571,  572,  574,  571,    0,  572,
      574,  575,  572,  574,  575,  576,  576,    0,    0,  576,
        0,    0,  576,  575,  574,  575,    0,  575,    0,    0,
      575,    0,    0,  576,    0,  577,  574,    0,  577,    0,

      574,  575,  580,  574,  575,  576,  576,  577,    0,  576,
      579,  577,  576,  575,  577,  575,    0,  575,  578,  578,
      575,    0,  579,    0,    0,  577,  579,  580,  577,  579,
        0,  578,    0,    0,    0,  578,    0,  577,  578,  580,
      579,  577,  580,  580,  577,    0,  580,    0,  578,  578,
        0,  581,  579,    0,    0,    0,  579,  580,    0,  579,
        0,  578,    0,  581,    0,  578,  581,  581,  578,  580,
      581,  582,  580,  580,    0,    0,  580,    0,    0,    0,
        0,  581,  582,  582,    0,    0,    0,  582,    0,    0,
      582,  584,  583,  581,  583,  583,  581,  581,    0,    0,

      581,  582,  583,  584,  583,    0,    0,  584,  583,    0,
      584,  583,  582,  582,    0,    0,    0,  582,    0,    0,
      582,  584,  583,  585,  583,  583,    0,    0,    0,    0,
        0,    0,  583,  584,  583,  585,    0,  584,  583,  585,
      584,  583,  585,  586,  587,  588,  586,    0,  588,    0,
        0,    0,    0,  585,    0,  586,  587,  588,    0,  586,
      587,  588,  586,  587,  588,  585,    0,    0,    0,  585,
        0,    0,  585,  586,  587,  588,  586,    0,  588,    0,
        0,    0,    0,  589,    0,  586,  587,  588,  590,  586,
      587,  588,  586,  587,  588,  589,  589,    0,  591,  589,

      590,    0,  589,  590,  590,    0,    0,  590,  592,    0,
      591,    0,    0,  589,  591,    0,    0,  591,  590,    0,
      592,    0,    0,  592,  592,  589,  589,  592,  591,  589,
      590,    0,  589,  590,  590,    0,  593,  590,  592,    0,
      591,    0,    0,    0,  591,    0,  594,  591,  593,    0,
      592,  616,  593,  592,  592,  593,  595,  592,  594,    0,
        0,  594,  594,  616,    0,  594,  593,  616,  595,    0,
      616,  595,  595,    0,    0,  595,  594,    0,  593,    0,
        0,  616,  593,    0,    0,  593,  595,    0,  594,    0,
        0,  594,  594,  616,    0,  594,    0,  616,  595,    0,

      616,  595,  595,    0,    0,  595,  596,  596,    0,  596,
      596,  596,  596,  596,  596,  596,  596,    0,    0,    0,
        0,    0,    0,    0,  596,  596,  596,  596,  596,  596,
      596,  596,  596,  596,  596,  596,  596,  596,  596,  596,
      596,  596,  596,  596,  596,  596,  596,  596,  596,    0,
        0,    0,    0,  596,  596,  596,  596,  596,  596,  596,
      596,  596,  596,  596,  596,  596,  596,  596,  596,  596,
      596,  596,  596,  596,  596,  596,  596,  596,  596,    0,
        0,    0,    0,  596,  596,  596,  596,  596,  596,  596,
      596,  596,  596,  596,  596,  596,  596,  596,  596,    0,

      596,  596,  596,  596,  596,  596,  596,  596,  596,  596,
      596,  596,    0,  596,  596,  596,  597,  597,  597,  597,
      597,  597,  597,  597,  597,  597,  597,  597,  597,  597,
      597,  597,  597,  598,  598,  598,  598,  598,  598,  598,
      598,  598,  598,  598,  598,  598,  598,  598,  598,  598,
      599,  599,  599,  599,  599,  599,  599,  599,  599,  599,
      599,  599,  599,  599,  599,  599,  599,  600,  600,  600,
      600,  600,  600,  600,  600,  600,  600,  600,  600,  600,
      600,  600,  600,  600,  601,  601,  601,  601,  601,  601,
      601,  601,  601,  601,  601,  601,  601,  601,  601,  601,

      601,  602,  602,  602,  602,  602,  602,  602,  602,  602,
      602,  602,  602,  602,  602,  602,  602,  602,  604,  604,
      604,  604,  604,  604,  604,  604,  604,  604,  604,  604,
      604,  604,  604,  604,  604,  606,  606,  606,  606,  606,
      606,  606,  606,  606,  606,  606,  606,  606,  606,  606,
      606,  606,  608,  608,  608,  608,  608,  608,  608,  608,
      608,  608,  608,  608,  608,  608,  608,  608,  608,  609,
      609,  609,  609,  609,  609,  609,  609,  609,  609,  609,
      609,  609,  609,  609,  609,  609,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,

      610,  610,  610,  611,  611,  611,  611,  611,  611,  611,
      611,  611,  611,  611,  611,  611,  611,  611,  611,  611,
      612,  612,  612,  612,  612,  612,  612,  612,  612,  612,
      614,  614,  614,  614,  614,  614,  614,  614,  614,  614,
      615,  615,  615,  615,  615,  615,  615,  615,  615,  615,
      615,  615,  615,  615,  615,  615,  615,  617,  618,  619,
      675,    0,    0,    0,    0,  675,    0,  620,    0,  617,
      618,  619,    0,  617,  618,  619,  617,  618,  619,  620,
        0,    0,    0,  620,    0,    0,  620,  617,  618,  619,
      617,    0,    0,    0,    0,    0,    0,  620,  621,  617,

      618,  619,    0,  617,  618,  619,  617,  618,  619,  620,
      621,  622,    0,  620,  621,  675,  620,  621,    0,    0,
      675,    0,    0,  622,  675,    0,    0,  622,  621,    0,
      622,    0,  675,    0,    0,  675,    0,  675,    0,    0,
      621,  622,    0,    0,  621,    0,    0,  621,    0,    0,
        0,    0,    0,  622,    0,    0,    0,  622,    0,    0,
      622,  623,  623,  623,  623,  623,  623,  623,  623,  623,
      623,  623,  623,  623,  623,  623,  623,  623,  624,  624,
      624,  624,  624,  624,  624,  624,  624,  624,  624,  624,
      624,  624,  624,  624,  624,  625,  628,  628,  628,  628,

      628,  628,  628,  628,  628,  628,  628,  628,  628,  628,
      628,  628,  629,  629,  629,  629,  629,  629,  629,  629,
      629,  629,  629,  629,  629,  629,  629,  630,  630,  630,
      630,  630,  630,  630,  630,  630,  630,  630,  630,  630,
      630,  630,  630,  630,    0,    0,    0,    0,    0,    0,
      625,  632,  632,  632,  632,  632,  632,  632,  632,  632,
      632,  632,  632,  632,  632,  632,  632,  632,  633,  633,
      633,  633,  633,  633,  633,  633,  633,  633,  635,  635,
      635,  635,  635,  635,  635,  635,  635,  635,  625,  693,
      693,  693,  693,  693,  693,  693,  693,    0,  625,    0,

      625,  625,  625,  625,  625,  625,  625,  625,  625,  625,
      625,  625,  625,  625,  625,  625,  625,  626,  634,  634,
      634,  634,  634,  634,  634,  634,  634,  634,  634,  634,
      634,  634,  634,  634,  634,  636,  636,  636,  636,  636,
      636,  636,  636,  636,  636,  636,  636,  636,  636,  636,
      636,  636,  639,  639,  639,  639,  639,  639,  639,  639,
      639,  639,  639,  639,  639,  639,  639,  639,  639,    0,
        0,    0,  626,  640,  640,  640,  640,  640,  640,  640,
      640,  640,  640,  640,  640,  640,  640,  640,  640,  640,
      641,  641,  641,  641,  641,  641,  641,  641,  641,  641,

      641,  641,  641,  641,  641,  641,  641,  690,    0,  690,
      626,    0,  690,  690,  690,  690,  690,  690,  690,  690,
      626,    0,  626,  626,  626,  626,  626,  626,  626,  626,
      626,  626,  626,  626,  626,  626,  626,  626,  626,  638,
      642,  694,  694,  694,  694,  694,  694,  694,  694,    0,
      642,    0,  642,  642,  642,  642,  642,  642,  642,  642,
      642,  642,  642,  642,  642,  642,  642,  642,  642,  643,
      643,  643,  643,  643,  643,  643,  643,  643,  643,  643,
      643,  643,  643,  643,  643,  643,  698,  698,  698,  698,
      698,  698,  698,  698,  638,  644,  644,  644,  644,  644,

      644,  644,  644,  644,  644,  644,  644,  644,  644,  644,
      644,  644,  645,  645,  645,  645,  645,  645,  645,  645,
      645,  645,  645,  645,  645,  645,  645,  645,  645,  692,
        0,  692,  638,    0,  692,  692,  692,  692,  692,  692,
      692,  692,  638,    0,  638,  638,  638,  638,  638,  638,
      638,  638,  638,  638,  638,  638,  638,  638,  638,  638,
      638,  653,  653,  653,  653,  653,  653,  653,  653,  653,
      653,  653,  653,  653,  653,  653,  653,  653,  654,  654,
      654,  654,  654,  654,  654,  654,  654,  654,  654,  654,
      654,  654,  654,  654,  654,  655,  655,  655,  655,  655,

      655,  655,  655,  655,  655,  655,  655,  655,  655,  655,
      655,  655,  656,  656,  656,  656,  656,  656,  656,  656,
      656,  656,  656,  656,  656,  656,  656,  656,  656,  657,
      657,  657,  657,  657,  657,  657,  657,  657,  657,  657,
      657,  657,  657,  657,  657,  657,  658,  658,  658,  658,
      658,  658,  658,  658,  658,  658,  658,  658,  658,  658,
      658,  658,  658,  659,  659,  659,  659,  659,  659,  659,
      659,  659,  659,  659,  659,  659,  659,  659,  659,  659,
      660,  660,  660,  660,  660,  660,  660,  660,  660,  660,
      660,  660,  660,  660,  660,  660,  660,  661,  661,  661,

      661,  661,  661,  661,  661,  661,  661,  661,  661,  661,
      661,  661,  661,  661,  662,  662,  662,  662,  662,  662,
      662,  662,  662,  662,  662,  662,  662,  662,  662,  662,
      662,  664,  664,  664,  664,  664,  664,  664,  664,  664,
      664,  664,  664,  664,  664,  664,  664,  664,  665,  665,
      665,  665,  665,  665,  665,  665,  665,  665,  665,  665,
      665,  665,  665,  665,  665,  671,  671,  671,  671,  671,
      671,  671,  671,  671,  671,  671,  671,  671,  671,  671,
      671,  671,  672,  672,  672,  672,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  672,  672,  672,  672,  673,

      676,  676,  676,  676,  676,  676,  676,  676,  676,  676,
      676,  676,  676,  676,  676,  676,  677,  677,  677,  677,
      677,  677,  677,  677,  677,  677,  677,  677,  677,  677,
      677,  678,  678,  678,  678,  678,  678,  678,  678,  678,
      678,  678,  678,  678,  678,  678,  678,  678,    0,  673,
      680,  680,  680,  680,  680,  680,  680,  680,  680,  680,
      680,  680,  680,  680,  680,  680,  680,  681,  681,  681,
      681,  681,  681,  681,  681,  681,  681,  683,  683,  683,
      683,  683,  683,  683,  683,  683,  683,  673,  699,  699,
      699,  699,  699,  699,  699,  699,    0,  673,    0,  673,

      673,  673,  673,  673,  673,  673,  673,  673,  673,  673,
      673,  673,  673,  673,  673,  673,  674,  682,  682,  682,
      682,  682,  682,  682,  682,  682,  682,  682,  682,  682,
      682,  682,  682,  682,  684,  684,  684,  684,  684,  684,
      684,  684,  684,  684,  684,  684,  684,  684,  684,  684,
      684,  695,    0,  695,    0,    0,  695,  695,  695,  695,
      695,  695,  695,  695,    0,    0,  674,  687,  687,  687,
      687,  687,  687,  687,  687,  687,  687,  687,  687,  687,
      687,  687,  687,  687,  688,  688,  688,  688,  688,  688,
      688,  688,  688,  688,  688,  688,  688,  688,  688,  688,

      688,  697,    0,  697,  674,    0,  697,  697,  697,  697,
      697,  697,  697,  697,  674,    0,  674,  674,  674,  674,
      674,  674,  674,  674,  674,  674,  674,  674,  674,  674,
      674,  674,  674,  686,  689,  689,  689,  689,  689,  689,
      689,  689,  689,  689,  689,  689,  689,  689,  689,  689,
      689,  691,  691,  691,  691,  691,  691,  691,  691,  696,
      696,  696,  696,  696,  696,  696,  696,    0,    0,    0,
      691,    0,    0,    0,    0,    0,    0,    0,  696,    0,
        0,    0,    0,  686,  700,  700,  700,  700,  700,  700,
      700,  700,  701,  701,  701,  701,  701,  701,  701,  701,

      691,    0,    0,    0,    0,    0,    0,    0,  696,  702,
      702,  702,  702,  702,  702,  702,  702,    0,    0,    0,
        0,  686,  703,  703,  703,  703,  703,  703,  703,  703,
        0,  686,    0,  686,  686,  686,  686,  686,  686,  686,
      686,  686,  686,  686,  686,  686,  686,  686,  686,  686,
      713,  713,  713,  713,  713,  713,  713,  713,  713,  713,
      713,  713,  713,  713,  713,  713,  713,  714,  714,  714,
      714,  714,  714,  714,  714,  714,  714,  714,  714,  714,
      714,  714,  714,  714,  715,  715,  715,  715,  715,  715,
      715,  715,  715,  715,  715,  715,  715,  715,  715,  715,

      715,  716,  716,  716,  716,  716,  716,  716,  716,  716,
      716,  716,  716,  716,  716,  716,  716,  716,  717,  717,
      717,  717,  717,  717,  717,  717,  717,  717,  717,  717,
      717,  717,  717,  717,  717,  718,  718,  718,  718,  718,
      718,  718,  718,  718,  718,  718,  718,  718,  718,  718,
      718,  718,  719,  719,  719,  719,  719,  719,  719,  719,
      719,  719,  719,  719,  719,  719,  719,  719,  719,  720,
      720,  720,  720,  720,  720,  720,  720,  720,  720,  720,
      720,  720,  720,  720,  720,  720,  721,  721,  721,  721,
      721,  721,  721,  721,  721,  721,  721,  721,  721,  721,

      721,  721,  721,  722,  722,  722,  722,  722,  722,  722,
      722,  722,  722,  722,  722,  722,  722,  722,  722,  722,
      724,  724,  724,  724,  724,  724,  724,  724,  724,  724,
      724,  724,  724,  724,  724,  724,  724,  725,  725,  725,
      725,  725,  725,  725,  725,  725,  725,  725,  725,  725,
      725,  725,  725,  725,  731,  731,  731,  731,  731,  731,
      731,  731,  731,  731,  731,  731,  731,  731,  731,  731,
      731,  732,  732,  732,  732,  732,  732,  732,  732,  732,
      732,  732,  732,  732,  732,  732,  732,  732,  733,  734,
      734,  734,  734,  734,  734,  734,  734,  734,  734,  734,

      734,  734,  734,  734,  734,  734,  735,  735,  735,  735,
      735,  735,  735,  735,  735,  735,  735,  735,  735,  735,
      735,  735,  735,  736,  736,  736,  736,  736,  736,  736,
      736,  736,  736,  736,  736,  736,  736,  736,  736,  736,
        0,    0,  856,  856,  856,  856,  856,  856,  856,  856,
        0,  856,  856,  856,  856,  733,  856,  856,  856,    0,
        0,    0,    0,    0,    0,  733,    0,  733,  733,  733,
      733,  733,  733,  733,  733,  733,  733,  733,  733,  733,
      733,  733,  733,  733,  744,  744,  744,  744,  744,  744,
      744,  744,  744,  744,  744,  744,  744,  744,  744,  744,

      744,  745,  745,  745,  745,  745,  745,  745,  745,  745,
      745,  745,  745,  745,  745,  745,  745,  745,  746,  746,
      746,  746,  746,  746,  746,  746,  746,  746,  746,  746,
      746,  746,  746,  746,  746,  747,  747,  747,  747,  747,
      747,  747,  747,  747,  747,  747,  747,  747,  747,  747,
      747,  747,  748,  748,  748,  748,  748,  748,  748,  748,
      748,  748,  748,  748,  748,  748,  748,  748,  748,  749,
      749,  749,  749,  749,  749,  749,  749,  749,  749,  749,
      749,  749,  749,  749,  749,  749,  750,  750,  750,  750,
      750,  750,  750,  750,  750,  750,  750,  750,  750,  750,

      750,  750,  750,  751,  751,  751,  751,  751,  751,  751,
      751,  751,  751,  751,  751,  751,  751,  751,  751,  751,
      752,  752,  752,  752,  752,  752,  752,  752,  752,  752,
      752,  752,  752,  752,  752,  752,  752,  753,  753,  753,
      753,  753,  753,  753,  753,  753,  753,  753,  753,  753,
      753,  753,  753,  753,  755,  755,  755,  755,  755,  755,
      755,  755,  755,  755,  755,  755,  755,  755,  755,  755,
      755,  756,  756,  756,  756,  756,  756,  756,  756,  756,
      756,  756,  756,  756,  756,  756,  756,  756,  762,  762,
      762,  762,  762,  762,  762,  762,  762,  762,  762,  762,

      762,  762,  762,  762,  762,  763,  763,  763,  763,  763,
      763,  763,  763,  763,  763,  763,  763,  763,  763,  763,
      763,  763,  765,  766,  767,    0,    0,    0,    0,    0,
        0,    0,  768,    0,  765,  766,  767,    0,  765,  766,
      767,  765,  766,  767,  768,    0,    0,    0,  768,    0,
        0,  768,  765,  766,  767,    0,    0,    0,    0,    0,
        0,    0,  768,  769,  765,  766,  767,    0,  765,  766,
      767,  765,  766,  767,  768,  769,    0,    0,  768,  769,
        0,  768,  769,  866,  866,  866,  866,  866,  866,  866,
      866,  866,  866,  769,  868,  868,  868,  868,  868,  868,

      868,  868,  868,  868,    0,  769,    0,    0,    0,  769,
        0,    0,  769,  770,  770,  770,  770,  770,  770,  770,
      770,  770,  770,  770,  770,  770,  770,  770,  770,  770,
      771,  771,  771,  771,  771,  771,  771,  771,  771,  771,
      771,  771,  771,  771,  771,  771,  771,  772,  773,  774,
        0,    0,  774,    0,    0,  773,    0,    0,    0,  772,
      773,  774,    0,  772,  773,  774,  772,  773,  774,  920,
      920,  920,  920,  920,  920,  920,  920,  772,  773,  774,
        0,    0,  774,    0,    0,  773,    0,    0,    0,  772,
      773,  774,    0,  772,  773,  774,  772,  773,  774,  775,

      776,  775,    0,    0,    0,  777,    0,    0,  777,    0,
        0,  775,  776,    0,    0,  775,  776,  777,  775,  776,
        0,  777,    0,    0,  777,    0,    0,    0,    0,  775,
      776,  775,    0,    0,    0,  777,    0,    0,  777,  778,
      778,  775,  776,    0,    0,  775,  776,  777,  775,  776,
        0,  777,  778,    0,  777,  779,  778,    0,    0,  778,
      780,  780,    0,    0,    0,    0,    0,  779,    0,  778,
      778,  779,  779,  780,  779,    0,  781,  780,    0,    0,
      780,    0,  778,    0,    0,  779,  778,    0,  781,  778,
      780,  780,  781,  781,    0,  781,  782,  779,    0,    0,

        0,  779,  779,  780,  779,  783,  781,  780,  782,    0,
      780,    0,  782,  782,    0,  782,    0,  783,  781,    0,
      784,  783,  781,  781,  783,  781,  782,    0,    0,    0,
        0,    0,  784,  784,    0,  783,  784,    0,  782,  784,
      786,    0,  782,  782,    0,  782,    0,  783,    0,    0,
      784,  783,  786,    0,  783,  785,  786,  785,    0,  786,
      787,    0,  784,  784,    0,    0,  784,  785,    0,  784,
      786,  785,  787,    0,  785,    0,  787,  787,    0,  787,
      788,    0,  786,  788,    0,  785,  786,  785,    0,  786,
      787,    0,  788,    0,    0,    0,  788,  785,    0,  788,

      789,  785,  787,    0,  785,  790,  787,  787,    0,  787,
      788,    0,  789,  788,    0,  789,  789,  790,    0,  789,
      792,  790,  788,    0,  790,  791,  788,    0,    0,  788,
      789,  791,  792,    0,  792,  790,  792,  791,    0,  792,
      793,  791,  789,    0,  791,  789,  789,  790,    0,  789,
      792,  790,  793,    0,  790,  791,  793,    0,    0,  793,
      794,  791,  792,    0,  792,  795,  792,  791,    0,  792,
      793,  791,  794,    0,  791,  803,  794,  795,  803,  794,
      795,  795,  793,    0,  795,  797,  793,  803,    0,  793,
      794,  803,  797,    0,  803,  795,    0,  797,    0,  796,

      796,  797,  794,    0,  797,  803,  794,  795,  803,  794,
      795,  795,  796,    0,  795,  797,  796,  803,    0,  796,
      798,  803,  797,    0,  803,    0,    0,  797,    0,  796,
      796,  797,  798,    0,  797,    0,  798,  798,    0,  798,
      799,  800,  796,    0,    0,    0,  796,    0,  800,  796,
      798,  799,  799,  800,    0,    0,  799,  800,    0,  799,
      800,    0,  798,    0,    0,    0,  798,  798,    0,  798,
      799,  800,    0,    0,    0,    0,    0,    0,  800,    0,
        0,  799,  799,  800,  801,    0,  799,  800,    0,  799,
      800,    0,    0,  802,  801,    0,  801,    0,    0,  804,

      801,    0,    0,  801,  802,  802,    0,    0,    0,  802,
        0,  804,  802,    0,  801,  804,  804,    0,  804,    0,
        0,    0,    0,  802,  801,    0,  801,    0,  806,  804,
      801,  806,    0,  801,  802,  802,    0,  807,    0,  802,
      806,  804,  802,    0,  806,  804,  804,  806,  804,  807,
        0,    0,    0,  807,  807,    0,  807,  808,  806,    0,
        0,  806,    0,  808,    0,    0,  809,  807,  809,  808,
      806,    0,    0,  808,  806,    0,  808,  806,  809,  807,
        0,    0,  809,  807,  807,  809,  807,  808,  810,    0,
        0,  810,    0,  808,    0,    0,  809,  811,  809,  808,

      810,    0,    0,  808,  810,    0,  808,  810,  809,  811,
      811,    0,  809,  811,    0,  809,  811,  812,  810,    0,
        0,  810,    0,    0,    0,    0,    0,  811,    0,  812,
      810,    0,  812,  812,  810,    0,  812,  810,  813,  811,
      811,    0,    0,  811,    0,    0,  811,  812,  814,    0,
      813,    0,  815,  815,  813,  814,    0,  813,  813,  812,
      814,    0,  812,  812,  814,  815,  812,  814,  813,  815,
        0,    0,  815,    0,    0,    0,    0,    0,  814,    0,
      813,    0,  815,  815,  813,  814,    0,  813,  813,  816,
      814,  817,    0,    0,  814,  815,  816,  814,    0,  815,

        0,  816,  815,  817,  818,  816,    0,  817,  816,    0,
      817,    0,    0,    0,    0,    0,  818,    0,    0,  816,
      818,  817,    0,  818,    0,  818,  816,    0,    0,  819,
        0,  816,    0,  817,  818,  816,  819,  817,  816,    0,
      817,  819,  820,    0,  820,  819,  818,    0,  819,    0,
      818,  821,    0,  818,  820,  818,    0,    0,  820,  819,
        0,  820,    0,  821,    0,    0,  819,  821,  821,    0,
      821,  819,  820,  822,  820,  819,    0,    0,  819,    0,
        0,  821,    0,  822,  820,  822,    0,    0,  820,  822,
      823,  820,  822,  821,    0,  824,  824,  821,  821,    0,

      821,    0,  823,  822,    0,    0,  823,  824,    0,  823,
        0,  824,  825,  822,  824,  822,    0,    0,    0,  822,
      823,    0,  822,    0,  825,  824,  824,  825,  825,    0,
        0,  825,  823,    0,    0,    0,  823,  824,    0,  823,
      826,  824,  825,  826,  824,    0,    0,  826,  828,    0,
        0,  828,  826,  830,  825,    0,  826,  825,  825,  826,
      828,  825,    0,    0,  828,  830,    0,  828,  829,  830,
      826,  830,  830,  826,    0,    0,    0,  826,  828,    0,
      829,  828,  826,  830,  829,  829,  826,  829,  831,  826,
      828,    0,    0,    0,  828,  830,    0,  828,  829,  830,

      831,  830,  830,    0,  831,  831,    0,  831,  832,    0,
      829,    0,  833,  833,  829,  829,  833,  829,  831,    0,
      832,    0,    0,    0,  832,  833,    0,  832,  834,  833,
      831,    0,  833,    0,  831,  831,    0,  831,  832,    0,
      834,    0,  833,  833,  834,  834,  833,  834,  835,    0,
      832,    0,    0,    0,  832,  833,    0,  832,  834,  833,
      835,    0,  833,    0,  835,  835,    0,  835,  836,  837,
      834,    0,  837,    0,  834,  834,    0,  834,  835,    0,
      836,  837,    0,    0,  836,  837,    0,  836,  837,  838,
      835,  836,    0,  838,  835,  835,    0,  835,  836,  837,

        0,  838,  837,    0,    0,  838,    0,    0,  838,    0,
      836,  837,    0,  839,  836,  837,    0,  836,  837,  838,
        0,  836,    0,  838,    0,  839,    0,    0,  840,  839,
      840,  838,  839,  841,    0,  838,    0,    0,  838,    0,
      840,    0,    0,  839,  840,  841,    0,  840,    0,  841,
        0,    0,  841,    0,    0,  839,  842,  842,  840,  839,
      840,    0,  839,  841,    0,    0,    0,    0,    0,  842,
      840,    0,  844,  842,  840,  841,  842,  840,  843,  841,
        0,  843,  841,    0,  844,    0,  842,  842,  844,    0,
      843,  844,    0,    0,  843,    0,    0,  843,    0,  842,

        0,    0,  844,  842,    0,    0,  842,    0,  843,    0,
        0,  843,    0,    0,  844,    0,    0,    0,  844,    0,
      843,  844,    0,    0,  843,    0,    0,  843,  848,  848,
      848,  848,  848,  848,  848,  848,  848,  848,  848,  848,
      848,  848,  848,  848,  848,  849,  849,  849,  849,  849,
      849,  849,  849,  849,  849,  849,  849,  849,  849,  849,
      849,  849,  850,  850,  850,  850,  850,  850,  850,  850,
      850,  850,  850,  850,  850,  850,  850,  850,  850,  851,
      851,  851,  851,  851,  851,  851,  851,  851,  851,  851,
      851,  851,  851,  851,  851,  851,  852,  852,  852,  852,

      852,  852,  852,  852,  852,  852,  852,  852,  852,  852,
      852,  852,  852,  853,  853,  853,  853,  853,  853,  853,
      853,  853,  853,  853,  853,  853,  853,  853,  853,  853,
      854,  854,  854,  854,  854,  854,  854,  854,  854,  854,
      854,  854,  854,  854,  854,  854,  854,  857,  857,  857,
      857,  857,  857,  857,  857,  857,  857,  857,  857,  857,
      857,  857,  857,  857,  858,  858,  858,  858,  858,  858,
      858,  858,  858,  858,  858,  858,  858,  858,  858,  858,
      858,  859,  859,  859,  859,  859,  859,  859,  859,  859,
      859,  859,  859,  859,  859,  859,  859,  859,  860,  860,

      860,  860,  860,  860,  860,  860,  860,  860,  860,  860,
      860,  860,  860,  860,  860,  862,  862,  862,  862,  862,
      862,  862,  862,  862,  862,  862,  862,  862,  862,  862,
      862,  862,  863,  863,  863,  863,  863,  863,  863,  863,
      863,  863,  863,  863,  863,  863,  863,  863,  863,  864,
      864,  864,  864,  864,  864,  864,  864,  864,  864,  864,
      864,  864,  864,  864,  864,  864,  865,  865,  865,  865,
      865,  865,  865,  865,  865,  865,  865,  865,  865,  865,
      865,  865,  865,  869,  869,  869,  869,  869,  869,  869,
      869,  869,  869,  869,  869,  869,  869,  869,  869,  869,

      876,  876,  876,  876,  876,  876,  876,  876,  876,  876,
      876,  876,  876,  876,  876,  876,  876,  877,  877,  877,
      877,  877,  877,  877,  877,  877,  877,  877,  877,  877,
      877,  877,  877,  877,  878,  878,  878,  878,  878,  878,
      878,  878,  878,  878,  878,  878,  878,  878,  878,  878,
      878,  879,  879,  879,  879,  879,  879,  879,  879,  879,
      879,  879,  879,  879,  879,  879,  879,  879,  880,  880,
      880,  880,  880,  880,  880,  880,  880,  880,  880,  880,
      880,  880,  880,  880,  880,  881,  881,  881,  881,  881,
      881,  881,  881,  881,  881,  881,  881,  881,  881,  881,

      881,  881,  882,  882,  882,  882,  882,  882,  882,  882,
      882,  882,  882,  882,  882,  882,  882,  882,  882,  883,
      883,  883,  883,  883,  883,  883,  883,  883,  883,  883,
      883,  883,  883,  883,  883,  883,  884,  884,  884,  884,
      884,  884,  884,  884,  884,  884,  884,  884,  884,  884,
      884,  884,  884,  885,  885,  885,  885,  885,  885,  885,
      885,  885,  885,  885,  885,  885,  885,  885,  885,  885,
      887,  887,  887,  887,  887,  887,  887,  887,  887,  887,
      887,  887,  887,  887,  887,  887,  887,  888,  888,  888,
      888,  888,  888,  888,  888,  888,  888,  888,  888,  888,

      888,  888,  888,  888,  889,  890,  891,  921,  921,  921,
      921,  921,  921,  921,  921,    0,  889,  890,  891,    0,
      889,  890,  891,  889,  890,  891,  922,  922,  922,  922,
      922,  922,  922,  922,  889,  890,  891,  889,  923,  923,
      923,  923,  923,  923,  923,  923,  889,  890,  891,    0,
      889,  890,  891,  889,  890,  891,  892,  893,  893,  893,
      893,  893,  893,  893,  893,  893,  893,  893,  893,  893,
      893,  893,  893,  893,  895,  895,  895,  895,  895,  895,
      895,  895,  895,  895,  895,  895,  895,  895,  895,  895,
      895,  896,  896,  896,  896,  896,  896,  896,  896,  896,

      896,  896,  896,  896,  896,  896,  896,  896,    0,    0,
        0,  892,  897,  897,  897,  897,  897,  897,  897,  897,
      897,  897,  897,  897,  897,  897,  897,  897,  897,  898,
      898,  898,  898,  898,  898,  898,  898,  898,  898,  898,
      898,  898,  898,  898,  898,  898,    0,    0,    0,  892,
      924,  924,  924,  924,  924,  924,  924,  924,    0,  892,
        0,  892,  892,  892,  892,  892,  892,  892,  892,  892,
      892,  892,  892,  892,  892,  892,  892,  892,  899,  899,
      899,  899,  899,  899,  899,  899,  899,  899,  899,  899,
      899,  899,  899,  899,  899,  900,  900,  900,  900,  900,

      900,  900,  900,  900,  900,  900,  900,  900,  900,  900,
      900,  900,  901,  901,  901,  901,  901,  901,  901,  901,
      901,  901,  901,  901,  901,  901,  901,  901,  901,  907,
      907,  907,  907,  907,  907,  907,  907,  907,  907,  907,
      907,  907,  907,  907,  907,  907,  908,  908,  908,  908,
      908,  908,  908,  908,  908,  908,  908,  908,  908,  908,
      908,  908,  908,  910,  911,  911,  911,  911,  911,  911,
      911,  911,  911,  911,  911,  911,  911,  911,  911,  911,
      911,  913,  913,  913,  913,  913,  913,  913,  913,  913,
      913,  913,  913,  913,  913,  913,  913,  913,  925,  925,

      925,  925,  925,  925,  925,  925,    0,    0,    0,    0,
        0,    0,    0,  910,  914,  914,  914,  914,  914,  914,
      914,  914,  914,  914,  914,  914,  914,  914,  914,  914,
      914,  915,  915,  915,  915,  915,  915,  915,  915,  915,
      915,  915,  915,  915,  915,  915,  915,  915,    0,    0,
        0,  910,  926,  926,  926,  926,  926,  926,  926,  926,
        0,  910,    0,  910,  910,  910,  910,  910,  910,  910,
      910,  910,  910,  910,  910,  910,  910,  910,  910,  910,
      916,  916,  916,  916,  916,  916,  916,  916,  916,  916,
      916,  916,  916,  916,  916,  916,  916,  917,  917,  917,

      917,  917,  917,  917,  917,  917,  917,  917,  917,  917,
      917,  917,  917,  917,  918,  918,  918,  918,  918,  918,
      918,  918,  918,  918,  918,  918,  918,  918,  918,  918,
      918,  919,  919,  919,  919,  919,  919,  919,  919,  919,
      919,  919,  919,  919,  919,  919,  919,  919,  927,  927,
      927,  927,  927,  927,  927,  927,  933,  933,  933,  933,
      933,  933,  933,  933,  933,  933,  933,  933,  933,  933,
      933,  933,  933,  934,  934,  934,  934,  934,  934,  934,
      934,  934,  934,  934,  934,  934,  934,  934,  934,  934,
      941,  941,  941,  941,  941,  941,  941,  941,  941,  941,

      941,  941,  941,  941,  941,  941,  941,  942,  942,  942,
      942,  942,  942,  942,  942,  942,  942,  942,  942,  942,
      942,  942,  942,  942,  944,  945,  946,    0,    0,    0,
        0,    0,    0,    0,  947,    0,  944,  945,  946,    0,
      944,  945,  946,  944,  945,  946,  947,    0,    0,    0,
      947,    0,    0,  947,  944,  945,  946,    0,    0,    0,
        0,    0,    0,    0,  947,  948,  944,  945,  946,    0,
      944,  945,  946,  944,  945,  946,  947,  948,    0,    0,
      947,  948,  949,  947,  948,    0,    0,    0,    0,    0,
      950,    0,    0,    0,  949,  948,    0,    0,  949,  949,

        0,  949,  950,  951,    0,  950,  950,  948,    0,  950,
      951,  948,  949,    0,  948,  951,    0,    0,  952,  951,
      950,    0,  951,    0,  949,    0,    0,    0,  949,  949,
      952,  949,  950,  951,  952,  950,  950,  952,    0,  950,
      951,  953,  953,  954,    0,  951,    0,    0,  952,  951,
        0,    0,  951,    0,  953,  954,    0,    0,  953,  954,
      952,  953,  954,  955,  952,  954,    0,  952,    0,    0,
        0,  953,  953,  954,    0,  955,    0,    0,  956,  955,
        0,  956,  955,    0,  953,  954,    0,  957,  953,  954,
      956,  953,  954,  955,  956,  954,    0,  956,    0,  957,

        0,    0,  959,  957,    0,  955,  957,  958,  956,  955,
        0,  956,  955,    0,  959,    0,    0,  957,  959,  958,
      956,  959,  958,  958,  956,    0,  958,  956,    0,  957,
        0,  960,  959,  957,    0,    0,  957,  958,    0,    0,
        0,    0,    0,  960,  959,    0,  961,  960,  959,  958,
      960,  959,  958,  958,    0,    0,  958,    0,  961,  962,
        0,  960,  961,    0,  962,  961,    0,  963,    0,    0,
        0,  962,    0,  960,  961,  962,  961,  960,  962,  963,
      960,    0,    0,  963,  964,    0,  963,    0,  961,  962,
        0,    0,  961,    0,  962,  961,  964,  963,    0,  965,

      964,  962,    0,  964,    0,  962,    0,    0,  962,  963,
        0,  965,  966,  963,  964,  965,  963,    0,  965,    0,
      967,    0,    0,  967,  966,    0,  964,    0,  966,  965,
      964,  966,  967,  964,    0,    0,  967,    0,    0,  967,
      968,  965,  966,  968,    0,  965,    0,    0,  965,    0,
      967,    0,  968,  967,  966,  969,  968,    0,  966,  968,
      970,  966,  967,    0,  971,  971,  967,  969,    0,  967,
      968,  969,  970,  968,  969,    0,  970,  971,    0,  970,
      972,  971,  968,    0,  971,  969,  968,    0,    0,  968,
      970,    0,  972,    0,  971,  971,  972,  969,    0,  972,

      973,  969,  970,    0,  969,  975,  970,  971,    0,  970,
      972,  971,  973,    0,  971,  976,  973,  975,    0,  973,
      975,  975,  972,    0,  975,  977,  972,  976,  977,  972,
      973,  976,    0,    0,  976,  975,    0,  977,    0,    0,
      978,  977,  973,    0,  977,  976,  973,  975,    0,  973,
      975,  975,  978,  979,  975,  977,  978,  976,  977,  978,
        0,  976,    0,    0,  976,  979,    0,  977,  980,  979,
      978,  977,  979,    0,  977,    0,    0,    0,  981,    0,
      980,    0,  978,  979,  980,  980,  978,  980,  982,  978,
      981,    0,    0,  983,  981,  979,    0,  981,  980,  979,

      982,    0,  979,    0,  982,  983,  983,  982,  981,  983,
      980,    0,  983,  986,  980,  980,    0,  980,  982,    0,
      981,    0,    0,  983,  981,  986,    0,  981,  984,  986,
      982,    0,  986,    0,  982,  983,  983,  982,  985,  983,
      984,    0,  983,  986,  984,    0,    0,  984,  987,  984,
      985,    0,    0,  985,  985,  986,    0,  985,  984,  986,
      987,    0,  986,    0,  987,    0,    0,  987,  985,  988,
      984,    0,    0,    0,  984,    0,    0,  984,  987,  984,
      985,  988,    0,  985,  985,  988,  988,  985,  988,  989,
      987,    0,    0,    0,  987,    0,    0,  987,    0,  988,

        0,  989,    0,    0,    0,  989,    0,    0,  989,  990,
      991,  988,  990,  991,    0,  988,  988,    0,  988,  989,
        0,  990,  991,    0,    0,  990,  991,    0,  990,  991,
        0,  989,    0,    0,  992,  989,  992,    0,  989,  990,
      991,    0,  990,  991,    0,    0,  992,    0,    0,    0,
      992,  990,  991,  992,    0,  990,  991,    0,  990,  991,
        0,    0,  993,    0,  992,    0,  992,    0,    0,  994,
      994,    0,  995,    0,  993,    0,  992,    0,  993,  993,
      992,  993,  994,  992,  995,    0,  994,  995,  995,  994,
        0,  995,  993,    0,  996,  996,    0,    0,    0,  994,

      994,    0,  995,    0,  993,    0,  996,    0,  993,  993,
      996,  993,  994,  996,  995,    0,  994,  995,  995,  994,
        0,  995,    0,    0,  996,  996, 1001,    0, 1001,    0,
        0,    0, 1002,    0, 1003,    0,  996,    0, 1001,    0,
      996,    0, 1001,  996, 1002, 1001, 1003, 1004, 1002, 1003,
     1003, 1002,    0, 1003,    0,    0, 1001,    0, 1001, 1004,
        0,    0, 1002, 1004, 1003,    0, 1004,    0, 1001,    0,
        0,    0, 1001,    0, 1002, 1001, 1003, 1004, 1002, 1003,
     1003, 1002, 1005, 1003, 1005,    0,    0, 1006, 1007, 1004,
        0,    0,    0, 1004, 1005,    0, 1004,    0, 1005, 1006,

     1007, 1005,    0, 1006, 1007,    0, 1006, 1007,    0,    0,
        0,    0, 1005,    0, 1005,    0,    0, 1006, 1007,    0,
        0,    0, 1008, 1008, 1005,    0,    0,    0, 1005, 1006,
     1007, 1005, 1009, 1006, 1007, 1008, 1006, 1007,    0, 1008,
        0,    0, 1008,    0, 1009, 1010,    0, 1009, 1009,    0,
        0, 1009, 1008, 1008, 1011,    0,    0, 1010, 1010,    0,
        0, 1010, 1009,    0, 1010, 1008, 1011, 1012,    0, 1008,
     1011,    0, 1008, 1011, 1009, 1010,    0, 1009, 1009, 1012,
        0, 1009,    0, 1012, 1011,    0, 1012, 1010, 1010, 1013,
        0, 1010,    0,    0, 1010, 1014, 1011, 1012, 1014,    0,

     1011, 1013,    0, 1011,    0, 1013,    0, 1014, 1013, 1012,
     1015, 1014,    0, 1012, 1014,    0, 1012,    0,    0, 1013,
     1016, 1015, 1015,    0,    0, 1014, 1015,    0, 1014, 1015,
        0, 1013, 1016,    0,    0, 1013, 1016, 1014, 1013, 1016,
     1015, 1014,    0,    0, 1014,    0,    0,    0,    0,    0,
     1016, 1015, 1015,    0,    0,    0, 1015,    0,    0, 1015,
        0,    0, 1016,    0,    0,    0, 1016,    0,    0, 1016,
     1026, 1026, 1026, 1026, 1026, 1026, 1026, 1026, 1026, 1026,
     1026, 1026, 1026, 1026, 1026, 1026, 1026, 1027, 1027, 1027,
     1027, 1027, 1027, 1027, 1027, 1027, 1027, 1027, 1027, 1027,

     1027, 1027, 1027, 1027, 1028, 1028, 1028, 1028, 1028, 1028,
     1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028, 1028,
     1028, 1029, 1029, 1029, 1029, 1029, 1029, 1029, 1029, 1029,
     1029, 1029, 1029, 1029, 1029, 1029, 1029, 1029, 1030, 1030,
     1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030,
     1030, 1030, 1030, 1030, 1030, 1031, 1031, 1031, 1031, 1031,
     1031, 1031, 1031, 1031, 1031, 1031, 1031, 1031, 1031, 1031,
     1031, 1031, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032,
     1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1033,
     1033, 1033, 1033, 1033, 1033, 1033, 1033, 1033, 1033, 1033,

     1033, 1033, 1033, 1033, 1033, 1033, 1034, 1034, 1034, 1034,
     1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
     1034, 1034, 1034, 1035, 1035, 1035, 1035, 1035, 1035, 1035,
     1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035,
     1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037,
     1037, 1037, 1037, 1037, 1037, 1037, 1037, 1038, 1038, 1038,
     1038, 1038, 1038, 1038, 1038, 1038, 1038, 1038, 1038, 1038,
     1038, 1038, 1038, 1038, 1044, 1044, 1044, 1044, 1044, 1044,
     1044, 1044, 1044, 1044, 1044, 1044, 1044, 1044, 1044, 1044,
     1044, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045,

     1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1046,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     1046,    0,    0,    0, 1046,    0,    0, 1046,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1046,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     1046,    0,    0,    0, 1046,    0,    0, 1046, 1048, 1049,
     1049, 1049, 1049, 1049, 1049, 1049, 1049, 1049, 1049, 1049,
     1049, 1049, 1049, 1049, 1049, 1049, 1050, 1050, 1050, 1050,
     1050, 1050, 1050, 1050, 1050, 1050, 1050, 1050, 1050, 1050,
     1050, 1050, 1050, 1051, 1051, 1051, 1051, 1051, 1051, 1051,

     1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051,
        0,    0,    0, 1048, 1055, 1055, 1055, 1055, 1055, 1055,
     1055, 1055, 1055, 1055, 1055, 1055, 1055, 1055, 1055, 1055,
     1055, 1056, 1056, 1056, 1056, 1056, 1056, 1056, 1056, 1056,
     1056, 1056, 1056, 1056, 1056, 1056, 1056, 1056,    0,    0,
        0, 1048,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1048,    0, 1048, 1048, 1048, 1048, 1048, 1048, 1048,
     1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048,
     1054, 1057, 1057, 1057, 1057, 1057, 1057, 1057, 1057, 1057,
     1057, 1057, 1057, 1057, 1057, 1057, 1057, 1057, 1060, 1062,

        0,    0,    0, 1060, 1061, 1061,    0,    0,    0,    0,
     1060, 1062,    0,    0, 1060, 1062, 1061, 1060, 1062,    0,
     1061,    0,    0, 1061,    0,    0,    0,    0, 1060, 1062,
     1054,    0,    0, 1060, 1061, 1061,    0,    0,    0,    0,
     1060, 1062,    0,    0, 1060, 1062, 1061, 1060, 1062,    0,
     1061,    0,    0, 1061,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1054,    0,
        0,    0,    0,    0,    0,    0,    0,    0, 1054,    0,
     1054, 1054, 1054, 1054, 1054, 1054, 1054, 1054, 1054, 1054,
     1054, 1054, 1054, 1054, 1054, 1054, 1054, 1063, 1064,    0,

        0,    0,    0,    0,    0,    0, 1065, 1066,    0, 1063,
     1064,    0,    0, 1063, 1064, 1063, 1063, 1064, 1065, 1066,
        0, 1066, 1065, 1066,    0, 1065, 1066, 1063, 1064,    0,
        0,    0,    0, 1068,    0,    0, 1065, 1066,    0, 1063,
     1064,    0,    0, 1063, 1064, 1063, 1063, 1064, 1065, 1066,
     1067, 1066, 1065, 1066,    0, 1065, 1066, 1067, 1068, 1069,
     1070,    0, 1067,    0,    0,    0, 1067,    0,    0, 1067,
     1068, 1069, 1070,    0, 1068, 1069, 1070, 1068, 1069, 1070,
     1067,    0,    0,    0,    0,    0,    0, 1067, 1068, 1069,
     1070,    0, 1067,    0,    0,    0, 1067,    0,    0, 1067,

     1068, 1069, 1070,    0, 1068, 1069, 1070, 1068, 1069, 1070,
     1071, 1071, 1072,    0,    0,    0,    0,    0, 1073,    0,
        0, 1073, 1071,    0, 1072,    0, 1071, 1074, 1072, 1071,
     1073, 1072,    0,    0, 1073,    0, 1074, 1073,    0, 1074,
     1071, 1071, 1072, 1074,    0,    0, 1074,    0, 1073,    0,
        0, 1073, 1071,    0, 1072,    0, 1071, 1074, 1072, 1071,
     1073, 1072, 1075, 1078, 1073,    0, 1074, 1073, 1076, 1074,
        0,    0,    0, 1074, 1075, 1078, 1074, 1075, 1075, 1078,
     1076, 1075, 1078, 1076, 1076,    0,    0, 1076,    0,    0,
        0,    0, 1075, 1078,    0,    0,    0,    0, 1076,    0,

        0,    0,    0, 1077, 1075, 1078,    0, 1075, 1075, 1078,
     1076, 1075, 1078, 1076, 1076, 1077, 1079, 1076, 1080, 1077,
     1077,    0, 1077, 1081, 1081,    0,    0,    0, 1079,    0,
     1080,    0, 1079, 1077, 1080, 1079, 1081, 1080,    0,    0,
     1081,    0,    0, 1081,    0, 1077, 1079,    0, 1080, 1077,
     1077,    0, 1077, 1081, 1081,    0, 1082,    0, 1079,    0,
     1080,    0, 1079,    0, 1080, 1079, 1081, 1080, 1082, 1083,
     1081, 1082, 1082, 1081,    0, 1082,    0,    0, 1084,    0,
        0, 1083,    0,    0,    0, 1083, 1082,    0, 1083,    0,
     1084, 1085, 1085,    0, 1084,    0,    0, 1084, 1082, 1083,

     1084, 1082, 1082, 1085,    0, 1082,    0, 1085, 1084,    0,
     1085, 1083,    0, 1086,    0, 1083, 1086,    0, 1083, 1087,
     1084, 1085, 1085,    0, 1084, 1086,    0, 1084,    0, 1086,
     1084, 1087, 1086, 1085, 1087, 1087,    0, 1085, 1087,    0,
     1085, 1088,    0, 1086,    0,    0, 1086,    0,    0, 1087,
        0, 1089,    0, 1088,    0, 1086,    0, 1088,    0, 1086,
     1088, 1087, 1086, 1089, 1087, 1087, 1090, 1089, 1087,    0,
     1089, 1088, 1091,    0,    0,    0,    0,    0, 1090,    0,
        0, 1089, 1090, 1088, 1091, 1090,    0, 1088, 1091, 1091,
     1088, 1091,    0, 1089, 1092,    0, 1090, 1089,    0,    0,

     1089,    0, 1091,    0, 1093,    0, 1092, 1093, 1090,    0,
     1092,    0, 1090, 1092, 1091, 1090, 1093,    0, 1091, 1091,
     1093, 1091,    0, 1093, 1092,    0, 1099,    0,    0,    0,
        0,    0, 1100,    0, 1093,    0, 1092, 1093, 1099,    0,
     1092,    0, 1099, 1092, 1100, 1099, 1093, 1101, 1100,    0,
     1093, 1100,    0, 1093, 1101,    0, 1099, 1102,    0, 1101,
        0,    0, 1100, 1101,    0,    0, 1101,    0, 1099, 1102,
        0,    0, 1099, 1102, 1100, 1099, 1102, 1101, 1100, 1104,
        0, 1100,    0,    0, 1101, 1103,    0, 1102,    0, 1101,
     1103, 1104,    0, 1101,    0, 1104, 1101, 1103, 1104, 1102,

        0, 1103,    0, 1102, 1103,    0, 1102, 1105,    0, 1104,
        0,    0,    0,    0,    0, 1103,    0, 1106,    0, 1105,
     1103, 1104, 1105, 1105,    0, 1104, 1105, 1103, 1104, 1106,
        0, 1103, 1107, 1106, 1103,    0, 1106, 1105,    0,    0,
        0,    0, 1108,    0, 1107,    0,    0, 1106, 1107, 1105,
        0, 1107, 1105, 1105, 1108,    0, 1105, 1108, 1108, 1106,
        0, 1108, 1107, 1106, 1109,    0, 1106, 1109,    0,    0,
        0,    0, 1108,    0, 1107,    0, 1109,    0, 1107,    0,
     1109, 1107,    0, 1109, 1108,    0,    0, 1108, 1108,    0,
        0, 1108,    0,    0, 1109,    0,    0, 1109,    0,    0,

        0,    0,    0,    0,    0,    0, 1109,    0,    0,    0,
     1109,    0,    0, 1109, 1115, 1115, 1115, 1115, 1115, 1115,
     1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115,
     1115, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116,
     1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 1118, 1119,
     1120, 1120, 1119,    0,    0,    0,    0,    0, 1121,    0,
     1118, 1119, 1120,    0, 1118, 1119, 1120, 1118, 1119, 1120,
     1121,    0,    0,    0, 1121,    0,    0, 1121, 1118, 1119,
     1120, 1120, 1119,    0,    0,    0,    0,    0, 1121,    0,
     1118, 1119, 1120,    0, 1118, 1119, 1120, 1118, 1119, 1120,

     1121,    0, 1122, 1123, 1121, 1122, 1123, 1121,    0,    0,
     1124, 1124, 1126,    0, 1122, 1123,    0,    0, 1122, 1123,
        0, 1122, 1123, 1124, 1126, 1126,    0, 1124, 1126,    0,
     1124, 1126, 1122, 1123,    0, 1122, 1123,    0,    0,    0,
     1124, 1124, 1126,    0, 1122, 1123,    0,    0, 1122, 1123,
        0, 1122, 1123, 1124, 1126, 1126, 1128, 1124, 1126,    0,
     1124, 1126, 1127, 1127,    0,    0,    0,    0, 1128,    0,
     1129, 1129, 1128,    0, 1127, 1128,    0,    0, 1127,    0,
        0, 1127,    0, 1129,    0,    0, 1128, 1129,    0,    0,
     1129,    0, 1127, 1127,    0,    0,    0,    0, 1128,    0,

     1129, 1129, 1128, 1130, 1127, 1128,    0,    0, 1127,    0,
     1130, 1127,    0, 1129,    0, 1130,    0, 1129, 1132, 1130,
     1129,    0, 1130, 1131, 1131,    0,    0,    0,    0,    0,
     1132, 1133,    0, 1130, 1132, 1131,    0, 1132,    0, 1131,
     1130,    0, 1131, 1133,    0, 1130,    0, 1133, 1132, 1130,
     1133,    0, 1130, 1131, 1131,    0,    0,    0,    0,    0,
     1132, 1133,    0,    0, 1132, 1131, 1134, 1132,    0, 1131,
        0,    0, 1131, 1133, 1136,    0, 1134, 1133, 1134, 1135,
     1133, 1135, 1134, 1136,    0, 1134, 1136,    0,    0,    0,
     1136, 1135,    0, 1136,    0, 1135, 1134,    0, 1135,    0,

        0,    0,    0,    0, 1136,    0, 1134,    0, 1134, 1135,
        0, 1135, 1134, 1136, 1137, 1134, 1136,    0,    0, 1138,
     1136, 1135,    0, 1136,    0, 1135, 1137, 1140, 1135, 1139,
     1137, 1138, 1137, 1137,    0, 1138,    0,    0, 1138, 1140,
     1139, 1139,    0, 1140, 1137, 1139, 1140,    0, 1139, 1138,
        0,    0,    0,    0,    0,    0, 1137, 1140,    0, 1139,
     1137, 1138, 1137, 1137,    0, 1138,    0, 1141, 1138, 1140,
     1139, 1139, 1142, 1140,    0, 1139, 1140, 1148, 1139, 1141,
     1141, 1147, 1147, 1141, 1142,    0, 1141, 1149, 1142, 1148,
        0, 1142,    0, 1148, 1147,    0, 1148, 1141, 1147, 1149,

        0, 1147, 1142, 1149,    0,    0, 1149, 1148,    0, 1141,
     1141, 1147, 1147, 1141, 1142,    0, 1141, 1149, 1142, 1148,
        0, 1142, 1150, 1148, 1147,    0, 1148, 1151, 1147, 1149,
        0, 1147,    0, 1149, 1150,    0, 1149, 1152, 1150, 1151,
     1152, 1150, 1153, 1151, 1151, 1153, 1151, 1154,    0, 1152,
        0,    0, 1150, 1152, 1153,    0, 1152, 1151, 1153, 1154,
        0, 1153,    0, 1154, 1150,    0, 1154, 1152, 1150, 1151,
     1152, 1150, 1153, 1151, 1151, 1153, 1151, 1154, 1156, 1152,
        0,    0,    0, 1152, 1153,    0, 1152, 1157, 1153, 1154,
     1156, 1153,    0, 1154, 1156, 1158, 1154, 1156,    0, 1157,

        0,    0,    0, 1157,    0,    0, 1157, 1158, 1156,    0,
        0, 1158, 1158,    0, 1158,    0, 1159, 1157,    0,    0,
     1156,    0,    0,    0, 1156, 1158,    0, 1156, 1159, 1157,
        0, 1160, 1159, 1157,    0, 1159, 1157, 1158,    0,    0,
     1161, 1158, 1158, 1160, 1158,    0, 1159, 1160, 1162,    0,
     1160,    0, 1161,    0,    0,    0, 1161,    0, 1159, 1161,
     1162, 1160, 1159,    0, 1162, 1159,    0, 1162,    0, 1164,
     1161,    0,    0, 1160,    0,    0,    0, 1160, 1162, 1165,
     1160, 1164, 1161,    0,    0, 1164, 1161,    0, 1164, 1161,
     1162, 1165,    0,    0, 1162, 1165, 1165, 1162, 1165, 1164,

     1166, 1167, 1167,    0,    0,    0,    0,    0,    0, 1165,
     1166, 1164, 1166, 1167,    0, 1164, 1166, 1167, 1164, 1166,
     1167, 1165,    0,    0,    0, 1165, 1165,    0, 1165, 1168,
     1166, 1167, 1167,    0,    0, 1168,    0,    0,    0, 1169,
     1166, 1168, 1166, 1167, 1170, 1168, 1166, 1167, 1168, 1166,
     1167, 1169,    0,    0, 1171, 1169, 1170, 1171, 1169, 1168,
     1170,    0,    0, 1170, 1172, 1168, 1171,    0,    0, 1169,
     1171, 1168,    0, 1171, 1170, 1168, 1172, 1172, 1168,    0,
     1172, 1169,    0, 1172, 1171, 1169, 1170, 1171, 1169,    0,
     1170, 1173, 1173, 1170, 1172,    0, 1171,    0,    0,    0,

     1171,    0,    0, 1171, 1173,    0, 1172, 1172, 1173,    0,
     1172, 1173, 1174, 1172, 1175,    0,    0,    0,    0,    0,
     1180, 1173, 1173,    0, 1174,    0, 1175,    0, 1174, 1175,
     1175, 1174, 1180, 1175, 1173, 1180, 1180,    0, 1173, 1180,
        0, 1173, 1174,    0, 1175,    0,    0,    0,    0,    0,
     1180,    0, 1181,    0, 1174,    0, 1175,    0, 1174, 1175,
     1175, 1174, 1180, 1175, 1181, 1180, 1180, 1182, 1181, 1180,
        0, 1181, 1183, 1184, 1183,    0,    0,    0,    0, 1182,
        0,    0, 1181, 1182, 1183, 1184, 1182,    0, 1183, 1184,
        0, 1183, 1184,    0, 1181,    0,    0, 1182, 1181,    0,

        0, 1181, 1183, 1184, 1183,    0,    0,    0, 1185, 1182,
        0,    0,    0, 1182, 1183, 1184, 1182, 1186, 1183, 1184,
     1185, 1183, 1184, 1189, 1185, 1188, 1188, 1185,    0, 1186,
     1189,    0,    0, 1186,    0, 1189, 1186, 1188, 1185, 1189,
        0, 1188, 1189,    0, 1188,    0,    0, 1186,    0,    0,
     1185,    0,    0, 1189, 1185, 1188, 1188, 1185,    0, 1186,
     1189, 1190,    0, 1186,    0, 1189, 1186, 1188,    0, 1189,
     1191, 1188, 1189, 1190, 1188,    0, 1192, 1190,    0, 1192,
     1190,    0, 1191,    0,    0,    0, 1191,    0, 1192, 1191,
        0, 1190, 1192,    0,    0, 1192,    0,    0,    0,    0,

     1191, 1193,    0, 1190,    0,    0, 1192, 1190,    0, 1192,
     1190,    0, 1191, 1193, 1194,    0, 1191, 1193, 1192, 1191,
     1193,    0, 1192, 1193,    0, 1192, 1194,    0,    0,    0,
     1194, 1193, 1194, 1194,    0,    0, 1195,    0,    0,    0,
        0,    0, 1196, 1193, 1194,    0,    0, 1193, 1195,    0,
     1193, 1195, 1195, 1193, 1196, 1195, 1194, 1197, 1196,    0,
     1194, 1196, 1194, 1194,    0,    0, 1195, 1198,    0, 1197,
        0,    0, 1196, 1197,    0,    0, 1197, 1199, 1195, 1198,
        0, 1195, 1195, 1198, 1196, 1195, 1198, 1197, 1196, 1199,
        0, 1196, 1202, 1199,    0,    0, 1199, 1198,    0, 1197,

        0, 1201, 1201, 1197, 1202, 1202, 1197, 1199, 1202, 1198,
        0, 1202,    0, 1198, 1201,    0, 1198, 1203, 1201, 1199,
        0, 1201, 1202, 1199,    0,    0, 1199, 1204,    0, 1203,
        0, 1201, 1201, 1203, 1202, 1202, 1203, 1205, 1202, 1204,
        0, 1202, 1206, 1204, 1201,    0, 1204, 1203, 1201, 1205,
        0, 1201, 1207, 1205, 1206,    0, 1205, 1204, 1206, 1203,
        0, 1206,    0, 1203, 1207,    0, 1203, 1205, 1207, 1204,
        0, 1207, 1206, 1204,    0,    0, 1204,    0,    0, 1205,
     1209,    0, 1207, 1205, 1206,    0, 1205,    0, 1206,    0,
     1210, 1206, 1209,    0, 1207, 1211, 1209, 1209, 1207, 1209,

     1212, 1207, 1210,    0,    0, 1214, 1210, 1211,    0, 1210,
     1209, 1211, 1212,    0, 1211,    0, 1212, 1214,    0, 1212,
     1210, 1214, 1209,    0, 1214, 1211, 1209, 1209,    0, 1209,
     1212,    0, 1210,    0,    0, 1214, 1210, 1211,    0, 1210,
     1215, 1211, 1212,    0, 1211,    0, 1212, 1214,    0, 1212,
        0, 1214, 1215,    0, 1214,    0, 1215,    0,    0, 1215,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     1215,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0, 1215,    0,    0,    0, 1215,    0,    0, 1215,
     1223,    0, 1223, 1223, 1223, 1223, 1224,    0, 1224, 1224,

     1224, 1224, 1225, 1225, 1225,    0, 1225, 1226,    0, 1226,
     1226, 1226, 1226, 1227, 1227, 1227,    0, 1227, 1228, 1228,
     1228, 1228, 1229, 1229, 1229,    0, 1229, 1231, 1231, 1231,
        0, 1231, 1232, 1232, 1232, 1232, 1232, 1232, 1233, 1233,
     1233, 1233, 1233, 1233, 1234, 1234, 1235,    0, 1235, 1235,
     1235, 1235, 1236,    0, 1236, 1236, 1236, 1236, 1237,    0,
     1237, 1237, 1237, 1237, 1238, 1238, 1238, 1238, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,

     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222

    } ;

static yyconst flex_int16_t yy_rule_linenum[156] =
    {   0,
      242,  243,  244,  245,  246,  247,  248,  249,  250,  251,
      252,  253,  254,  255,  256,  257,  258,  259,  260,  261,
      262,  263,  264,  265,  266,  267,  268,  269,  270,  271,
      272,  273,  274,  275,  276,  277,  278,  279,  280,  281,
      282,  283,  284,  285,  286,  287,  288,  289,  290,  291,
      292,  293,  294,  295,  296,  297,  298,  299,  300,  301,
      302,  303,  304,  305,  306,  307,  308,  309,  310,  311,
      312,  313,  314,  315,  316,  317,  318,  319,  320,  321,
      322,  323,  324,  325,  326,  327,  328,  329,  330,  331,
      332,  333,  334,  335,  336,  337,  338,  339,  340,  341,

      342,  343,  344,  345,  346,  347,  348,  349,  350,  351,
      352,  353,  354,  355,  356,  357,  358,  359,  360,  361,
      362,  363,  364,  365,  366,  367,  368,  369,  370,  371,
      372,  373,  374,  375,  376,  377,  378,  379,  380,  381,
      382,  383,  384,  385,  386,  387,  388,  389,  390,  391,
      392,  393,  394,  395,  398
    } ;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
#line 1 "lib/MapSetScanner.lpp"
/* $Id: MapSetScanner.lpp,v 1.4 2008-10-03 07:06:03 eric Exp $ -*- mode: c++ -*- */
/** \file MapSetScanner.ll Define the Flex lexical scanner */
#line 5 "lib/MapSetScanner.lpp"

#include "MapSetParser/MapSetParser.hpp"
#include "MapSetScanner.hpp"

/* import the parser's token type into a local typedef */
typedef w3c_sw::MapSetParser::token token;
typedef w3c_sw::MapSetParser::token_type token_type;

/* Work around an incompatibility in flex (at least versions 2.5.31 through
 * 2.5.33): it generates code that does not conform to C89.  See Debian bug
 * 333231 <http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=333231>.  */
// #undef yywrap	// ##flex2.5
// #define yywrap() 1	// ##flex2.5

/* By default yylex returns int, we use token_type. Unfortunately yyterminate
 * by default returns 0, which is not of token_type. */
#define yyterminate() return token::__EOF__

/* This disables inclusion of unistd.h, which is not available under Visual C++
 * on Win32. The C++ scanner uses STL streams instead. */
#define YY_NO_UNISTD_H

/*** Flex Declarations and Options ***/
/* enable c++ scanner class generation */
/* change the name of the scanner class. results in "MapSetFlexLexer" */
/* consider using class instead
 * %option yyclass="MapSetScanner"
 * void MapSetFlexLexer::LexerError( yyconst char msg[] )
 */
/* the manual says "somewhat more optimized" */
/* enable scanner to generate debug output. disable this for release
 * versions. */
/* no support for include files is planned */
/* enables the use of start condition stacks */
/* The following paragraph suffices to track locations accurately. Each time
 * yylex is invoked, the begin position is moved onto the end position. */
#line 60 "lib/MapSetScanner.lpp"
#define YY_USER_ACTION  yylloc->columns(yyleng);
#define YY_FATAL_ERROR(msg) do {		\
    throw msg;   \
} while(0)
/* START patterns for MapSet terminals */
/* <IRI_REF> ::= "<" (( [^<>\"{}|^`\\] - [#0000- ] ))* ">" */
/* <STRING_LITERAL_LONG2> ::= "'''" (( (( "'" | "''" ))? ( [^'\\] | ECHAR ) ))* "'''" */
/* END patterns for MapSet terminals */
/* START semantic actions for MapSet terminals */
#line 4541 "lib/MapSetScanner.cpp"

#define INITIAL 0

#ifndef YY_NO_UNISTD_H
/* Special case for "unistd.h", since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
#include <unistd.h>
/* %endif */
#endif

#ifndef YY_EXTRA_TYPE
#define YY_EXTRA_TYPE void *
#endif

/* %if-c-only Reentrant structure and macros (non-C++). */
/* %if-reentrant */
/* %if-c-only */
/* %endif */
/* %if-reentrant */
/* %endif */
/* %endif End reentrant structures and macros. */
/* %if-bison-bridge */
/* %endif */
/* %not-for-header */

/* %ok-for-header */

/* %endif */

#ifndef yytext_ptr
static void yy_flex_strncpy (char *,yyconst char *,int );
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * );
#endif

#ifndef YY_NO_INPUT
/* %if-c-only Standard (non-C++) definition */
/* %not-for-header */

/* %ok-for-header */

/* %endif */
#endif

/* %if-c-only */
/* %endif */

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k */
#define YY_READ_BUF_SIZE 16384
#else
#define YY_READ_BUF_SIZE 8192
#endif /* __ia64__ */
#endif

/* Copy whatever the last rule matched to the standard output. */
#ifndef ECHO
/* %if-c-only Standard (non-C++) definition */
/* %endif */
/* %if-c++-only C++ definition */
#define ECHO LexerOutput( yytext, yyleng )
/* %endif */
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
/* %% [5.0] fread()/read() definition of YY_INPUT goes here unless we're doing C++ \ */\
\
/* %if-c++-only C++ definition \ */\
	if ( (result = LexerInput( (char *) buf, max_size )) < 0 ) \
		YY_FATAL_ERROR( "input in flex scanner failed" );
/* %endif */

#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
/* %if-c-only */
/* %endif */
/* %if-c++-only */
#define YY_FATAL_ERROR(msg) LexerError( msg )
/* %endif */
#endif

/* %if-tables-serialization structures and prototypes */
/* %not-for-header */

/* %ok-for-header */

/* %not-for-header */

/* %tables-yydmap generated elements */
/* %endif */
/* end tables serialization structures and prototypes */

/* %ok-for-header */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1
/* %if-c-only Standard (non-C++) definition */
/* %endif */
/* %if-c++-only C++ definition */
#define YY_DECL int yyFlexLexer::yylex()
/* %endif */
#endif /* !YY_DECL */

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK break;
#endif

/* %% [6.0] YY_RULE_SETUP definition goes here */
#define YY_RULE_SETUP \
	YY_USER_ACTION

/* %not-for-header */

/** The main scanner function which does all the work.
 */
YY_DECL
{
	register yy_state_type yy_current_state;
	register char *yy_cp, *yy_bp;
	register int yy_act;
    
/* %% [7.0] user's declarations go here */
#line 241 "lib/MapSetScanner.lpp"

#line 4705 "lib/MapSetScanner.cpp"

	if ( !(yy_init) )
		{
		(yy_init) = 1;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! (yy_start) )
			(yy_start) = 1;	/* first start state */

		if ( ! yyin )
/* %if-c-only */
/* %endif */
/* %if-c++-only */
			yyin = & std::cin;
/* %endif */

		if ( ! yyout )
/* %if-c-only */
/* %endif */
/* %if-c++-only */
			yyout = & std::cout;
/* %endif */

		if ( ! YY_CURRENT_BUFFER ) {
			yyensure_buffer_stack ();
			YY_CURRENT_BUFFER_LVALUE =
				yy_create_buffer( yyin, YY_BUF_SIZE );
		}

		yy_load_buffer_state(  );
		}

	while ( 1 )		/* loops until end-of-file is reached */
		{
/* %% [8.0] yymore()-related code goes here */
		yy_cp = (yy_c_buf_p);

		/* Support of yytext. */
		*yy_cp = (yy_hold_char);

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

/* %% [9.0] code to set up and find next match goes here */
		yy_current_state = (yy_start);
yy_match:
		do
			{
			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
			if ( yy_accept[yy_current_state] )
				{
				(yy_last_accepting_state) = yy_current_state;
				(yy_last_accepting_cpos) = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 1223 )
					yy_c = yy_meta[(unsigned int) yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			++yy_cp;
			}
		while ( yy_current_state != 1222 );
		yy_cp = (yy_last_accepting_cpos);
		yy_current_state = (yy_last_accepting_state);

yy_find_action:
/* %% [10.0] code to find the action number goes here */
		yy_act = yy_accept[yy_current_state];

		YY_DO_BEFORE_ACTION;

/* %% [11.0] code for yylineno update goes here */

do_action:	/* This label is used only to access EOF actions. */

/* %% [12.0] debug code goes here */
		if ( yy_flex_debug )
			{
			if ( yy_act == 0 )
				std::cerr << "--scanner backing up\n";
			else if ( yy_act < 156 )
				std::cerr << "--accepting rule at line " << yy_rule_linenum[yy_act] <<
				         "(\"" << yytext << "\")\n";
			else if ( yy_act == 156 )
				std::cerr << "--accepting default rule (\"" << yytext << "\")\n";
			else if ( yy_act == 157 )
				std::cerr << "--(end of buffer or a NUL)\n";
			else
				std::cerr << "--EOF (start condition " << YY_START << ")\n";
			}

		switch ( yy_act )
	{ /* beginning of action switch */
/* %% [13.0] actions go here */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = (yy_hold_char);
			yy_cp = (yy_last_accepting_cpos);
			yy_current_state = (yy_last_accepting_state);
			goto yy_find_action;

case 1:
/* rule 1 can match eol */
YY_RULE_SETUP
#line 242 "lib/MapSetScanner.lpp"
{ yylloc->end.lines(1); }
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 243 "lib/MapSetScanner.lpp"
{ yylloc->step(); /* @@ needed? useful? */ }
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 244 "lib/MapSetScanner.lpp"
{return token::IT_REWRITEVAR;}
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 245 "lib/MapSetScanner.lpp"
{return token::IT_SERVER;}
	YY_BREAK
case 5:
YY_RULE_SETUP
#line 246 "lib/MapSetScanner.lpp"
{return token::IT_USER;}
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 247 "lib/MapSetScanner.lpp"
{return token::IT_PASSWORD;}
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 248 "lib/MapSetScanner.lpp"
{return token::IT_DATABASE;}
	YY_BREAK
case 8:
YY_RULE_SETUP
#line 249 "lib/MapSetScanner.lpp"
{return token::IT_STEMURI;}
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 250 "lib/MapSetScanner.lpp"
{return token::IT_PRIMARYKEY;}
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 251 "lib/MapSetScanner.lpp"
{return token::IT_SHAREDVARS;}
	YY_BREAK
case 11:
YY_RULE_SETUP
#line 252 "lib/MapSetScanner.lpp"
{return token::IT_INTERSECTION;}
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 253 "lib/MapSetScanner.lpp"
{return token::IT_PROMISCUOUS;}
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 254 "lib/MapSetScanner.lpp"
{return token::IT_VARNAMES;}
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 255 "lib/MapSetScanner.lpp"
{return token::IT_DRACONIAN;}
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 256 "lib/MapSetScanner.lpp"
{return token::IT_LABEL;}
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 257 "lib/MapSetScanner.lpp"
{return token::IT_GRAPH;}
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 258 "lib/MapSetScanner.lpp"
{return token::IT_BASE;}
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 259 "lib/MapSetScanner.lpp"
{return token::IT_PREFIX;}
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 260 "lib/MapSetScanner.lpp"
{return token::IT_SELECT;}
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 261 "lib/MapSetScanner.lpp"
{return token::IT_AS;}
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 262 "lib/MapSetScanner.lpp"
{return token::GT_LPAREN;}
	YY_BREAK
case 22:
YY_RULE_SETUP
#line 263 "lib/MapSetScanner.lpp"
{return token::GT_RPAREN;}
	YY_BREAK
case 23:
YY_RULE_SETUP
#line 264 "lib/MapSetScanner.lpp"
{return token::GT_TIMES;}
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 265 "lib/MapSetScanner.lpp"
{return token::IT_CONSTRUCT;}
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 266 "lib/MapSetScanner.lpp"
{return token::IT_FROM;}
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 267 "lib/MapSetScanner.lpp"
{return token::IT_NAMED;}
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 268 "lib/MapSetScanner.lpp"
{return token::IT_WHERE;}
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 269 "lib/MapSetScanner.lpp"
{return token::IT_GROUP;}
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 270 "lib/MapSetScanner.lpp"
{return token::IT_BY;}
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 271 "lib/MapSetScanner.lpp"
{return token::IT_HAVING;}
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 272 "lib/MapSetScanner.lpp"
{return token::IT_ORDER;}
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 273 "lib/MapSetScanner.lpp"
{return token::IT_ASC;}
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 274 "lib/MapSetScanner.lpp"
{return token::IT_DESC;}
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 275 "lib/MapSetScanner.lpp"
{return token::IT_LIMIT;}
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 276 "lib/MapSetScanner.lpp"
{return token::IT_OFFSET;}
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 277 "lib/MapSetScanner.lpp"
{return token::IT_BINDINGS;}
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 278 "lib/MapSetScanner.lpp"
{return token::GT_LCURLEY;}
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 279 "lib/MapSetScanner.lpp"
{return token::GT_RCURLEY;}
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 280 "lib/MapSetScanner.lpp"
{return token::IT_UNDEF;}
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 281 "lib/MapSetScanner.lpp"
{return token::GT_SEMI;}
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 282 "lib/MapSetScanner.lpp"
{return token::GT_DOT;}
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 283 "lib/MapSetScanner.lpp"
{return token::IT_OPTIONAL;}
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 284 "lib/MapSetScanner.lpp"
{return token::IT_SERVICE;}
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 285 "lib/MapSetScanner.lpp"
{return token::IT_BIND;}
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 286 "lib/MapSetScanner.lpp"
{return token::IT_MINUS;}
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 287 "lib/MapSetScanner.lpp"
{return token::IT_UNION;}
	YY_BREAK
case 47:
YY_RULE_SETUP
#line 288 "lib/MapSetScanner.lpp"
{return token::IT_FILTER;}
	YY_BREAK
case 48:
YY_RULE_SETUP
#line 289 "lib/MapSetScanner.lpp"
{return token::GT_COMMA;}
	YY_BREAK
case 49:
YY_RULE_SETUP
#line 290 "lib/MapSetScanner.lpp"
{return token::IT_a;}
	YY_BREAK
case 50:
YY_RULE_SETUP
#line 291 "lib/MapSetScanner.lpp"
{return token::GT_PIPE;}
	YY_BREAK
case 51:
YY_RULE_SETUP
#line 292 "lib/MapSetScanner.lpp"
{return token::GT_DIVIDE;}
	YY_BREAK
case 52:
YY_RULE_SETUP
#line 293 "lib/MapSetScanner.lpp"
{return token::GT_CARROT;}
	YY_BREAK
case 53:
YY_RULE_SETUP
#line 294 "lib/MapSetScanner.lpp"
{return token::GT_OPT;}
	YY_BREAK
case 54:
YY_RULE_SETUP
#line 295 "lib/MapSetScanner.lpp"
{return token::GT_PLUS;}
	YY_BREAK
case 55:
YY_RULE_SETUP
#line 296 "lib/MapSetScanner.lpp"
{return token::GT_NOT;}
	YY_BREAK
case 56:
YY_RULE_SETUP
#line 297 "lib/MapSetScanner.lpp"
{return token::GT_LBRACKET;}
	YY_BREAK
case 57:
YY_RULE_SETUP
#line 298 "lib/MapSetScanner.lpp"
{return token::GT_RBRACKET;}
	YY_BREAK
case 58:
YY_RULE_SETUP
#line 299 "lib/MapSetScanner.lpp"
{return token::IT_MEMBERS;}
	YY_BREAK
case 59:
YY_RULE_SETUP
#line 300 "lib/MapSetScanner.lpp"
{return token::IT_STARTS;}
	YY_BREAK
case 60:
YY_RULE_SETUP
#line 301 "lib/MapSetScanner.lpp"
{return token::IT_ENDS;}
	YY_BREAK
case 61:
YY_RULE_SETUP
#line 302 "lib/MapSetScanner.lpp"
{return token::IT_ANY;}
	YY_BREAK
case 62:
YY_RULE_SETUP
#line 303 "lib/MapSetScanner.lpp"
{return token::IT_UNORDERED;}
	YY_BREAK
case 63:
YY_RULE_SETUP
#line 304 "lib/MapSetScanner.lpp"
{return token::GT_OR;}
	YY_BREAK
case 64:
YY_RULE_SETUP
#line 305 "lib/MapSetScanner.lpp"
{return token::GT_AND;}
	YY_BREAK
case 65:
YY_RULE_SETUP
#line 306 "lib/MapSetScanner.lpp"
{return token::GT_EQUAL;}
	YY_BREAK
case 66:
YY_RULE_SETUP
#line 307 "lib/MapSetScanner.lpp"
{return token::GT_NEQUAL;}
	YY_BREAK
case 67:
YY_RULE_SETUP
#line 308 "lib/MapSetScanner.lpp"
{return token::GT_LT;}
	YY_BREAK
case 68:
YY_RULE_SETUP
#line 309 "lib/MapSetScanner.lpp"
{return token::GT_GT;}
	YY_BREAK
case 69:
YY_RULE_SETUP
#line 310 "lib/MapSetScanner.lpp"
{return token::GT_LE;}
	YY_BREAK
case 70:
YY_RULE_SETUP
#line 311 "lib/MapSetScanner.lpp"
{return token::GT_GE;}
	YY_BREAK
case 71:
YY_RULE_SETUP
#line 312 "lib/MapSetScanner.lpp"
{return token::IT_IN;}
	YY_BREAK
case 72:
YY_RULE_SETUP
#line 313 "lib/MapSetScanner.lpp"
{return token::IT_NOT;}
	YY_BREAK
case 73:
YY_RULE_SETUP
#line 314 "lib/MapSetScanner.lpp"
{return token::GT_MINUS;}
	YY_BREAK
case 74:
YY_RULE_SETUP
#line 315 "lib/MapSetScanner.lpp"
{return token::IT_STR;}
	YY_BREAK
case 75:
YY_RULE_SETUP
#line 316 "lib/MapSetScanner.lpp"
{return token::IT_LANG;}
	YY_BREAK
case 76:
YY_RULE_SETUP
#line 317 "lib/MapSetScanner.lpp"
{return token::IT_LANGMATCHES;}
	YY_BREAK
case 77:
YY_RULE_SETUP
#line 318 "lib/MapSetScanner.lpp"
{return token::IT_DATATYPE;}
	YY_BREAK
case 78:
YY_RULE_SETUP
#line 319 "lib/MapSetScanner.lpp"
{return token::IT_BOUND;}
	YY_BREAK
case 79:
YY_RULE_SETUP
#line 320 "lib/MapSetScanner.lpp"
{return token::IT_IRI;}
	YY_BREAK
case 80:
YY_RULE_SETUP
#line 321 "lib/MapSetScanner.lpp"
{return token::IT_URI;}
	YY_BREAK
case 81:
YY_RULE_SETUP
#line 322 "lib/MapSetScanner.lpp"
{return token::IT_BNODE;}
	YY_BREAK
case 82:
YY_RULE_SETUP
#line 323 "lib/MapSetScanner.lpp"
{return token::IT_RAND;}
	YY_BREAK
case 83:
YY_RULE_SETUP
#line 324 "lib/MapSetScanner.lpp"
{return token::IT_ABS;}
	YY_BREAK
case 84:
YY_RULE_SETUP
#line 325 "lib/MapSetScanner.lpp"
{return token::IT_CEIL;}
	YY_BREAK
case 85:
YY_RULE_SETUP
#line 326 "lib/MapSetScanner.lpp"
{return token::IT_FLOOR;}
	YY_BREAK
case 86:
YY_RULE_SETUP
#line 327 "lib/MapSetScanner.lpp"
{return token::IT_ROUND;}
	YY_BREAK
case 87:
YY_RULE_SETUP
#line 328 "lib/MapSetScanner.lpp"
{return token::IT_CONCAT;}
	YY_BREAK
case 88:
YY_RULE_SETUP
#line 329 "lib/MapSetScanner.lpp"
{return token::IT_STRLEN;}
	YY_BREAK
case 89:
YY_RULE_SETUP
#line 330 "lib/MapSetScanner.lpp"
{return token::IT_UCASE;}
	YY_BREAK
case 90:
YY_RULE_SETUP
#line 331 "lib/MapSetScanner.lpp"
{return token::IT_LCASE;}
	YY_BREAK
case 91:
YY_RULE_SETUP
#line 332 "lib/MapSetScanner.lpp"
{return token::IT_ENCODE_FOR_URI;}
	YY_BREAK
case 92:
YY_RULE_SETUP
#line 333 "lib/MapSetScanner.lpp"
{return token::IT_CONTAINS;}
	YY_BREAK
case 93:
YY_RULE_SETUP
#line 334 "lib/MapSetScanner.lpp"
{return token::IT_STRSTARTS;}
	YY_BREAK
case 94:
YY_RULE_SETUP
#line 335 "lib/MapSetScanner.lpp"
{return token::IT_STRENDS;}
	YY_BREAK
case 95:
YY_RULE_SETUP
#line 336 "lib/MapSetScanner.lpp"
{return token::IT_YEAR;}
	YY_BREAK
case 96:
YY_RULE_SETUP
#line 337 "lib/MapSetScanner.lpp"
{return token::IT_MONTH;}
	YY_BREAK
case 97:
YY_RULE_SETUP
#line 338 "lib/MapSetScanner.lpp"
{return token::IT_DAY;}
	YY_BREAK
case 98:
YY_RULE_SETUP
#line 339 "lib/MapSetScanner.lpp"
{return token::IT_HOURS;}
	YY_BREAK
case 99:
YY_RULE_SETUP
#line 340 "lib/MapSetScanner.lpp"
{return token::IT_MINUTES;}
	YY_BREAK
case 100:
YY_RULE_SETUP
#line 341 "lib/MapSetScanner.lpp"
{return token::IT_SECONDS;}
	YY_BREAK
case 101:
YY_RULE_SETUP
#line 342 "lib/MapSetScanner.lpp"
{return token::IT_TIMEZONE;}
	YY_BREAK
case 102:
YY_RULE_SETUP
#line 343 "lib/MapSetScanner.lpp"
{return token::IT_NOW;}
	YY_BREAK
case 103:
YY_RULE_SETUP
#line 344 "lib/MapSetScanner.lpp"
{return token::IT_MD5;}
	YY_BREAK
case 104:
YY_RULE_SETUP
#line 345 "lib/MapSetScanner.lpp"
{return token::IT_SHA1;}
	YY_BREAK
case 105:
YY_RULE_SETUP
#line 346 "lib/MapSetScanner.lpp"
{return token::IT_SHA224;}
	YY_BREAK
case 106:
YY_RULE_SETUP
#line 347 "lib/MapSetScanner.lpp"
{return token::IT_SHA256;}
	YY_BREAK
case 107:
YY_RULE_SETUP
#line 348 "lib/MapSetScanner.lpp"
{return token::IT_SHA384;}
	YY_BREAK
case 108:
YY_RULE_SETUP
#line 349 "lib/MapSetScanner.lpp"
{return token::IT_SHA512;}
	YY_BREAK
case 109:
YY_RULE_SETUP
#line 350 "lib/MapSetScanner.lpp"
{return token::IT_COALESCE;}
	YY_BREAK
case 110:
YY_RULE_SETUP
#line 351 "lib/MapSetScanner.lpp"
{return token::IT_IF;}
	YY_BREAK
case 111:
YY_RULE_SETUP
#line 352 "lib/MapSetScanner.lpp"
{return token::IT_STRLANG;}
	YY_BREAK
case 112:
YY_RULE_SETUP
#line 353 "lib/MapSetScanner.lpp"
{return token::IT_STRDT;}
	YY_BREAK
case 113:
YY_RULE_SETUP
#line 354 "lib/MapSetScanner.lpp"
{return token::IT_sameTerm;}
	YY_BREAK
case 114:
YY_RULE_SETUP
#line 355 "lib/MapSetScanner.lpp"
{return token::IT_isIRI;}
	YY_BREAK
case 115:
YY_RULE_SETUP
#line 356 "lib/MapSetScanner.lpp"
{return token::IT_isURI;}
	YY_BREAK
case 116:
YY_RULE_SETUP
#line 357 "lib/MapSetScanner.lpp"
{return token::IT_isBLANK;}
	YY_BREAK
case 117:
YY_RULE_SETUP
#line 358 "lib/MapSetScanner.lpp"
{return token::IT_isLITERAL;}
	YY_BREAK
case 118:
YY_RULE_SETUP
#line 359 "lib/MapSetScanner.lpp"
{return token::IT_isNUMERIC;}
	YY_BREAK
case 119:
YY_RULE_SETUP
#line 360 "lib/MapSetScanner.lpp"
{return token::IT_REGEX;}
	YY_BREAK
case 120:
YY_RULE_SETUP
#line 361 "lib/MapSetScanner.lpp"
{return token::IT_SUBSTR;}
	YY_BREAK
case 121:
YY_RULE_SETUP
#line 362 "lib/MapSetScanner.lpp"
{return token::IT_EXISTS;}
	YY_BREAK
case 122:
YY_RULE_SETUP
#line 363 "lib/MapSetScanner.lpp"
{return token::IT_COUNT;}
	YY_BREAK
case 123:
YY_RULE_SETUP
#line 364 "lib/MapSetScanner.lpp"
{return token::IT_GROUP_CONCAT;}
	YY_BREAK
case 124:
YY_RULE_SETUP
#line 365 "lib/MapSetScanner.lpp"
{return token::IT_SUM;}
	YY_BREAK
case 125:
YY_RULE_SETUP
#line 366 "lib/MapSetScanner.lpp"
{return token::IT_MIN;}
	YY_BREAK
case 126:
YY_RULE_SETUP
#line 367 "lib/MapSetScanner.lpp"
{return token::IT_MAX;}
	YY_BREAK
case 127:
YY_RULE_SETUP
#line 368 "lib/MapSetScanner.lpp"
{return token::IT_AVG;}
	YY_BREAK
case 128:
YY_RULE_SETUP
#line 369 "lib/MapSetScanner.lpp"
{return token::IT_SAMPLE;}
	YY_BREAK
case 129:
YY_RULE_SETUP
#line 370 "lib/MapSetScanner.lpp"
{return token::IT_SEPARATOR;}
	YY_BREAK
case 130:
YY_RULE_SETUP
#line 371 "lib/MapSetScanner.lpp"
{return token::GT_DTYPE;}
	YY_BREAK
case 131:
YY_RULE_SETUP
#line 372 "lib/MapSetScanner.lpp"
{yylval->p_BooleanRDFLiteral = driver->getBooleanRDFLiteral("true", 1); return token::IT_true;}
	YY_BREAK
case 132:
YY_RULE_SETUP
#line 373 "lib/MapSetScanner.lpp"
{yylval->p_BooleanRDFLiteral = driver->getBooleanRDFLiteral("false", 0); return token::IT_false;}
	YY_BREAK
case 133:
YY_RULE_SETUP
#line 374 "lib/MapSetScanner.lpp"
{yylval->p_URI = resolveBase(yytext, true); return token::IRI_REF;}
	YY_BREAK
case 134:
YY_RULE_SETUP
#line 375 "lib/MapSetScanner.lpp"
{yylval->p_URI = driver->ignorePrefix() ? driver->getURI(yytext) : resolvePrefix(yytext); return token::PNAME_NS;}
	YY_BREAK
case 135:
YY_RULE_SETUP
#line 376 "lib/MapSetScanner.lpp"
{yylval->p_URI = resolvePrefix(yytext); return token::PNAME_LN;}
	YY_BREAK
case 136:
YY_RULE_SETUP
#line 377 "lib/MapSetScanner.lpp"
{yylval->p_TTerm = driver->getBNode(yytext+2); return token::BLANK_NODE_LABEL;}
	YY_BREAK
case 137:
YY_RULE_SETUP
#line 378 "lib/MapSetScanner.lpp"
{yylval->p_Variable = driver->getVariable(yytext+1); return token::VAR1;}
	YY_BREAK
case 138:
YY_RULE_SETUP
#line 379 "lib/MapSetScanner.lpp"
{yylval->p_Variable = driver->getVariable(yytext+1); return token::VAR2;}
	YY_BREAK
case 139:
YY_RULE_SETUP
#line 380 "lib/MapSetScanner.lpp"
{yylval->p_LANGTAG = new LANGTAG(yytext+1); return token::LANGTAG;}
	YY_BREAK
case 140:
YY_RULE_SETUP
#line 381 "lib/MapSetScanner.lpp"
{return typedLiteral(yylval, token::INTEGER);}
	YY_BREAK
case 141:
YY_RULE_SETUP
#line 382 "lib/MapSetScanner.lpp"
{return typedLiteral(yylval, token::DECIMAL);}
	YY_BREAK
case 142:
YY_RULE_SETUP
#line 383 "lib/MapSetScanner.lpp"
{return typedLiteral(yylval, token::DOUBLE);}
	YY_BREAK
case 143:
YY_RULE_SETUP
#line 384 "lib/MapSetScanner.lpp"
{return typedLiteral(yylval, token::INTEGER_POSITIVE);}
	YY_BREAK
case 144:
YY_RULE_SETUP
#line 385 "lib/MapSetScanner.lpp"
{return typedLiteral(yylval, token::DECIMAL_POSITIVE);}
	YY_BREAK
case 145:
YY_RULE_SETUP
#line 386 "lib/MapSetScanner.lpp"
{return typedLiteral(yylval, token::DOUBLE_POSITIVE);}
	YY_BREAK
case 146:
YY_RULE_SETUP
#line 387 "lib/MapSetScanner.lpp"
{return typedLiteral(yylval, token::INTEGER_NEGATIVE);}
	YY_BREAK
case 147:
YY_RULE_SETUP
#line 388 "lib/MapSetScanner.lpp"
{return typedLiteral(yylval, token::DECIMAL_NEGATIVE);}
	YY_BREAK
case 148:
YY_RULE_SETUP
#line 389 "lib/MapSetScanner.lpp"
{return typedLiteral(yylval, token::DOUBLE_NEGATIVE);}
	YY_BREAK
case 149:
YY_RULE_SETUP
#line 390 "lib/MapSetScanner.lpp"
{return unescape(yylval, 1, token::STRING_LITERAL1);}
	YY_BREAK
case 150:
YY_RULE_SETUP
#line 391 "lib/MapSetScanner.lpp"
{return unescape(yylval, 1, token::STRING_LITERAL2);}
	YY_BREAK
case 151:
/* rule 151 can match eol */
YY_RULE_SETUP
#line 392 "lib/MapSetScanner.lpp"
{return unescape(yylval, 3, token::STRING_LITERAL_LONG1);}
	YY_BREAK
case 152:
/* rule 152 can match eol */
YY_RULE_SETUP
#line 393 "lib/MapSetScanner.lpp"
{return unescape(yylval, 3, token::STRING_LITERAL_LONG2);}
	YY_BREAK
case 153:
/* rule 153 can match eol */
YY_RULE_SETUP
#line 394 "lib/MapSetScanner.lpp"
{return token::NIL;}
	YY_BREAK
case 154:
/* rule 154 can match eol */
YY_RULE_SETUP
#line 395 "lib/MapSetScanner.lpp"
{yylval->p_TTerm = driver->createBNode(); return token::ANON;}
	YY_BREAK
case YY_STATE_EOF(INITIAL):
#line 397 "lib/MapSetScanner.lpp"
{ yyterminate();}
	YY_BREAK
case 155:
YY_RULE_SETUP
#line 398 "lib/MapSetScanner.lpp"
{
    std::stringstream s;
    s << "unexpected input: '" << yytext << "'";
    driver->error(*yylloc, s.str());
}
	YY_BREAK
case 156:
YY_RULE_SETUP
#line 404 "lib/MapSetScanner.lpp"
YY_FATAL_ERROR( "flex scanner jammed" );
	YY_BREAK
#line 5607 "lib/MapSetScanner.cpp"

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = (yy_hold_char);
		YY_RESTORE_YY_MORE_OFFSET

		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state(  );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = (yytext_ptr) + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++(yy_c_buf_p);
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
/* %% [14.0] code to do back-up for compressed tables and set up yy_cp goes here */
				yy_cp = (yy_last_accepting_cpos);
				yy_current_state = (yy_last_accepting_state);
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer(  ) )
			{
			case EOB_ACT_END_OF_FILE:
				{
				(yy_did_buffer_switch_on_eof) = 0;

				if ( yywrap(  ) )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				(yy_c_buf_p) =
					(yytext_ptr) + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				(yy_c_buf_p) =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
} /* end of yylex */
/* %ok-for-header */

/* %if-c++-only */
/* %not-for-header */

/* The contents of this function are C++ specific, so the () macro is not used.
 */
yyFlexLexer::yyFlexLexer( std::istream* arg_yyin, std::ostream* arg_yyout )
{
	yyin = arg_yyin;
	yyout = arg_yyout;
	yy_c_buf_p = 0;
	yy_init = 0;
	yy_start = 0;
	yy_flex_debug = 0;
	yylineno = 1;	// this will only get updated if %option yylineno

	yy_did_buffer_switch_on_eof = 0;

	yy_looking_for_trail_begin = 0;
	yy_more_flag = 0;
	yy_more_len = 0;
	yy_more_offset = yy_prev_more_offset = 0;

	yy_start_stack_ptr = yy_start_stack_depth = 0;
	yy_start_stack = NULL;

	yy_buffer_stack = 0;
	yy_buffer_stack_top = 0;
	yy_buffer_stack_max = 0;

	yy_state_buf = 0;

}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
yyFlexLexer::~yyFlexLexer()
{
	delete [] yy_state_buf;
	MapSetfree(yy_start_stack  );
	yy_delete_buffer( YY_CURRENT_BUFFER );
	MapSetfree(yy_buffer_stack  );
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
void yyFlexLexer::switch_streams( std::istream* new_in, std::ostream* new_out )
{
	if ( new_in )
		{
		yy_delete_buffer( YY_CURRENT_BUFFER );
		yy_switch_to_buffer( yy_create_buffer( new_in, YY_BUF_SIZE  ) );
		}

	if ( new_out )
		yyout = new_out;
}

#ifdef YY_INTERACTIVE
int yyFlexLexer::LexerInput( char* buf, int /* max_size */ )
#else
int yyFlexLexer::LexerInput( char* buf, int max_size )
#endif
{
	if ( yyin->eof() || yyin->fail() )
		return 0;

#ifdef YY_INTERACTIVE
	yyin->get( buf[0] );

	if ( yyin->eof() )
		return 0;

	if ( yyin->bad() )
		return -1;

	return 1;

#else
	(void) yyin->read( buf, max_size );

	if ( yyin->bad() )
		return -1;
	else
		return yyin->gcount();
#endif
}

void yyFlexLexer::LexerOutput( const char* buf, int size )
{
	(void) yyout->write( buf, size );
}
/* %ok-for-header */

/* %endif */

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
int yyFlexLexer::yy_get_next_buffer()
/* %endif */
{
    	register char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
	register char *source = (yytext_ptr);
	register int number_to_move, i;
	int ret_val;

	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr)) - 1;

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;

	else
		{
			int num_to_read =
			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = YY_CURRENT_BUFFER;

			int yy_c_buf_p_offset =
				(int) ((yy_c_buf_p) - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					MapSetrealloc((void *) b->yy_ch_buf,b->yy_buf_size + 2  );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = 0;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			(yy_c_buf_p) = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
						number_to_move - 1;

			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
			(yy_n_chars), (size_t) num_to_read );

		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	if ( (yy_n_chars) == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin  );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	if ((yy_size_t) ((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
		/* Extend the array by 50%, plus the number we really need. */
		yy_size_t new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) MapSetrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size  );
		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
	}

	(yy_n_chars) += number_to_move;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;

	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];

	return ret_val;
}

/* yy_get_previous_state - get the state just before the EOB char was reached */

/* %if-c-only */
/* %not-for-header */

/* %endif */
/* %if-c++-only */
    yy_state_type yyFlexLexer::yy_get_previous_state()
/* %endif */
{
	register yy_state_type yy_current_state;
	register char *yy_cp;
    
/* %% [15.0] code to get the start state into yy_current_state goes here */
	yy_current_state = (yy_start);

	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
		{
/* %% [16.0] code to find the next state goes here */
		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		if ( yy_accept[yy_current_state] )
			{
			(yy_last_accepting_state) = yy_current_state;
			(yy_last_accepting_cpos) = yy_cp;
			}
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 1223 )
				yy_c = yy_meta[(unsigned int) yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
		}

	return yy_current_state;
}

/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    yy_state_type yyFlexLexer::yy_try_NUL_trans( yy_state_type yy_current_state )
/* %endif */
{
	register int yy_is_jam;
    /* %% [17.0] code to find the next state, and perhaps do backing up, goes here */
	register char *yy_cp = (yy_c_buf_p);

	register YY_CHAR yy_c = 1;
	if ( yy_accept[yy_current_state] )
		{
		(yy_last_accepting_state) = yy_current_state;
		(yy_last_accepting_cpos) = yy_cp;
		}
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 1223 )
			yy_c = yy_meta[(unsigned int) yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
	yy_is_jam = (yy_current_state == 1222);

	return yy_is_jam ? 0 : yy_current_state;
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yyunput( int c, register char* yy_bp)
/* %endif */
{
	register char *yy_cp;
    
    yy_cp = (yy_c_buf_p);

	/* undo effects of setting up yytext */
	*yy_cp = (yy_hold_char);

	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		register int number_to_move = (yy_n_chars) + 2;
		register char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
		register char *source =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];

		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;

		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;

/* %% [18.0] update yylineno here */

	(yytext_ptr) = yy_bp;
	(yy_hold_char) = *yy_cp;
	(yy_c_buf_p) = yy_cp;
}
/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    int yyFlexLexer::yyinput()
/* %endif */
{
	int c;
    
	*(yy_c_buf_p) = (yy_hold_char);

	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			/* This was really a NUL. */
			*(yy_c_buf_p) = '\0';

		else
			{ /* need more input */
			int offset = (yy_c_buf_p) - (yytext_ptr);
			++(yy_c_buf_p);

			switch ( yy_get_next_buffer(  ) )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin );

					/*FALLTHROUGH*/

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap(  ) )
						return EOF;

					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					(yy_c_buf_p) = (yytext_ptr) + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
	*(yy_c_buf_p) = '\0';	/* preserve yytext */
	(yy_hold_char) = *++(yy_c_buf_p);

/* %% [19.0] update BOL and yylineno */

	return c;
}
/* %if-c-only */
/* %endif */

/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 * 
 * @note This function does not reset the start condition to @c INITIAL .
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yyrestart( std::istream* input_file )
/* %endif */
{
    
	if ( ! YY_CURRENT_BUFFER ){
        yyensure_buffer_stack ();
		YY_CURRENT_BUFFER_LVALUE =
            yy_create_buffer( yyin, YY_BUF_SIZE );
	}

	yy_init_buffer( YY_CURRENT_BUFFER, input_file );
	yy_load_buffer_state(  );
}

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 * 
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
/* %endif */
{
    
	/* TODO. We should be able to replace this entire function body
	 * with
	 *		yypop_buffer_state();
	 *		yypush_buffer_state(new_buffer);
     */
	yyensure_buffer_stack ();
	if ( YY_CURRENT_BUFFER == new_buffer )
		return;

	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	YY_CURRENT_BUFFER_LVALUE = new_buffer;
	yy_load_buffer_state(  );

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	(yy_did_buffer_switch_on_eof) = 1;
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_load_buffer_state()
/* %endif */
{
    	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
	(yy_hold_char) = *(yy_c_buf_p);
}

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * 
 * @return the allocated buffer state.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    YY_BUFFER_STATE yyFlexLexer::yy_create_buffer( std::istream* file, int size )
/* %endif */
{
	YY_BUFFER_STATE b;
    
	b = (YY_BUFFER_STATE) MapSetalloc(sizeof( struct yy_buffer_state )  );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) MapSetalloc(b->yy_buf_size + 2  );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file );

	return b;
}

/** Destroy the buffer.
 * @param b a buffer created with yy_create_buffer()
 * 
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_delete_buffer( YY_BUFFER_STATE b )
/* %endif */
{
    
	if ( ! b )
		return;

	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		MapSetfree((void *) b->yy_ch_buf  );

	MapSetfree((void *) b  );
}

/* %if-c-only */
/* %endif */

/* %if-c++-only */

extern "C" int isatty (int ) throw();

/* %endif */

/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a yyrestart() or at EOF.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_init_buffer( YY_BUFFER_STATE b, std::istream* file )
/* %endif */

{
	int oerrno = errno;
    
	yy_flush_buffer( b );

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then yy_init_buffer was _probably_
     * called from yyrestart() or through yy_get_next_buffer.
     * In that case, we don't want to reset the lineno or column.
     */
    if (b != YY_CURRENT_BUFFER){
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    }

/* %if-c-only */
/* %endif */
/* %if-c++-only */
	b->yy_is_interactive = 0;
/* %endif */
	errno = oerrno;
}

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * 
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_flush_buffer( YY_BUFFER_STATE b )
/* %endif */
{
    	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == YY_CURRENT_BUFFER )
		yy_load_buffer_state(  );
}

/* %if-c-or-c++ */
/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  if necessary.
 *  @param new_buffer The new state.
 *  
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::yypush_buffer_state (YY_BUFFER_STATE new_buffer)
/* %endif */
{
    	if (new_buffer == NULL)
		return;

	yyensure_buffer_stack();

	/* This block is copied from yy_switch_to_buffer. */
	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	/* Only push if top exists. Otherwise, replace top. */
	if (YY_CURRENT_BUFFER)
		(yy_buffer_stack_top)++;
	YY_CURRENT_BUFFER_LVALUE = new_buffer;

	/* copied from yy_switch_to_buffer. */
	yy_load_buffer_state(  );
	(yy_did_buffer_switch_on_eof) = 1;
}
/* %endif */

/* %if-c-or-c++ */
/** Removes and deletes the top of the stack, if present.
 *  The next element becomes the new top.
 *  
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::yypop_buffer_state (void)
/* %endif */
{
    	if (!YY_CURRENT_BUFFER)
		return;

	yy_delete_buffer(YY_CURRENT_BUFFER );
	YY_CURRENT_BUFFER_LVALUE = NULL;
	if ((yy_buffer_stack_top) > 0)
		--(yy_buffer_stack_top);

	if (YY_CURRENT_BUFFER) {
		yy_load_buffer_state(  );
		(yy_did_buffer_switch_on_eof) = 1;
	}
}
/* %endif */

/* %if-c-or-c++ */
/* Allocates the stack if it does not exist.
 *  Guarantees space for at least one push.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::yyensure_buffer_stack(void)
/* %endif */
{
	int num_to_alloc;
    
	if (!(yy_buffer_stack)) {

		/* First allocation is just for 2 elements, since we don't know if this
		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
		 * immediate realloc on the next call.
         */
		num_to_alloc = 1;
		(yy_buffer_stack) = (struct yy_buffer_state**)MapSetalloc
								(num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
								  
		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
				
		(yy_buffer_stack_max) = num_to_alloc;
		(yy_buffer_stack_top) = 0;
		return;
	}

	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){

		/* Increase the buffer to prepare for a possible push. */
		int grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = (yy_buffer_stack_max) + grow_size;
		(yy_buffer_stack) = (struct yy_buffer_state**)MapSetrealloc
								((yy_buffer_stack),
								num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		/* zero only the new slots.*/
		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
		(yy_buffer_stack_max) = num_to_alloc;
	}
}
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_push_state( int new_state )
/* %endif */
{
    	if ( (yy_start_stack_ptr) >= (yy_start_stack_depth) )
		{
		yy_size_t new_size;

		(yy_start_stack_depth) += YY_START_STACK_INCR;
		new_size = (yy_start_stack_depth) * sizeof( int );

		if ( ! (yy_start_stack) )
			(yy_start_stack) = (int *) MapSetalloc(new_size  );

		else
			(yy_start_stack) = (int *) MapSetrealloc((void *) (yy_start_stack),new_size  );

		if ( ! (yy_start_stack) )
			YY_FATAL_ERROR( "out of memory expanding start-condition stack" );
		}

	(yy_start_stack)[(yy_start_stack_ptr)++] = YY_START;

	BEGIN(new_state);
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_pop_state()
/* %endif */
{
    	if ( --(yy_start_stack_ptr) < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN((yy_start_stack)[(yy_start_stack_ptr)]);
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    int yyFlexLexer::yy_top_state()
/* %endif */
{
    	return (yy_start_stack)[(yy_start_stack_ptr) - 1];
}

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::LexerError( yyconst char msg[] )
{
    	std::cerr << msg << std::endl;
	exit( YY_EXIT_FAILURE );
}
/* %endif */

/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		yytext[yyleng] = (yy_hold_char); \
		(yy_c_buf_p) = yytext + yyless_macro_arg; \
		(yy_hold_char) = *(yy_c_buf_p); \
		*(yy_c_buf_p) = '\0'; \
		yyleng = yyless_macro_arg; \
		} \
	while ( 0 )

/* Accessor  methods (get/set functions) to struct members. */

/* %if-c-only */
/* %if-reentrant */
/* %endif */
/* %if-reentrant */
/* %endif */
/* %endif */

/* %if-reentrant */
/* %if-bison-bridge */
/* %endif */
/* %endif if-c-only */

/* %if-c-only */
/* %endif */

/* %if-c-only SNIP! this currently causes conflicts with the c++ scanner */
/* %if-reentrant */
/* %endif */
/* %endif */

/*
 * Internal utility routines.
 */

#ifndef yytext_ptr
static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )
{
	register int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
}
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * s )
{
	register int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
}
#endif

void *MapSetalloc (yy_size_t  size )
{
	return (void *) malloc( size );
}

void *MapSetrealloc  (void * ptr, yy_size_t  size )
{
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return (void *) realloc( (char *) ptr, size );
}

void MapSetfree (void * ptr )
{
	free( (char *) ptr );	/* see MapSetrealloc() for (char *) cast */
}

/* %if-tables-serialization definitions */
/* %define-yytables   The name for this specific scanner's tables. */
#define YYTABLES_NAME "yytables"
/* %endif */

/* %ok-for-header */

#line 404 "lib/MapSetScanner.lpp"


/* END semantic actions for MapSet terminals */

/* START MapSetScanner */
namespace w3c_sw {

MapSetScanner::MapSetScanner (MapSetDriver* driver, std::istream* in, std::ostream* out) : MapSetFlexLexer(in, out), driver(driver) {  }
MapSetScanner::~MapSetScanner () {  }

MapSetParser::token_type MapSetScanner::typedLiteral (MapSetParser::semantic_type*& yylval, MapSetParser::token_type tok) {
    std::istringstream is(yytext);

    switch (tok) {
    case token::INTEGER:
    case token::INTEGER_POSITIVE:
    case token::INTEGER_NEGATIVE:
	int i;
	is >> i;
	yylval->p_NumericRDFLiteral = driver->getNumericRDFLiteral(yytext, i);
	return tok;
    case token::DECIMAL:
    case token::DECIMAL_POSITIVE:
    case token::DECIMAL_NEGATIVE:
	float f;
	is >> f;
	yylval->p_NumericRDFLiteral = driver->getNumericRDFLiteral(yytext, f);
	return tok;
    case token::DOUBLE:
    case token::DOUBLE_POSITIVE:
    case token::DOUBLE_NEGATIVE:
	double d;
	is >> d;
	yylval->p_NumericRDFLiteral = driver->getNumericRDFLiteral(yytext, d);
	return tok;
    default: throw(new std::exception());
    }
}

MapSetParser::token_type MapSetScanner::unescape (MapSetParser::semantic_type*& yylval, size_t skip, MapSetParser::token_type tok){
    std::string* space = new std::string;
    for (size_t i = skip; i < yyleng-skip; i++) {
	if (yytext[i] == '\\') {
	    switch (yytext[++i]) {
	    case 't': (*space) += '\t'; break;
	    case 'n': (*space) += '\n'; break;
	    case 'r': (*space) += '\r'; break;
	    case 'b': (*space) += '\b'; break;
	    case 'f': (*space) += '\f'; break;
	    case '"': (*space) += '\"'; break;
	    case '\'': (*space) += '\''; break;
	    case '\\': (*space) += '\\'; break;
	    default: throw(new std::exception());
	    }
	} else {
	    (*space) += yytext[i];
	}
    }
    yylval->p_string = space;
    return tok;
}


const URI* MapSetScanner::resolvePrefix (const char* yytext){
    std::string ret(yytext);
    size_t index = ret.find(':');
    if (index == std::string::npos)
	throw(std::runtime_error("Inexplicable lack of ':' in prefix"));
    const URI* nspace = driver->getNamespace(ret.substr(0, index), true);
    if (nspace == NULL) {
	std::stringstream err;
	err << "Unknown prefix: \"" << ret.substr(0, index) << "\"";
	throw(std::runtime_error(err.str()));
    }
    ret.replace(0, index+1, nspace->getLexicalValue());
    return resolveBase(ret.c_str(), false);
}

void MapSetScanner::set_debug(bool b)
{
    yy_flex_debug = b;
}

/* END MapSetScanner */

const URI* MapSetScanner::resolveBase (const char* p_rel, bool stripDelims) {
    std::string stripped(p_rel);
    if (stripDelims) {
	stripped.replace(0, 1, "");
	stripped.replace(stripped.size()-1, 1, "");
    }
    return driver->getAbsoluteURI(stripped.c_str());

#if 0
    // was a transliteration of _generic.pm
    static const boost::regex re_scheme("^([a-zA-Z][a-zA-Z0-9.+-]*):");
    static const boost::regex re_authority("^((?:[a-zA-Z][a-zA-Z0-9.+-]*)?)(?://([^/?\\#]*))?(.*)$");
    static const boost::regex re_path("^((?:[^:/?\\#]+:)?(?://[^/?\\#]*)?)([^?\\#]*)(.*)$");

    boost::smatch what;
    URI* baseURI = driver->getBase();
    std::string base;
    if (baseURI != NULL)
	std::string base = baseURI->getLexicalValue();
    std::string base_scheme;
    if (base.size() > 0 && boost::regex_search(base, what, re_scheme))
	base_scheme = what[1];
    if (boost::regex_search(self, what, re_scheme) &&
	what[1] != base_schema)
	return driver->getURI(self.c_str());
    if (base.size() == 0)
	throw(std::runtime_error(((std::string)"no base declared while resolving relative URI ").append(abs)));

    std::string abs(self);
    if (!boost::regex_search(base, what, re_scheme))
	throw(std::runtime_error(((std::string)"resolving against base URI with no scheme ").append(base)));
    // !!! abs->scheme = base_scheme
    if (false) ; // ...

    if (!boost::regex_search(base, what, re_authority))
	throw(std::runtime_error(((std::string)"resolving against base URI with no authority ").append(base)));
    std::string base_authority(what[2]);

    if (!boost::regex_search(rel, what, re_path))
	throw(std::runtime_error(((std::string)"oddly failed to match re_path on ").append(rel)));
    std::string rel_path(what[2]);
    if (rel_path.find("/") == 0) return driver->getURI(abs.c_str());

#endif
}
} // END namespace w3c_sw

/* This implementation of MapSetFlexLexer::yylex() is required to fill the
 * vtable of the class MapSetFlexLexer. We define the scanner's main yylex
 * function via YY_DECL to reside in the MapSetScanner class instead. */

#ifdef yylex
#undef yylex
#endif

int MapSetFlexLexer::yylex()
{
    std::cerr << "in MapSetFlexLexer::yylex() !" << std::endl;
    return 0;
}


